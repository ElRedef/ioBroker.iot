{"version":3,"sources":["Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Logo","evt","f","target","files","r","window","FileReader","onload","e","contents","result","json","JSON","parse","native","common","name","props","onError","I18n","t","onLoad","toString","readAsText","alert","_id","this","instance","stringify","news","titleLang","desc","generateFile","input","document","createElement","setAttribute","addEventListener","handleFileSelect","click","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","title","upload","download","filename","obj","el","encodeURIComponent","style","display","body","appendChild","removeChild","Component","withStyles","theme","marginRight","marginTop","float","padding","width","Options","onAliveChanged","id","state","adapterName","setState","isInstanceAlive","val","inAction","toast","errorWithPercent","socket","getState","then","subscribeState","unsubscribeState","pass","length","match","attr","type","error","checkPassword","TextField","label","value","helperText","onChange","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","forceUserCreate","ack","Promise","resolve","getObject","enabled","setObject","catch","err","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","action","IconButton","key","close","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","text","errorText","column","columnSettings","renderInput","renderCheckbox","googleHome","newVal","changed","hintUnsaved","variant","button","disabled","resetCerts","fontWeight","columnLogo","renderCard","renderToast","minHeight","minWidth","marginBottom","maxWidth","height","verticalAlign","cannotUse","fontSize","fontStyle","ExtendedOptions","showSelectId","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","prefix","selected","types","onOk","renderSelect","marginLeft","getSelectIdDialog","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","getAdapterInstances","list","nsList","replace","showError","chips","split","filter","a","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","readOnly","copyToClipboard","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","i","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showListOfDevices","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","actions","sort","b","Icon","actionIcon","lineNum","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","channels","names","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","themeType","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","nameModified","devModified","devCount","ch","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","role","headerRow","headerCell","tableDiv","tableCell","lines","copy","placeholder","InputProps","endAdornment","renderDevices","renderConfirmDialog","renderListOfDevices","devLineEnabled","left","devSubLineEdit","spacing","main","OnOff","Brightness","RGB","AlisaDevices","iobID","includes","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","GoogleSmartNames","myTableRef","React","createRef","expertMode","localStorage","getItem","helpHidden","searchText","columns","field","editable","cellStyle","wordBreak","lookup","editComponent","rows","resize","newData","oldData","displayTraits","Array","isArray","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","nicknames","n","roomHint","manualModeHint","defaultNames","setItem","flex","components","Toolbar","tableRef","onRowClick","rowData","current","onTreeExpandChanged","tableData","path","parentChildData","row","element","parentId","data","icons","isLoading","actionsColumnIndex","paging","search","rowStyle","smartEnum","ioType","selectedRow","backgroundColor","onRowUpdate","onGHParamsChange","onRowDelete","App","extendedProps","encryptedFields","translations","require","showAckTempPasswordDialog","selectedTab","amazonAlexa","yandexAlisa","DialogContentText","loaded","default","AppBar","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","renderAckTempPasswordDialog","GenericApp","root","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","themeName","getThemeName","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.713d2b2a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from './Logo';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    checkPassword(pass) {\n        if (pass.length < 8 || !pass.match(/[a-z]/) || !pass.match(/[A-Z]/) || !pass.match(/\\d/)) {\n            return I18n.t('invalid_password_warning');\n        } else {\n            return false;\n        }\n    }\n\n    renderInput(title, attr, type) {\n        const error = attr === 'pass' && this.checkPassword(this.props.native[attr]);\n        return (<TextField\n            label={ I18n.t(title) }\n            error={ !!error  }\n            className={ this.props.classes.input }\n            value={ this.props.native[attr] }\n            type={ type || 'text' }\n            helperText={ error || '' }\n            onChange={ e => this.props.onChange(attr, e.target.value) }\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts(forceUserCreate) {\n        this.setState({ inAction: true });\n\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={ this.props.classes.tab }>\n                <Logo\n                    instance={ this.props.instance }\n                    common={ this.props.common }\n                    native={ this.props.native }\n                    onError={ text => this.setState({errorText: text}) }\n                    onLoad={ this.props.onLoad }\n                />\n                <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                    { this.renderInput('ioBroker.pro Login', 'login') }<br/>\n                    { this.renderInput('ioBroker.pro Password', 'pass', 'password') }<br/>\n                    { this.renderCheckbox('Amazon Alexa', 'amazonAlexa') }\n                    <FormControlLabel key=\"googleHome\" className={ this.props.classes.controlElement }\n                                      style={{ marginTop: 5 }}\n                        control={\n                          <Checkbox\n                              checked={this.props.native.googleHome}\n                              onChange={() => {\n                                  // activate alexa if google home is on (temporary)\n                                  const newVal = !this.props.native.googleHome;\n                                  this.props.onChange('googleHome', newVal, () =>\n                                      newVal && this.props.onChange('amazonAlexa', true));\n                              }}\n                              color=\"primary\"\n                          />\n                        }\n                        label={I18n.t('Google Home')}\n                    />\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa')}\n                    <br/>\n\n                    <p>{I18n.t('new_certs_tip')}</p>\n                    {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                    <Button variant=\"outlined\"\n                            className={ this.props.classes.button }\n                            disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                            title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                            onClick={ () => this.resetCerts() }>\n                        <IconReload style={{ marginRight: 8 }}/>{ I18n.t('Get new connection certificates') }\n                    </Button>\n\n                    <p>{I18n.t('new_credentials_tip')}</p>\n                    {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                    <Button variant=\"outlined\"\n                            className={ this.props.classes.button }\n                            disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                            title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                            onClick={ () => this.resetCerts(true) }>\n                        <IconReload  style={{ marginRight: 8 }}/>{ I18n.t('Create IoT credentials anew') }\n                    </Button>\n                    <p>{ Utils.renderTextWithA(I18n.t('forum_tip')) }</p>\n                    <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_tip')) }</p>\n                    <p style={{ fontWeight: 'bold', paddingTop: 20}}>{ Utils.renderTextWithA(I18n.t('help_link_tip1')) }</p>\n                    <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_link_tip2')) }</p>\n                    <p style={{ fontWeight: 'bold', color: 'red'}}>{ Utils.renderTextWithA(I18n.t('help_link_tip3')) }</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard() }</div>\n                { this.renderToast() }\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport IconCopy from '@iobroker/adapter-react/Components/CopyIcon';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID3\"\n                prefix={'../..'}\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><IconCopy /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><IconCopy /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout api-secret')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.calcNightscoutSecret()}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />) : null}\n                <br/>\n                <br/>\n                <div className={this.props.classes.controlElement}>\n                    <TextField\n                        label={I18n.t('Read blood sugar from')}\n                        className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n                        value={this.props.native.amazonAlexaBlood || ''}\n                        type=\"text\"\n                        onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                        margin=\"normal\"\n                    />\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                    <FormControlLabel  className={this.props.classes.controlElement}\n                        control={\n                            <Checkbox\n                                style={{paddingLeft: 30}}\n                                checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                                onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Short answer for blood sugar')}\n                    />\n                </div>\n                <br/>\n                {this.renderToast()}\n                {this.getSelectIdDialog('amazonAlexaBlood')}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({editId: ''})}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\n\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRead = '#00bc00';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\nconst actionsMapping = {\r\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\r\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLineName:  {\r\n        fontSize: 8,\r\n        fontStyle: 'italic',\r\n        display: 'block'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlexaSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editedSmartType: null,\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showListOfDevices: false,\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n        console.log('Send BROWSE!');\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n                    console.log('BROWSE received.');\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            })\r\n            .catch(e => this.setState({message: I18n.t('Error %s', e)}));\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\r\n        if (state && state.ack === true && state.val === true) {\r\n            this.devTimer && clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    let editedSmartType = null;\r\n                    if (!device.additionalApplianceDetails.group) {\r\n                        editedSmartType = device.additionalApplianceDetails.smartType;\r\n                    }\r\n\r\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) return 0;\r\n            if (a === 'turnOn') return -1;\r\n            if (b === 'turnOn') return 1;\r\n\r\n            if (a === 'turnOff') return -1;\r\n            if (b === 'turnOff') return 1;\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.indexOf(action) !== -1) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].friendlyName);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderSelectByOn(dev, lineNum, id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\r\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\r\n            }\r\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectTypeSelector(type, onChange) {\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\r\n            ];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\r\n            }\r\n            return (\r\n                <FormControl>\r\n                    <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\r\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n                </FormControl>);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n                        if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>));\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const id = dev.additionalApplianceDetails.id;\r\n            const name = dev.additionalApplianceDetails.name || id;\r\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n            if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n            }\r\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\r\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\r\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\r\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\r\n            </div>));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        let friendlyName = dev.friendlyName;\r\n        let title;\r\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\r\n            title = friendlyName;\r\n        } else {\r\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\r\n        }\r\n\r\n        let devCount = 0;\r\n        for (const ch in dev.additionalApplianceDetails.channels) {\r\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\r\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\r\n            }\r\n        }\r\n        devCount = devCount || 1;\r\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\r\n        const id = dev.additionalApplianceDetails.id;\r\n\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.indexOf(id) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (id === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        // If some of sub channels in change list or in last changed\r\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\r\n            const channels = dev.additionalApplianceDetails.channels;\r\n            try {\r\n                channels && Object.keys(channels).forEach(chan =>\r\n                    chan && channels[chan].forEach(el => {\r\n                        if (this.state.changed.indexOf(el.id) !== -1) {\r\n                            background = CHANGED_COLOR;\r\n                        } else if (this.state.lastChanged === el.id) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                    })\r\n                );\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        return [\r\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {devCount > 1 ?\r\n                        (<Badge badgeContent={devCount} color=\"primary\">\r\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\r\n                        </Badge>) :\r\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{title}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\r\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\r\n            </div>),\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            const editedSmartType = this.state.editedSmartType;\r\n\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return (<DialogSelectID\r\n                key=\"dialogSelectID1\"\r\n                prefix={'../..'}\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.friendlyName }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.friendlyName);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        return (\r\n            <form key=\"alexa\" className={this.props.classes.tab}>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     title={I18n.t('Show all devices for print out')}\r\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n                <TextField\r\n                    placeholder={I18n.t('Filter')}\r\n                    className={this.state.filter}\r\n                    value={this.state.filter}\r\n                    onChange={e => this.setState({filter: e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment: this.state.filter ? (\r\n                            <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                                <IconClear />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n                {this.renderDevices()}\r\n                {this.renderMessage()}\r\n                {this.renderEditDialog()}\r\n                {this.getSelectIdDialog()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderListOfDevices()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAlexaSmartNames.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlexaSmartNames);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\n\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRGB = '#ff7ee3';\r\nconst colorRead = '#00bc00';\r\n//const colorThermometer = '#bc1600';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\n\r\nconst actionsMapping = {\r\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\r\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\r\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA', 'THERMOSTAT.AC', 'VACUUM_CLEANER'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        minWidth: 100,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        paddingLeft: 70,\r\n        //width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLine:  {\r\n        fontSize: 10,\r\n        fontStyle: 'italic',\r\n        display: 'inline-block',\r\n        marginLeft: 15\r\n    },\r\n    devSubLineSetId:  {\r\n        fontStyle: 'italic',\r\n        display: 'block',\r\n        color: '#999'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlisaDevices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n\r\n        this.lastBrowse = Date.now();\r\n\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.iobID === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.name;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) {\r\n                return 0;\r\n            }\r\n            if (a === 'OnOff') {\r\n                return -1;\r\n            }\r\n            if (b === 'OnOff') {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.includes(action)) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push(<span key={action} title={actionsMapping[action].desc}>\r\n                    <Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/>\r\n                </span>);\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].name);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\r\n            ];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\r\n            }\r\n            return (\r\n                <FormControl>\r\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\r\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n                </FormControl>);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        const id = dev.main.getId;\r\n        const name = dev.func;\r\n        let background = this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n            background = LAST_CHANGED_COLOR;\r\n        }*/\r\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\r\n            <div className={classes.devSubSubLine}>\r\n                <div>{dev.main.getId}</div>\r\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\r\n            </div>\r\n\r\n        </div>));\r\n\r\n        dev.attributes.forEach(attr => {\r\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\r\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\r\n                <div className={classes.devSubSubLine}>\r\n                    <div>{attr.getId}</div>\r\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\r\n                </div>\r\n            </div>));\r\n        });\r\n\r\n        /*if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n                            background = LAST_CHANGED_COLOR;\r\n                        }\r\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>));\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n        }*/\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\r\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (dev.iobID === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        //const isComplex = dev.\r\n\r\n        return [\r\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {dev.attributes.length ?\r\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\r\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\r\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\r\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n\r\n            </div>),\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return (<DialogSelectID\r\n                key=\"dialogSelectAlisa\"\r\n                prefix={'../..'}\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.name }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        return (\r\n            <form key=\"alexa\" className={this.props.classes.tab}>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     title={I18n.t('Show all devices for print out')}\r\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n                <TextField\r\n                    placeholder={I18n.t('Filter')}\r\n                    className={this.state.filter}\r\n                    value={this.state.filter}\r\n                    onChange={e => this.setState({filter: e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment: this.state.filter ? (\r\n                            <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                                <IconClear />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n                {this.renderDevices()}\r\n                {this.renderMessage()}\r\n                {this.renderEditDialog()}\r\n                {this.getSelectIdDialog()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderListOfDevices()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAlisaDevices.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlisaDevices);\r\n","import React, {Component, forwardRef} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialTable from 'material-table';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport ExpertIcon from '@iobroker/adapter-react/Components/ExpertIcon'\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    tableDiv: {\r\n        height: 'calc(100% - 48px)',\r\n        overflow: 'auto',\r\n    },\r\n    searchText: {\r\n        width: 150,\r\n        marginLeft: theme.spacing(1),\r\n        verticalAlign: 'middle'\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    }\r\n});\r\n\r\nclass GoogleSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myTableRef =  React.createRef();\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            expertMode: window.localStorage.getItem('App.expertMode') !== 'true',\r\n            helpHidden: window.localStorage.getItem('App.helpHidden') === 'true',\r\n            showSelectId: false,\r\n            searchText: '',\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: '',\r\n            columns: [\r\n                {title: I18n.t('ID'), field: 'id', editable: 'never', cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                }},\r\n                {title: I18n.t('Smart names'), field: 'name.nicknames'},\r\n                {title: I18n.t('ioBType'), field: 'ioType', editable: 'never', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                }},\r\n                {title: I18n.t('Type'), field: 'type',  lookup: {\r\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\r\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\r\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\r\n                    'action.devices.types.AWNING':          'Awning',\r\n                    'action.devices.types.BLINDS':          'Blinds',\r\n                    'action.devices.types.BOILER':          'Boiler',\r\n                    'action.devices.types.CAMERA':          'Camera',\r\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\r\n                    'action.devices.types.CURTAIN':         'Curtain',\r\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\r\n                    'action.devices.types.DOOR':            'Door',\r\n                    'action.devices.types.DRYER':           'Dryer',\r\n                    'action.devices.types.FAN':             'Fan',\r\n                    'action.devices.types.FIREPLACE':       'Fireplace',\r\n                    'action.devices.types.GARAGE':          'Garage',\r\n                    'action.devices.types.GATE':            'Gate',\r\n                    'action.devices.types.HEATER':          'Heater',\r\n                    'action.devices.types.HOOD':            'Hood',\r\n                    'action.devices.types.KETTLE':          'Kettle',\r\n                    'action.devices.types.LIGHT':           'Light',\r\n                    'action.devices.types.LOCK':            'Lock',\r\n                    'action.devices.types.MOP':             'Mop',\r\n                    'action.devices.types.MICROWAVE':       'Microwave',\r\n                    'action.devices.types.OUTLET':          'Outlet',\r\n                    'action.devices.types.OVEN':            'Oven',\r\n                    'action.devices.types.PERGOLA':         'Pergola',\r\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\r\n                    'action.devices.types.SCENE':           'Scene',\r\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\r\n                    'action.devices.types.SENSOR':          'Sensor',\r\n                    'action.devices.types.SHUTTER':         'Shutter',\r\n                    'action.devices.types.SHOWER':          'Shower',\r\n                    'action.devices.types.SPEAKER':         'Speaker',\r\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\r\n                    'action.devices.types.SWITCH':          'Switch',\r\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\r\n                    'action.devices.types.VACUUM':          'Vacuum',\r\n                    'action.devices.types.VALVE':           'Valve',\r\n                    'action.devices.types.WASHER':          'Washer',\r\n                    'action.devices.types.WATERHEATER':     'Water heater',\r\n                    'action.devices.types.WINDOW':          'Window'\r\n                }},\r\n                {title: I18n.t('Function/Trait'), field: 'displayTraits',  lookup: {\r\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\r\n                    'action.devices.traits.Brightness':     'Brightness',\r\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\r\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\r\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\r\n                    // 'action.devices.traits.Dock':        'Dock',\r\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\r\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\r\n                    // 'action.devices.traits.Locator':     'Locator',\r\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\r\n                    'action.devices.traits.Modes':          'Modes',\r\n                    'action.devices.traits.OnOff':          'OnOff',\r\n                    'action.devices.traits.OpenClose':      'OpenClose',\r\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\r\n                    'action.devices.traits.Scene':          'Scene',\r\n                    // 'action.devices.traits.Sensor':      'Sensor',\r\n                    'action.devices.traits.StartStop':      'StartStop',\r\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\r\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\r\n                    // 'action.devices.traits.Timer':       'Timer',\r\n                    'action.devices.traits.Toggles':        'Toggles',\r\n                    'action.devices.traits.Volume':         'Volume',\r\n                    }},\r\n\r\n                {title: I18n.t('Attributes'), field: 'displayAttributes',   cellStyle: {\r\n                        maxWidth: '12rem',\r\n                        overflow: 'hidden',\r\n                        wordBreak: 'break-all'\r\n                    },\r\n                    expertMode: true,\r\n                    editComponent: props => (<textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                          value={props.value}\r\n                          onChange={e => props.onChange(e.target.value)}\r\n                        />)\r\n                },\r\n                {title: I18n.t('Room'), field: 'roomHint', editable: 'never'},\r\n                {title: I18n.t('Auto'), field: 'smartEnum', editable: 'never',\r\n                    cellStyle: {\r\n                        maxWidth: '3rem',\r\n                        overflow: 'hidden',\r\n                        wordBreak: 'break-all'\r\n                    },\r\n                    expertMode: true,\r\n                },\r\n                {title: I18n.t('Conversation to GH'), field: 'displayConv2GH',  cellStyle: {\r\n                        maxWidth: '4rem',\r\n                        overflow: 'hidden',\r\n                        wordBreak: 'break-all'\r\n                    },\r\n                    expertMode: true,\r\n                    editComponent: props => (\r\n                        <div>Conversation to Google Home = function(value)&#123; <br/>\r\n                            <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                value={props.value}\r\n                                onChange={e => props.onChange(e.target.value)}\r\n                            />\r\n                            &#125;\r\n                        </div>\r\n                    )\r\n                },\r\n                { title: I18n.t('Conversation to ioB'), field: 'displayConv2iob', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                    },\r\n                    expertMode: true,\r\n                    editComponent: props => (\r\n                        <div>Conversation to ioBroker = function(value)&#123; <br/>\r\n                            <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                value={props.value}\r\n                                onChange={e => props.onChange(e.target.value)}\r\n                            />\r\n                            &#125;\r\n                        </div>\r\n                    )},\r\n              ]\r\n        };\r\n\r\n        this.timerChanged        = null;\r\n        this.browseTimer         = null;\r\n        this.browseTimerCount    = 0;\r\n        this.editedSmartName     = '';\r\n\r\n        this.waitForUpdateID     = null;\r\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n        console.log('Send BROWSE!');\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n                    console.log('BROWSE received.');\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectByOn(id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\r\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\r\n            }\r\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    onGHParamsChange(newData, oldData) {\r\n        this.addChanged(newData.id, () => {\r\n            this.props.socket.getObject(newData.id)\r\n                .then(obj => {\r\n                    if (!obj || !obj.common) {\r\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\r\n                    }\r\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\r\n                        if (!Array.isArray(newData.displayTraits)) {\r\n                            newData.displayTraits=[newData.displayTraits]\r\n                        }\r\n\r\n                        obj.common.smartName.ghTraits = newData.displayTraits;\r\n                    }\r\n                    if (newData.type !== oldData.type) {\r\n                        obj.common.smartName.ghType = newData.type;\r\n                    }\r\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\r\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\r\n                        try {\r\n                            if (obj.common.smartName.ghAttributes) {\r\n                                JSON.parse(obj.common.smartName.ghAttributes)\r\n                            }\r\n                        } catch (error) {\r\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')});\r\n                        }\r\n                    }\r\n                    if (newData.conv2GH) {\r\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\r\n                    }\r\n                    if (newData.conv2iob) {\r\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\r\n                    }\r\n                    return this.props.socket.setObject(newData.id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(newData.id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return (<DialogSelectID\r\n                key=\"dialogSelectGoogle\"\r\n                prefix={'../..'}\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                if (!obj.common) {\r\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\r\n                                }\r\n\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n                                \r\n                                if (!obj.common.smartName) {\r\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\r\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\r\n                                } else {\r\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\r\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\r\n                                }\r\n                                \r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => {\r\n                                        this.informInstance(obj._id);\r\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\r\n                                    })\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Function') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Room') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                            <div className={ classes.tableCell }>{ item.name.nicknames.join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.displayTraits.map(n => n.replace('action.devices.traits.', '')).join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.roomHint }</div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name.nicknames.join(', ') + '\\t' + item.displayTraits + '\\t' + item.roomHint);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        const manualModeHint = I18n.t('manualModeHint');\r\n        const searchText = this.state.searchText.toLowerCase();\r\n        const devices = this.state.searchText ? this.state.devices.filter(item =>\r\n            item.name?.name?.toLowerCase().includes(searchText) ||\r\n            item.name?.defaultNames?.find(n => n.toLowerCase().includes(searchText)) ||\r\n            item.name?.nicknames?.find(n => n.toLowerCase().includes(searchText)))\r\n            : this.state.devices;\r\n\r\n        return <form key=\"gh\" className={this.props.classes.tab}>\r\n            <Toolbar variant=\"dense\">\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab style={{marginLeft: '1rem'}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                     onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n                <Fab style={{marginLeft: '1rem'}} size=\"small\" color={this.state.helpHidden ? 'default' : 'primary'} aria-label=\"Help\" className={this.props.classes.button}\r\n                     title={I18n.t('Show/Hide help')}\r\n                     onClick={() => {\r\n                         window.localStorage.setItem('App.helpHidden', this.state.helpHidden ? 'false' : 'true');\r\n                         this.setState({helpHidden: !this.state.helpHidden});\r\n                     }} disabled={this.state.browse}><IconHelp/></Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     size=\"small\"\r\n                     color={this.state.expertMode ? 'primary' : 'default'} aria-label=\"Help\" className={this.props.classes.button}\r\n                     title={I18n.t('Toggle expert mode')}\r\n                     onClick={() => {\r\n                         window.localStorage.setItem('App.expertMode', this.state.expertMode ? 'false' : 'true');\r\n                         this.setState({expertMode: !this.state.expertMode});\r\n                     }} disabled={this.state.browse}><ExpertIcon/></Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     title={I18n.t('Show all devices for print out')}\r\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n                <TextField\r\n                    className={this.props.classes.searchText}\r\n                    label={I18n.t('Filter')}\r\n                    value={this.state.searchText} onChange={e => this.setState({searchText: e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment: this.state.searchText ? (\r\n                            <IconButton onClick={() => this.setState({ searchText: '' })}>\r\n                                <IconClear />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n            </Toolbar>\r\n            <div className={this.props.classes.tableDiv}>\r\n                {!this.state.helpHidden ? <div style={{marginTop: '4rem', display: 'flex'}}>\r\n                    <div style={{flex: '50%'}}>\r\n                        <div style={{fontWeight:\"bold\"}}>{I18n.t('Auto Mode')}</div>\r\n                        <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\r\n                    </div>\r\n                    <div style={{flex: '50%'}}>\r\n                        <div style={{fontWeight: 'bold'}}>{I18n.t('Manual Mode')}</div>\r\n                        <span>{Utils.renderTextWithA(manualModeHint)}</span>\r\n                    </div>\r\n                </div> : null}\r\n                {!this.state.helpHidden ? <br/> : null}\r\n                {!this.state.helpHidden ? <div style={{flex: '100%'}}>\r\n                    <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t(\"For help use this forum <a target='_blank' rel='noopener noreferrer' href='https://forum.iobroker.net/topic/24061/google-home-assistant-iobroker-einrichten-nutzen/'>thread</a>\"))}</div>\r\n                </div> : null}\r\n                <div>\r\n                    <MaterialTable\r\n                        components={{\r\n                            Toolbar: props => <span/>\r\n                        }}\r\n                        style={{marginTop: '1rem', display: 'inline-block'}}\r\n                        title=\"\"\r\n                        tableRef={this.myTableRef}\r\n                        onRowClick={(e, rowData) => {\r\n                            this.myTableRef.current.onTreeExpandChanged(rowData.tableData.path, rowData)\r\n                        }}\r\n                        columns={this.state.expertMode ? this.state.columns : this.state.columns.filter(item => !item.expertMode)}\r\n                        parentChildData={(row, rows) => {\r\n                            const result = rows.find((element) => {\r\n                                if (element.id && row.parentId && element.id === row.parentId) {\r\n                                    console.log(row.parentId);\r\n                                    return true;\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            });\r\n                            console.log(result);\r\n                            return result;\r\n                        }}\r\n                        data={devices}\r\n                        icons={tableIcons}\r\n                        isLoading={this.state.browse}\r\n                        options={{\r\n                            actionsColumnIndex: -1,\r\n                            paging: false,\r\n                            search: false,\r\n                            rowStyle: (rowData) => {\r\n                                let background = this.props.themeType === 'dark' ? '#000' : '#FFF';\r\n                                if (rowData.smartEnum) {\r\n                                    background = this.props.themeType === 'dark' ? '#1b1e18' : '#F7FFEA';\r\n                                }\r\n                                if (rowData.ioType === 'channel' || rowData.ioType === 'device') {\r\n                                    if (rowData.smartEnum) {\r\n                                        background = this.props.themeType === 'dark' ? '#3d3d3d' : '#eafff2';\r\n                                    } else {\r\n                                        background = this.props.themeType === 'dark' ? '#3e4b4b' : '#E2FFFF';\r\n                                    }\r\n                                }\r\n\r\n                                if  (this.state.selectedRow && this.state.selectedRow.tableData.id === rowData.tableData.id) {\r\n                                    background = this.props.themeType === 'dark' ? '#212121' : '#EEE';\r\n                                }\r\n\r\n                                return {backgroundColor:  background}\r\n                            }\r\n                        }}\r\n                        editable={{\r\n                            onRowUpdate: (newData, oldData) => {\r\n                                if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\r\n                                    newData.name.nicknames = newData.name.nicknames.join(',');\r\n                                }\r\n                                this.editedSmartName = newData.name.nicknames;\r\n                                this.setState({editId: newData.id});\r\n\r\n                                return new Promise(resolve => {\r\n                                    this.setState({browse: true});\r\n\r\n                                    setTimeout(() => {\r\n                                        if (!newData.type || !newData.displayTraits) {\r\n                                            this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});\r\n                                        }\r\n\r\n                                        this.onGHParamsChange(newData, oldData);\r\n                                        resolve();\r\n                                        const devices = [...this.state.devices];\r\n                                        devices[devices.indexOf(oldData)] = newData;\r\n                                        this.setState({ ...this.state, devices});\r\n                                    }, 500);\r\n                                });\r\n                            },\r\n                            onRowDelete: (oldData) => {\r\n                                // if smartenum set smartname on false if not delete/reset smartname content\r\n                                if (oldData.smartEnum === 'X') {\r\n                                    this.setState({deleteId: oldData.id});\r\n                                } else {\r\n                                    this.props.socket.getObject(oldData.id)\r\n                                        .then(obj => {\r\n                                            if (obj && obj.common && obj.common['smartName']) {\r\n                                                delete obj.common['smartName']['ghTraits'];\r\n                                                delete obj.common['smartName']['ghType'];\r\n                                                delete obj.common['smartName']['ghAttributes'];\r\n                                            }\r\n                                            return this.props.socket.setObject(oldData.id, obj);\r\n                                        });\r\n                                }\r\n\r\n                                return new Promise(resolve => {\r\n                                    setTimeout(() => {\r\n                                        if (this.state.deleteId) {\r\n                                            this.onDelete();\r\n                                        } else {\r\n                                            this.informInstance(oldData.id);\r\n                                        }\r\n                                        resolve();\r\n                                        const devices = [...this.state.devices];\r\n                                        devices.splice(devices.indexOf(oldData), 1);\r\n                                        this.setState({ ...this.state, devices });\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {this.renderMessage()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nGoogleSmartNames.propTypes = {\r\n    common:      PropTypes.object.isRequired,\r\n    native:      PropTypes.object.isRequired,\r\n    instance:    PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError:     PropTypes.func,\r\n    onLoad:      PropTypes.func,\r\n    onChange:    PropTypes.func,\r\n    socket:      PropTypes.object.isRequired,\r\n    themeType:   PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GoogleSmartNames);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabExtended from './Tabs/Extended';\r\nimport TabServices from './Tabs/Services';\r\nimport TabEnums from './Tabs/Enums';\r\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\r\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\r\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    onConnectionReady() {\r\n        this.socket.getState(`${this.adapterName}.${this.instance}.info.ackTempPassword`)\r\n            .then(state => {\r\n                if (!state || !state.val) {\r\n                    this.setState({showAckTempPasswordDialog: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'enums') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'alexa') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'google') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'alisa') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'extended') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'services') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 3 + offset;\r\n        }\r\n    }\r\n\r\n    renderAckTempPasswordDialog() {\r\n        if (!this.state.showAckTempPasswordDialog) {\r\n            return null;\r\n        } else {\r\n            return <Dialog\r\n                open={true}\r\n                onClose={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{I18n.t('Information: The skill linking process was changed!')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {I18n.t('The linking process has been changed for a few months.')}\r\n                        {I18n.t('Now there is no temporary password that will be sent by email.')}<br/><br/>\r\n                        <b>{I18n.t('The password is equal with ioBroker.pro and with password that was entered here in the settings!')}</b>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))} autoFocus>\r\n                        {I18n.t('Not understood')}\r\n                    </Button>\r\n                    <Button onClick={() =>\r\n                        this.socket.setState(`${this.adapterName}.${this.instance}.info.ackTempPassword`, true, true)\r\n                            .then(() =>\r\n                                this.setState({showAckTempPasswordDialog: false}))\r\n                    } color=\"primary\" >\r\n                        {I18n.t('Roger that')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return (\r\n            <MuiThemeProvider theme={this.state.theme}>\r\n                <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                            <Tab label={I18n.t('Options')} data-name=\"options\" />\r\n                            <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\r\n                            {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\r\n                            {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\r\n                            {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\r\n                            <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\r\n                            <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\r\n                        </Tabs>\r\n                    </AppBar>\r\n\r\n                    <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                        {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                            key=\"options\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            onLoad={native => this.onLoadConfig(native)}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            changed={this.state.changed}\r\n                            onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                        />)}\r\n                        {this.state.selectedTab === 'enums' && (<TabEnums\r\n                            key=\"enums\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                        />)}\r\n                        {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\r\n                            key=\"alexa\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                            {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\r\n                            key=\"google\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                        {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\r\n                            key=\"alisa\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                        {this.state.selectedTab === 'extended' && (<TabExtended\r\n                            key=\"extended\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                        />)}\r\n                        {this.state.selectedTab === 'services' && (<TabServices\r\n                            key=\"services\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            onShowError={error => this.showError(error)}\r\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                        />)}\r\n                    </div>\r\n                    {this.renderError()}\r\n                    {this.renderSaveCloseButtons()}\r\n                    {this.renderAckTempPasswordDialog()}\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'iot';\r\nlet themeName = Utils.getThemeName();\r\n\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}