{"version":3,"sources":["Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Components/TreeTable.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","onAliveChanged","id","state","adapterName","instance","setState","isInstanceAlive","val","inAction","toast","errorWithPercent","socket","getState","then","this","subscribeState","unsubscribeState","pass","length","match","I18n","t","title","attr","type","error","checkPassword","native","TextField","label","className","classes","input","value","helperText","onChange","e","target","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","style","textAlign","Button","size","color","onClick","window","open","focus","forceUserCreate","ack","Promise","resolve","getObject","obj","common","enabled","setObject","catch","err","onError","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","action","IconButton","aria-label","close","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","text","errorText","onLoad","column","columnSettings","renderInput","renderCheckbox","marginTop","googleHome","newVal","changed","hintUnsaved","variant","button","disabled","resetCerts","marginRight","fontWeight","columnLogo","renderCard","renderToast","Component","withStyles","theme","width","minHeight","minWidth","marginBottom","maxWidth","height","display","verticalAlign","cannotUse","fontSize","fontStyle","ExtendedOptions","showSelectId","options","FormControl","Select","Input","name","map","item","MenuItem","FormHelperText","imagePrefix","selected","types","onOk","renderSelect","Fab","marginLeft","getSelectIdDialog","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","getAdapterInstances","list","nsList","_id","replace","key","showError","chips","split","filter","a","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","encodeURIComponent","readOnly","copyToClipboard","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","padding","Enums","editId","editedSmartName","funcs","rooms","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","JSON","parse","stringify","i","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","palette","primary","light","contrastText","colorOn","colorOff","colorSet","colorRead","CHANGED_COLOR","DEFAULT_CHANNEL_COLOR_DARK","DEFAULT_CHANNEL_COLOR_LIGHT","LAST_CHANGED_COLOR_DARK","LAST_CHANGED_COLOR_LIGHT","actionsMapping","turnOn","icon","IconOn","desc","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showListOfDevices","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","actions","sort","b","Icon","actionIcon","lineNum","items","toString","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","result","channels","names","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","themeType","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","nameModified","devModified","devCount","ch","el","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","role","headerRow","headerCell","tableDiv","tableCell","lines","copy","placeholder","InputProps","endAdornment","renderDevices","renderConfirmDialog","renderListOfDevices","devLineEnabled","left","devSubLineEdit","spacing","main","OnOff","Brightness","RGB","AlisaDevices","iobID","includes","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","getAttr","lookup","shift","setAttr","descendingComparator","orderBy","_a","_b","TreeTable","opened","localStorage","getItem","Array","isArray","editMode","deleteMode","editData","order","columns","field","col","level","editable","TableCell","clsx","cell","cellSecondary","cellStyle","component","v","data","parentId","children","it","TableRow","row","rowSecondary","rowMainWithChildren","rowMainWithoutChildren","rowNoEdit","cellExpand","scope","ii","renderCell","cellButton","newData","onUpdate","renderLine","property","isAsc","TableHead","cellHeader","sortDirection","TableSortLabel","active","direction","handleRequestSort","visuallyHidden","table","array","comparator","stabilizedThis","index","stableSort","getComparator","tableContainer","Table","stickyHeader","renderHead","TableBody","React","paddingBottom","paddingRight","wordBreak","whiteSpace","width_name_nicknames","width_ioType","width_type","width_displayTraits","width_roomHint","clip","GoogleSmartNames","myTableRef","createRef","expertMode","helpHidden","searchText","helpHeight","editComponent","rows","resize","helpRef","oldData","displayTraits","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","nicknames","n","roomHint","desktop","innerHeight","innerWidth","smallDisplay","manualModeHint","ref","flex","Toolbar","hideHelp","setItem","prevProps","prevState","snapshot","current","h","clientHeight","defaultNames","renderToolbar","renderInstructions","onGHParamsChange","smartEnum","useMediaQuery","App","extendedProps","encryptedFields","translations","require","showAckTempPasswordDialog","selectedTab","amazonAlexa","yandexAlisa","DialogContentText","loaded","default","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","scrollButtons","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","renderAckTempPasswordDialog","GenericApp","root","Boolean","location","hostname","themeName","getThemeName","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d66ad82c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    checkPassword(pass) {\n        if (pass.length < 8 || !pass.match(/[a-z]/) || !pass.match(/[A-Z]/) || !pass.match(/\\d/)) {\n            return I18n.t('invalid_password_warning');\n        } else {\n            return false;\n        }\n    }\n\n    renderInput(title, attr, type) {\n        const error = attr === 'pass' && this.checkPassword(this.props.native[attr]);\n        return (<TextField\n            label={ I18n.t(title) }\n            error={ !!error  }\n            className={ this.props.classes.input }\n            value={ this.props.native[attr] }\n            type={ type || 'text' }\n            helperText={ error || '' }\n            onChange={ e => this.props.onChange(attr, e.target.value) }\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts(forceUserCreate) {\n        this.setState({ inAction: true });\n\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return <form className={ this.props.classes.tab }>\n            <Logo\n                instance={ this.props.instance }\n                common={ this.props.common }\n                native={ this.props.native }\n                onError={ text => this.setState({errorText: text}) }\n                onLoad={ this.props.onLoad }\n            />\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                { this.renderInput('ioBroker.pro Login', 'login') }<br/>\n                { this.renderInput('ioBroker.pro Password', 'pass', 'password') }<br/>\n                { this.renderCheckbox('Amazon Alexa', 'amazonAlexa') }\n                <FormControlLabel key=\"googleHome\" className={ this.props.classes.controlElement }\n                                  style={{ marginTop: 5 }}\n                    control={\n                      <Checkbox\n                          checked={this.props.native.googleHome}\n                          onChange={() => {\n                              // activate alexa if google home is on (temporary)\n                              const newVal = !this.props.native.googleHome;\n                              this.props.onChange('googleHome', newVal, () =>\n                                  newVal && this.props.onChange('amazonAlexa', true));\n                          }}\n                          color=\"primary\"\n                      />\n                    }\n                    label={I18n.t('Google Home')}\n                />\n                {this.renderCheckbox('Yandex Алиса', 'yandexAlisa')}\n                <br/>\n\n                <p>{I18n.t('new_certs_tip')}</p>\n                {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                <Button variant=\"outlined\"\n                        className={ this.props.classes.button }\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                        onClick={ () => this.resetCerts() }>\n                    <IconReload style={{ marginRight: 8 }}/>{ I18n.t('Get new connection certificates') }\n                </Button>\n\n                <p>{I18n.t('new_credentials_tip')}</p>\n                {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                <Button variant=\"outlined\"\n                        className={ this.props.classes.button }\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                        onClick={ () => this.resetCerts(true) }>\n                    <IconReload  style={{ marginRight: 8 }}/>{ I18n.t('Create IoT credentials anew') }\n                </Button>\n                <p>{ Utils.renderTextWithA(I18n.t('forum_tip')) }</p>\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_tip')) }</p>\n                <p style={{ fontWeight: 'bold', paddingTop: 20}}>{ Utils.renderTextWithA(I18n.t('help_link_tip1')) }</p>\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_link_tip2')) }</p>\n                <p style={{ fontWeight: 'bold', color: 'red'}}>{ Utils.renderTextWithA(I18n.t('help_link_tip3')) }</p>\n            </div>\n            <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard() }</div>\n            { this.renderToast() }\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID2\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport IconCopy from '@iobroker/adapter-react/Components/CopyIcon';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID3\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><IconCopy /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><IconCopy /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout api-secret')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.calcNightscoutSecret()}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />) : null}\n                <br/>\n                <br/>\n                <div className={this.props.classes.controlElement}>\n                    <TextField\n                        label={I18n.t('Read blood sugar from')}\n                        className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n                        value={this.props.native.amazonAlexaBlood || ''}\n                        type=\"text\"\n                        onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                        margin=\"normal\"\n                    />\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                    <FormControlLabel  className={this.props.classes.controlElement}\n                        control={\n                            <Checkbox\n                                style={{paddingLeft: 30}}\n                                checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                                onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Short answer for blood sugar')}\n                    />\n                </div>\n                <br/>\n                {this.renderToast()}\n                {this.getSelectIdDialog('amazonAlexaBlood')}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return <div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>;\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({editId: ''})}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\n\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRead = '#00bc00';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\nconst actionsMapping = {\r\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\r\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLineName:  {\r\n        fontSize: 8,\r\n        fontStyle: 'italic',\r\n        display: 'block'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlexaSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editedSmartType: null,\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showListOfDevices: false,\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n        console.log('Send BROWSE!');\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n                    console.log('BROWSE received.');\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            })\r\n            .catch(e => this.setState({message: I18n.t('Error %s', e)}));\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\r\n        if (state && state.ack === true && state.val === true) {\r\n            this.devTimer && clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    let editedSmartType = null;\r\n                    if (!device.additionalApplianceDetails.group) {\r\n                        editedSmartType = device.additionalApplianceDetails.smartType;\r\n                    }\r\n\r\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) return 0;\r\n            if (a === 'turnOn') return -1;\r\n            if (b === 'turnOn') return 1;\r\n\r\n            if (a === 'turnOff') return -1;\r\n            if (b === 'turnOff') return 1;\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.indexOf(action) !== -1) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].friendlyName);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderSelectByOn(dev, lineNum, id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\r\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\r\n            }\r\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectTypeSelector(type, onChange) {\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\r\n            ];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\r\n            }\r\n            return (\r\n                <FormControl>\r\n                    <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\r\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n                </FormControl>);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n                        if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>));\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const id = dev.additionalApplianceDetails.id;\r\n            const name = dev.additionalApplianceDetails.name || id;\r\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n            if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n            }\r\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\r\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\r\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\r\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\r\n            </div>));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        let friendlyName = dev.friendlyName;\r\n        let title;\r\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\r\n            title = friendlyName;\r\n        } else {\r\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\r\n        }\r\n\r\n        let devCount = 0;\r\n        for (const ch in dev.additionalApplianceDetails.channels) {\r\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\r\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\r\n            }\r\n        }\r\n        devCount = devCount || 1;\r\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\r\n        const id = dev.additionalApplianceDetails.id;\r\n\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.indexOf(id) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (id === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        // If some of sub channels in change list or in last changed\r\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\r\n            const channels = dev.additionalApplianceDetails.channels;\r\n            try {\r\n                channels && Object.keys(channels).forEach(chan =>\r\n                    chan && channels[chan].forEach(el => {\r\n                        if (this.state.changed.indexOf(el.id) !== -1) {\r\n                            background = CHANGED_COLOR;\r\n                        } else if (this.state.lastChanged === el.id) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                    })\r\n                );\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        return [\r\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {devCount > 1 ?\r\n                        (<Badge badgeContent={devCount} color=\"primary\">\r\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\r\n                        </Badge>) :\r\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{title}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\r\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\r\n            </div>),\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            const editedSmartType = this.state.editedSmartType;\r\n\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectID1\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.friendlyName }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.friendlyName);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        return (\r\n            <form key=\"alexa\" className={this.props.classes.tab}>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     title={I18n.t('Show all devices for print out')}\r\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n                <TextField\r\n                    placeholder={I18n.t('Filter')}\r\n                    className={this.state.filter}\r\n                    value={this.state.filter}\r\n                    onChange={e => this.setState({filter: e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment: this.state.filter ? (\r\n                            <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                                <IconClear />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n                {this.renderDevices()}\r\n                {this.renderMessage()}\r\n                {this.renderEditDialog()}\r\n                {this.getSelectIdDialog()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderListOfDevices()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAlexaSmartNames.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlexaSmartNames);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\n\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRGB = '#ff7ee3';\r\nconst colorRead = '#00bc00';\r\n//const colorThermometer = '#bc1600';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\n\r\nconst actionsMapping = {\r\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\r\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\r\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA', 'THERMOSTAT.AC', 'VACUUM_CLEANER'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        minWidth: 100,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        paddingLeft: 70,\r\n        //width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLine:  {\r\n        fontSize: 10,\r\n        fontStyle: 'italic',\r\n        display: 'inline-block',\r\n        marginLeft: 15\r\n    },\r\n    devSubLineSetId:  {\r\n        fontStyle: 'italic',\r\n        display: 'block',\r\n        color: '#999'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlisaDevices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n\r\n        this.lastBrowse = Date.now();\r\n\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.iobID === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.name;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) {\r\n                return 0;\r\n            }\r\n            if (a === 'OnOff') {\r\n                return -1;\r\n            }\r\n            if (b === 'OnOff') {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.includes(action)) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push(<span key={action} title={actionsMapping[action].desc}>\r\n                    <Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/>\r\n                </span>);\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].name);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\r\n            ];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\r\n            }\r\n            return (\r\n                <FormControl>\r\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\r\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n                </FormControl>);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        const id = dev.main.getId;\r\n        const name = dev.func;\r\n        let background = this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n            background = LAST_CHANGED_COLOR;\r\n        }*/\r\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\r\n            <div className={classes.devSubSubLine}>\r\n                <div>{dev.main.getId}</div>\r\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\r\n            </div>\r\n\r\n        </div>));\r\n\r\n        dev.attributes.forEach(attr => {\r\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\r\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\r\n                <div className={classes.devSubSubLine}>\r\n                    <div>{attr.getId}</div>\r\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\r\n                </div>\r\n            </div>));\r\n        });\r\n\r\n        /*if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n                            background = LAST_CHANGED_COLOR;\r\n                        }\r\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>));\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n        }*/\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\r\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (dev.iobID === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        //const isComplex = dev.\r\n\r\n        return [\r\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {dev.attributes.length ?\r\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\r\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\r\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\r\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n\r\n            </div>),\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectAlisa\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.name }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        return (\r\n            <form key=\"alexa\" className={this.props.classes.tab}>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     title={I18n.t('Show all devices for print out')}\r\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n                <TextField\r\n                    placeholder={I18n.t('Filter')}\r\n                    className={this.state.filter}\r\n                    value={this.state.filter}\r\n                    onChange={e => this.setState({filter: e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment: this.state.filter ? (\r\n                            <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                                <IconClear />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n                {this.renderDevices()}\r\n                {this.renderMessage()}\r\n                {this.renderEditDialog()}\r\n                {this.getSelectIdDialog()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderListOfDevices()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAlisaDevices.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlisaDevices);\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport IconEdit from '@material-ui/icons/Edit';\r\nimport IconDelete from '@material-ui/icons/Delete';\r\nimport IconExpand from '@material-ui/icons/NavigateNext';\r\nimport IconCollapse from '@material-ui/icons/ExpandMore';\r\nimport IconCheck from '@material-ui/icons/Check';\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nfunction getAttr(obj, attr, lookup) {\r\n    if (typeof attr === 'string') {\r\n        attr = attr.split('.');\r\n    }\r\n\r\n    if (!obj) {\r\n        return null;\r\n    }\r\n\r\n    if (attr.length === 1) {\r\n        if (lookup && lookup[obj[attr[0]]]) {\r\n            return lookup[obj[attr[0]]];\r\n        } else {\r\n            return obj[attr[0]];\r\n        }\r\n    } else {\r\n        const name = attr.shift();\r\n        return getAttr(obj[name], attr);\r\n    }\r\n}\r\n\r\nfunction setAttr(obj, attr, value) {\r\n    if (typeof attr === 'string') {\r\n        attr = attr.split('.');\r\n    }\r\n\r\n    if (attr.length === 1) {\r\n        return obj[attr[0]] = value;\r\n    } else {\r\n        const name = attr.shift();\r\n        if (obj[name] === null || obj[name] === undefined) {\r\n            obj[name] = {};\r\n        }\r\n        return setAttr(obj[name], attr, value);\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table: {\r\n        width: '100%',\r\n        minWidth: 800,\r\n        maxWidth: 1920,\r\n    },\r\n    cell: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        paddingLeft: 4,\r\n        paddingRight: 4,\r\n    },\r\n    rowMainWithChildren: {\r\n\r\n    },\r\n    rowMainWithoutChildren: {\r\n\r\n    },\r\n    rowNoEdit: {\r\n        opacity: 0.3\r\n    },\r\n    cellExpand: {\r\n        width: 30,\r\n    },\r\n    cellButton: {\r\n        width: 30,\r\n    },\r\n    cellHeader: {\r\n        fontWeight: 'bold',\r\n        background: theme.palette.type === 'dark' ? '#888' : '#888',\r\n        color: theme.palette.type === 'dark' ? '#EEE' : '#111',\r\n        height: 48,\r\n        wordBreak: 'break-word',\r\n        whiteSpace: 'pre',\r\n    },\r\n    width_name_nicknames: {\r\n        maxWidth: 150,\r\n    },\r\n    width_ioType: {\r\n        maxWidth: 100,\r\n    },\r\n    width_type: {\r\n        maxWidth: 100,\r\n    },\r\n    width_displayTraits: {\r\n        maxWidth: 100,\r\n    },\r\n    width_roomHint: {\r\n        maxWidth: 100,\r\n    },\r\n    rowSecondary: {\r\n        fontStyle: 'italic',\r\n    },\r\n    cellSecondary: {\r\n        fontSize: 10,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy, lookup) {\r\n    const _a = getAttr(a, orderBy, lookup) || '';\r\n    const _b = getAttr(b, orderBy, lookup) || '';\r\n\r\n    if (_b < _a) {\r\n        return -1;\r\n    } else\r\n    if (_b > _a) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction getComparator(order, orderBy, lookup) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy, lookup)\r\n        : (a, b) => -descendingComparator(a, b, orderBy, lookup);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order) {\r\n            return order;\r\n        } else {\r\n            return a[1] - b[1];\r\n        }\r\n    });\r\n\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nclass TreeTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let opened = window.localStorage.getItem('iot.ghome.opened') || '[]';\r\n        try {\r\n            opened = JSON.parse(opened) || [];\r\n        } catch (e) {\r\n            opened = [];\r\n        }\r\n        if (!Array.isArray(opened)) {\r\n            opened = [];\r\n        }\r\n\r\n        this.state = {\r\n            opened,\r\n            editMode: false,\r\n            deleteMode: false,\r\n            editData: null,\r\n            order: 'asc',\r\n            orderBy: this.props.columns[0].field,\r\n        }\r\n    }\r\n\r\n    renderCell(item, col, level, i) {\r\n        if (this.state.editMode === i && col.editable !== 'never') {\r\n            let val = getAttr(item, col.field);\r\n            if (Array.isArray(val)) {\r\n                val = val[0];\r\n            }\r\n            return <TableCell\r\n                key={col.field}\r\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                style={col.cellStyle}\r\n                component=\"th\" >{\r\n                    col.lookup ?\r\n                        <Select\r\n                            onChange={e => {\r\n                                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                                if (e.target.value === val) {\r\n                                    delete editData[col.field];\r\n                                } else {\r\n                                    editData[col.field] = e.target.value;\r\n                                }\r\n                                this.setState({editData});\r\n                            }}\r\n                            value={(this.state.editData && this.state.editData[col.field]) || val}\r\n                        >\r\n                            {Object.keys(col.lookup).map(v => <MenuItem value={v}>{col.lookup[v]}</MenuItem>)}\r\n                        </Select>\r\n                        :\r\n                        <TextField\r\n                            value={this.state.editData && this.state.editData[col.field] !== undefined ? this.state.editData[col.field] : val}\r\n                            onChange={e => {\r\n                                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                                if (e.target.value === val) {\r\n                                    delete editData[col.field];\r\n                                } else {\r\n                                    editData[col.field] = e.target.value;\r\n                                }\r\n                                this.setState({editData});\r\n                            }}\r\n                        />\r\n            }</TableCell>;\r\n        } else {\r\n            return <TableCell\r\n                key={col.field}\r\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                style={col.cellStyle}\r\n                component=\"th\" >{getAttr(item, col.field, col.lookup)}</TableCell>;\r\n        }\r\n    }\r\n\r\n    renderLine(item, level) {\r\n        level = level || 0;\r\n        const i = this.props.data.indexOf(item);\r\n        if (!item) {\r\n            return null;\r\n        }\r\n        if (!level && item.parentId) {\r\n            return null;\r\n        } else if (level && !item.parentId) {\r\n            return null; // should never happens\r\n        } else {\r\n            // try to find children\r\n            const children = this.props.data.filter(it => it.parentId === item.id);\r\n            const opened = this.state.opened.includes(item.id);\r\n\r\n            return [\r\n                <TableRow\r\n                    key={item.id}\r\n                    className={clsx(\r\n                        this.props.classes.row,\r\n                        level  && this.props.classes.rowSecondary,\r\n                        !level && children.length && this.props.classes.rowMainWithChildren,\r\n                        !level && !children.length && this.props.classes.rowMainWithoutChildren,\r\n                        this.state.editMode !== false && this.state.editMode !== i && this.props.classes.rowNoEdit,\r\n                        this.state.deleteMode !== false && this.state.deleteMode !== i && this.props.classes.rowNoEdit,\r\n                    )}\r\n                >\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellExpand, level && this.props.classes.cellSecondary)}>\r\n                        {children.length ? <IconButton onClick={() => {\r\n                            const opened = [...this.state.opened];\r\n                            const pos = opened.indexOf(item.id);\r\n                            if (pos === -1) {\r\n                                opened.push(item.id);\r\n                                opened.sort();\r\n                            } else {\r\n                                opened.splice(pos, 1);\r\n                            }\r\n\r\n                            this.setState({opened});\r\n                        }}>\r\n                                {opened ? <IconCollapse/> : <IconExpand/>}\r\n                            </IconButton>  : null}\r\n                    </TableCell>\r\n                    <TableCell scope=\"row\"\r\n                       className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                       style={this.props.columns[0].cellStyle}>\r\n                        {getAttr(item, this.props.columns[0].field, this.props.columns[0].lookup)}\r\n                    </TableCell>\r\n                    {this.props.columns.map((col, ii) =>\r\n                        !ii ? null : this.renderCell(item, col, level, i))}\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\r\n                        {this.state.editMode === i || this.state.deleteMode === i ?\r\n                            <IconButton\r\n                                disabled={this.state.editMode !== false && (!this.state.editData || !Object.keys(this.state.editData).length)}\r\n                                onClick={() => {\r\n                                if (this.state.editMode !== false) {\r\n                                    const newData = JSON.parse(JSON.stringify(item));\r\n                                    Object.keys(this.state.editData).forEach(attr => setAttr(newData, attr, this.state.editData[attr]));\r\n                                    this.setState({editMode: false}, () => this.props.onUpdate(newData, item))\r\n                                } else {\r\n                                    this.setState({deleteMode: false}, () => this.props.onDelete(item))\r\n                                }\r\n                            }}>\r\n                                <IconCheck/>\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton\r\n                                disabled={this.state.editMode !== false}\r\n                                onClick={() => this.setState({editMode: i, editData: null})}>\r\n                                <IconEdit/>\r\n                            </IconButton>}\r\n                    </TableCell>\r\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\r\n                        {this.state.editMode === i || this.state.deleteMode === i ?\r\n                            <IconButton onClick={() => this.setState({editMode: false, deleteMode: false})}>\r\n                                <IconClose/>\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton\r\n                                disabled={this.state.deleteMode !== false}\r\n                                onClick={() => this.setState({deleteMode: i})}>\r\n                                <IconDelete/>\r\n                            </IconButton>\r\n                        }\r\n                    </TableCell>\r\n                </TableRow>,\r\n                !level && this.state.opened.includes(item.id) ? children.map(item => this.renderLine(item, level + 1)) : null,\r\n            ];\r\n        }\r\n    }\r\n\r\n    handleRequestSort(property) {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    }\r\n\r\n    renderHead() {\r\n        return <TableHead>\r\n            <TableRow>\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellExpand)}/>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + this.props.columns[0].field.replace(/\\./g, '_')])}\r\n                    style={this.props.columns[0].cellStyle}\r\n                    sortDirection={this.state.orderBy === this.props.columns[0].field ? this.state.order : false}\r\n                >\r\n                    <TableSortLabel\r\n                        active={this.state.orderBy === this.props.columns[0].field}\r\n                        direction={this.state.orderBy === this.props.columns[0].field ? this.state.order : 'asc'}\r\n                        onClick={() => this.handleRequestSort(this.props.columns[0].field)}\r\n                    >\r\n                        {this.props.columns[0].title}\r\n                        {this.state.orderBy === this.props.columns[0].field ?\r\n                            <span className={this.props.classes.visuallyHidden}>\r\n                                {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                            </span> : null}\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                {this.props.columns.map((col, i) =>\r\n                    !i ? null : <TableCell\r\n                        key={col.field}\r\n                        className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + col.field.replace(/\\./g, '_')])}\r\n                        style={col.cellStyle}\r\n                        component=\"th\"\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === col.field}\r\n                            direction={this.state.orderBy === col.field ? this.state.order : 'asc'}\r\n                            onClick={() => this.handleRequestSort(col.field)}\r\n                        >\r\n                            {col.title}\r\n                            {this.state.orderBy === col.field ?\r\n                                <span className={this.props.classes.visuallyHidden}>\r\n                                    {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span> : null}\r\n                        </TableSortLabel>\r\n                </TableCell>)}\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\r\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    render() {\r\n        const lookup = this.props.columns ? this.props.columns.find(col => col.field === this.state.orderBy).lookup : '';\r\n        const table = stableSort(this.props.data, getComparator(this.state.order, this.state.orderBy, lookup));\r\n\r\n        return <div className={clsx(this.props.classes.tableContainer, this.props.className)}>\r\n            <Table className={this.props.classes.table} aria-label=\"simple table\" size=\"small\" stickyHeader={true}>\r\n                {this.renderHead()}\r\n                <TableBody>\r\n                    {table.map(item => this.renderLine(item))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>;\r\n    }\r\n}\r\n\r\nTreeTable.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    className: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    columns: PropTypes.array,\r\n    onUpdate: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(TreeTable);\r\n\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport PropTypes from 'prop-types';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport ExpertIcon from '@iobroker/adapter-react/Components/ExpertIcon'\r\nimport TreeTable from '../Components/TreeTable';\r\n\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    tableDiv: {\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        height: 'calc(100% - 48px)',\r\n    },\r\n    searchText: {\r\n        width: 150,\r\n        marginLeft: theme.spacing(1),\r\n        verticalAlign: 'middle'\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    },\r\n});\r\n\r\nconst MOBILE_HEIGHT = 400;\r\nconst MOBILE_WIDTH  = 400;\r\n\r\nclass GoogleSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myTableRef =  React.createRef();\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            expertMode: window.localStorage.getItem('App.expertMode') !== 'true',\r\n            helpHidden: window.localStorage.getItem('App.helpHidden') === 'true',\r\n            showSelectId: false,\r\n            searchText: '',\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: '',\r\n            helpHeight: 0\r\n        };\r\n\r\n        this.columns = [\r\n            {\r\n                title: I18n.t('ID'),\r\n                field: 'id',\r\n                editable: 'never',\r\n                cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                }\r\n            },\r\n            {title: I18n.t('Smart names'), field: 'name.nicknames'},\r\n            {title: I18n.t('ioBType'), field: 'ioType', editable: 'never', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                }},\r\n            {\r\n                title: I18n.t('Type'),\r\n                field: 'type',\r\n                lookup: {\r\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\r\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\r\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\r\n                    'action.devices.types.AWNING':          'Awning',\r\n                    'action.devices.types.BLINDS':          'Blinds',\r\n                    'action.devices.types.BOILER':          'Boiler',\r\n                    'action.devices.types.CAMERA':          'Camera',\r\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\r\n                    'action.devices.types.CURTAIN':         'Curtain',\r\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\r\n                    'action.devices.types.DOOR':            'Door',\r\n                    'action.devices.types.DRYER':           'Dryer',\r\n                    'action.devices.types.FAN':             'Fan',\r\n                    'action.devices.types.FIREPLACE':       'Fireplace',\r\n                    'action.devices.types.GARAGE':          'Garage',\r\n                    'action.devices.types.GATE':            'Gate',\r\n                    'action.devices.types.HEATER':          'Heater',\r\n                    'action.devices.types.HOOD':            'Hood',\r\n                    'action.devices.types.KETTLE':          'Kettle',\r\n                    'action.devices.types.LIGHT':           'Light',\r\n                    'action.devices.types.LOCK':            'Lock',\r\n                    'action.devices.types.MOP':             'Mop',\r\n                    'action.devices.types.MICROWAVE':       'Microwave',\r\n                    'action.devices.types.OUTLET':          'Outlet',\r\n                    'action.devices.types.OVEN':            'Oven',\r\n                    'action.devices.types.PERGOLA':         'Pergola',\r\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\r\n                    'action.devices.types.SCENE':           'Scene',\r\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\r\n                    'action.devices.types.SENSOR':          'Sensor',\r\n                    'action.devices.types.SHUTTER':         'Shutter',\r\n                    'action.devices.types.SHOWER':          'Shower',\r\n                    'action.devices.types.SPEAKER':         'Speaker',\r\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\r\n                    'action.devices.types.SWITCH':          'Switch',\r\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\r\n                    'action.devices.types.VACUUM':          'Vacuum',\r\n                    'action.devices.types.VALVE':           'Valve',\r\n                    'action.devices.types.WASHER':          'Washer',\r\n                    'action.devices.types.WATERHEATER':     'Water heater',\r\n                    'action.devices.types.WINDOW':          'Window'\r\n                }\r\n            },\r\n            {title: I18n.t('Function/Trait'), field: 'displayTraits',  lookup: {\r\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\r\n                    'action.devices.traits.Brightness':     'Brightness',\r\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\r\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\r\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\r\n                    // 'action.devices.traits.Dock':        'Dock',\r\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\r\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\r\n                    // 'action.devices.traits.Locator':     'Locator',\r\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\r\n                    'action.devices.traits.Modes':          'Modes',\r\n                    'action.devices.traits.OnOff':          'OnOff',\r\n                    'action.devices.traits.OpenClose':      'OpenClose',\r\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\r\n                    'action.devices.traits.Scene':          'Scene',\r\n                    // 'action.devices.traits.Sensor':      'Sensor',\r\n                    'action.devices.traits.StartStop':      'StartStop',\r\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\r\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\r\n                    // 'action.devices.traits.Timer':       'Timer',\r\n                    'action.devices.traits.Toggles':        'Toggles',\r\n                    'action.devices.traits.Volume':         'Volume',\r\n                }},\r\n\r\n            {\r\n                title: I18n.t('Attributes'),\r\n                field: 'displayAttributes',\r\n                cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                                  value={props.value}\r\n                                                  onChange={e => props.onChange(e.target.value)}\r\n                />\r\n            },\r\n            {title: I18n.t('Room'), field: 'roomHint', editable: 'never'},\r\n            {title: I18n.t('Auto'), field: 'smartEnum', editable: 'never',\r\n                cellStyle: {\r\n                    maxWidth: '3rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n            },\r\n            {title: I18n.t('Conversation to GH'), field: 'displayConv2GH',  cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => (\r\n                    <div>Conversation to Google Home = function(value)&#123; <br/>\r\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                  value={props.value}\r\n                                  onChange={e => props.onChange(e.target.value)}\r\n                        />\r\n                        &#125;\r\n                    </div>\r\n                )\r\n            },\r\n            { title: I18n.t('Conversation to ioB'), field: 'displayConv2iob', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-word'\r\n                },\r\n                expertMode: true,\r\n                editComponent: props => (\r\n                    <div>Conversation to ioBroker = function(value)&#123; <br/>\r\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                  value={props.value}\r\n                                  onChange={e => props.onChange(e.target.value)}\r\n                        />\r\n                        &#125;\r\n                    </div>\r\n                )},\r\n        ];\r\n\r\n        this.timerChanged        = null;\r\n        this.browseTimer         = null;\r\n        this.browseTimerCount    = 0;\r\n        this.editedSmartName     = '';\r\n\r\n        this.waitForUpdateID     = null;\r\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n        this.helpRef             = React.createRef();\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({message: I18n.t(error)});\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectByOn(id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\r\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\r\n            }\r\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    onGHParamsChange(newData, oldData) {\r\n        this.addChanged(newData.id, () => {\r\n            this.props.socket.getObject(newData.id)\r\n                .then(obj => {\r\n                    if (!obj || !obj.common) {\r\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\r\n                    }\r\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\r\n                        if (!Array.isArray(newData.displayTraits)) {\r\n                            newData.displayTraits=[newData.displayTraits]\r\n                        }\r\n\r\n                        obj.common.smartName.ghTraits = newData.displayTraits;\r\n                    }\r\n                    if (newData.type !== oldData.type) {\r\n                        obj.common.smartName.ghType = newData.type;\r\n                    }\r\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\r\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\r\n                        try {\r\n                            if (obj.common.smartName.ghAttributes) {\r\n                                JSON.parse(obj.common.smartName.ghAttributes)\r\n                            }\r\n                        } catch (error) {\r\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')});\r\n                        }\r\n                    }\r\n                    if (newData.conv2GH) {\r\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\r\n                    }\r\n                    if (newData.conv2iob) {\r\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\r\n                    }\r\n                    return this.props.socket.setObject(newData.id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(newData.id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"dialogSelectGoogle\"\r\n                imagePrefix=\"../..\"\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                if (!obj.common) {\r\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\r\n                                }\r\n\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                if (!obj.common.smartName) {\r\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\r\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\r\n                                } else {\r\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\r\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => {\r\n                                        this.informInstance(obj._id);\r\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\r\n                                    })\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Function') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Room') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                            <div className={ classes.tableCell }>{ item.name.nicknames.join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.displayTraits.map(n => n.replace('action.devices.traits.', '')).join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.roomHint }</div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name.nicknames.join(', ') + '\\t' + item.displayTraits + '\\t' + item.roomHint);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    renderInstructions() {\r\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\r\n\r\n        if (this.state.helpHidden || this.props.smallDisplay || !desktop) {\r\n            return null;\r\n        }\r\n\r\n        const manualModeHint = I18n.t('manualModeHint');\r\n        return <div style={{width: '100%'}} ref={this.helpRef}>\r\n            <div style={{marginTop: '4rem', display: 'flex'}}>\r\n                <div style={{flex: '50%'}}>\r\n                    <div style={{fontWeight:\"bold\"}}>{I18n.t('Auto Mode')}</div>\r\n                    <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\r\n                </div>\r\n                <div style={{flex: '50%'}}>\r\n                    <div style={{fontWeight: 'bold'}}>{I18n.t('Manual Mode')}</div>\r\n                    <span>{Utils.renderTextWithA(manualModeHint)}</span>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div style={{flex: '100%'}}>\r\n                <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t('For help use this forum'))}</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    renderToolbar() {\r\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\r\n\r\n        return <Toolbar variant=\"dense\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n            <Fab style={{marginLeft: '1rem'}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                 onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n            {desktop && !this.state.hideHelp ? <Fab style={{marginLeft: '1rem'}} size=\"small\" color={this.state.helpHidden ? 'default' : 'primary'} aria-label=\"Help\" className={this.props.classes.button}\r\n                 title={I18n.t('Show/Hide help')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem('App.helpHidden', this.state.helpHidden ? 'false' : 'true');\r\n                     this.setState({helpHidden: !this.state.helpHidden});\r\n                 }} disabled={this.state.browse}><IconHelp/></Fab> : null }\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 size=\"small\"\r\n                 color={this.state.expertMode ? 'primary' : 'default'} aria-label=\"Help\" className={this.props.classes.button}\r\n                 title={I18n.t('Toggle expert mode')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem('App.expertMode', this.state.expertMode ? 'false' : 'true');\r\n                     this.setState({expertMode: !this.state.expertMode});\r\n                 }} disabled={this.state.browse}><ExpertIcon/></Fab>\r\n            <Fab style={{marginLeft: '1rem'}}\r\n                 title={I18n.t('Show all devices for print out')}\r\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n            {!this.props.smallDisplay ? <TextField\r\n                className={this.props.classes.searchText}\r\n                label={I18n.t('Filter')}\r\n                value={this.state.searchText} onChange={e => this.setState({searchText: e.target.value})}\r\n                InputProps={{\r\n                    endAdornment: this.state.searchText ? (\r\n                        <IconButton onClick={() => this.setState({ searchText: '' })}>\r\n                            <IconClear />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n            /> : null}\r\n        </Toolbar>;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.helpRef.current) {\r\n            const h = this.helpRef.current.clientHeight;\r\n            if (this.state.helpHeight !== h) {\r\n                if (!this.state.helpHidden && h + 64 + 48 + 200 > window.innerHeight) {\r\n                    setTimeout(() => this.setState({helpHeight: h, helpHidden: true, hideHelp: true}), 50);\r\n                } else {\r\n                    setTimeout(() => this.setState({helpHeight: h}), 50);\r\n                }\r\n            }\r\n        } else if (this.state.helpHeight) {\r\n            setTimeout(() => this.setState({helpHeight: 0}), 50);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <CircularProgress  key=\"alexaProgress\" />;\r\n        }\r\n        const searchText = this.state.searchText.toLowerCase();\r\n        const devices = this.state.searchText ? this.state.devices.filter(item =>\r\n            item.name?.name?.toLowerCase().includes(searchText) ||\r\n            item.name?.defaultNames?.find(n => n.toLowerCase().includes(searchText)) ||\r\n            item.name?.nicknames?.find(n => n.toLowerCase().includes(searchText)))\r\n            : this.state.devices;\r\n\r\n        return <form key=\"gh\" className={this.props.classes.tab}>\r\n            {this.renderToolbar()}\r\n            {this.renderInstructions()}\r\n            <div className={this.props.classes.tableDiv} style={{height: `calc(100% - ${48 + (this.state.helpHeight ? this.state.helpHeight + 64 : 0)}px)`}}>\r\n                <TreeTable\r\n                    columns={this.state.expertMode ? this.columns : this.columns.filter(item => !item.expertMode)}\r\n                    data={devices}\r\n                    onUpdate={(newData, oldData) => {\r\n                        if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\r\n                            newData.name.nicknames = newData.name.nicknames.join(',');\r\n                        }\r\n                        this.editedSmartName = newData.name.nicknames;\r\n                        this.setState({editId: newData.id}, () => {\r\n                            if (!newData.type || !newData.displayTraits) {\r\n                                this.setState({browse: true, message: I18n.t('Please add action and trait to complete the Google Home state.')});\r\n                            } else {\r\n                                this.setState({browse: true});\r\n                            }\r\n\r\n                            this.onGHParamsChange(newData, oldData);\r\n                            const devices = [...this.state.devices];\r\n                            devices[devices.indexOf(oldData)] = newData;\r\n                            this.setState({ ...this.state, devices});\r\n                        });\r\n                    }}\r\n\r\n                    onDelete={oldData => {\r\n                        // if smartenum set smartname on false if not delete/reset smartname content\r\n                        if (oldData.smartEnum === 'X') {\r\n                            this.setState({deleteId: oldData.id});\r\n                        } else {\r\n                            this.props.socket.getObject(oldData.id)\r\n                                .then(obj => {\r\n                                    if (obj && obj.common && obj.common['smartName']) {\r\n                                        delete obj.common['smartName']['ghTraits'];\r\n                                        delete obj.common['smartName']['ghType'];\r\n                                        delete obj.common['smartName']['ghAttributes'];\r\n                                    }\r\n                                    return this.props.socket.setObject(oldData.id, obj);\r\n                                });\r\n                        }\r\n\r\n                        return new Promise(resolve => {\r\n                            setTimeout(() => {\r\n                                if (this.state.deleteId) {\r\n                                    this.onDelete();\r\n                                } else {\r\n                                    this.informInstance(oldData.id);\r\n                                }\r\n                                resolve();\r\n                                const devices = [...this.state.devices];\r\n                                devices.splice(devices.indexOf(oldData), 1);\r\n                                this.setState({ ...this.state, devices });\r\n                            }, 600);\r\n                        })\r\n                    }}\r\n                />\r\n            </div>\r\n            {this.renderMessage()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nGoogleSmartNames.propTypes = {\r\n    common:      PropTypes.object.isRequired,\r\n    native:      PropTypes.object.isRequired,\r\n    instance:    PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError:     PropTypes.func,\r\n    onLoad:      PropTypes.func,\r\n    onChange:    PropTypes.func,\r\n    socket:      PropTypes.object.isRequired,\r\n    themeType:   PropTypes.string.isRequired,\r\n};\r\n\r\nexport const withMediaQuery = () => Component => props =>\r\n    <Component smallDisplay={useMediaQuery('(max-width:600px)')} {...props} />;\r\n\r\nexport default withStyles(styles)(withMediaQuery()(GoogleSmartNames));\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabExtended from './Tabs/Extended';\r\nimport TabServices from './Tabs/Services';\r\nimport TabEnums from './Tabs/Enums';\r\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\r\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\r\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    onConnectionReady() {\r\n        this.socket.getState(`${this.adapterName}.${this.instance}.info.ackTempPassword`)\r\n            .then(state => {\r\n                if (!state || !state.val) {\r\n                    this.setState({showAckTempPasswordDialog: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'enums') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'alexa') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'google') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'alisa') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'extended') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'services') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 3 + offset;\r\n        }\r\n    }\r\n\r\n    renderAckTempPasswordDialog() {\r\n        if (!this.state.showAckTempPasswordDialog) {\r\n            return null;\r\n        } else {\r\n            return <Dialog\r\n                open={true}\r\n                onClose={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{I18n.t('Information: The skill linking process was changed!')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {I18n.t('The linking process has been changed for a few months.')}\r\n                        {I18n.t('Now there is no temporary password that will be sent by email.')}<br/><br/>\r\n                        <b>{I18n.t('The password is equal with ioBroker.pro and with password that was entered here in the settings!')}</b>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))} autoFocus>\r\n                        {I18n.t('Not understood')}\r\n                    </Button>\r\n                    <Button onClick={() =>\r\n                        this.socket.setState(`${this.adapterName}.${this.instance}.info.ackTempPassword`, true, true)\r\n                            .then(() =>\r\n                                this.setState({showAckTempPasswordDialog: false}))\r\n                    } color=\"primary\" >\r\n                        {I18n.t('Roger that')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return (\r\n            <MuiThemeProvider theme={this.state.theme}>\r\n                <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)} scrollButtons=\"auto\">\r\n                            <Tab label={I18n.t('Options')} data-name=\"options\" />\r\n                            <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\r\n                            {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\r\n                            {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\r\n                            {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\r\n                            <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\r\n                            <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\r\n                        </Tabs>\r\n                    </AppBar>\r\n\r\n                    <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                        {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                            key=\"options\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            onLoad={native => this.onLoadConfig(native)}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            changed={this.state.changed}\r\n                            onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                        />)}\r\n                        {this.state.selectedTab === 'enums' && (<TabEnums\r\n                            key=\"enums\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                        />)}\r\n                        {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\r\n                            key=\"alexa\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                            {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\r\n                            key=\"google\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                        {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\r\n                            key=\"alisa\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                        {this.state.selectedTab === 'extended' && (<TabExtended\r\n                            key=\"extended\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                        />)}\r\n                        {this.state.selectedTab === 'services' && (<TabServices\r\n                            key=\"services\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            onShowError={error => this.showError(error)}\r\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                        />)}\r\n                    </div>\r\n                    {this.renderError()}\r\n                    {this.renderSaveCloseButtons()}\r\n                    {this.renderAckTempPasswordDialog()}\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'iot';\r\nlet themeName = Utils.getThemeName();\r\n\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}