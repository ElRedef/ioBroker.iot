{"version":3,"sources":["Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Logo","Component","filename","obj","el","window","document","createElement","setAttribute","encodeURIComponent","JSON","stringify","style","display","body","appendChild","click","removeChild","handleFileSelect","evt","f","target","files","r","FileReader","onload","e","contents","result","json","parse","native","common","name","this","props","onError","I18n","t","onLoad","toString","readAsText","alert","download","_id","instance","news","titleLang","desc","generateFile","upload","input","addEventListener","render","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","title","withStyles","theme","marginRight","marginTop","float","padding","width","Options","constructor","super","state","inAction","forceUserCreate","showHint","toast","isInstanceAlive","socket","getObject","adapterName","then","getState","setState","enabled","val","renderInput","attr","type","TextField","label","value","onChange","margin","renderCard","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","resetCerts","ack","Promise","resolve","setObject","catch","err","onForceUserCreate","renderToast","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","IconButton","key","close","renderHint","text","renderCheckbox","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","errorText","column","columnSettings","googleHome","newVal","variant","button","disabled","fontWeight","columnLogo","minHeight","minWidth","maxWidth","height","verticalAlign","ExtendedOptions","showSelectId","renderSelect","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","getSelectIdDialog","prefix","connection","selected","statesOnly","onOk","marginLeft","marginBottom","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","getAdapterInstances","list","nsList","replace","componentWillMount","subscribeState","componentWillUnmount","unsubscribeState","reissueUrlKey","showError","onChipsDelete","chips","split","filter","a","pos","indexOf","splice","join","onChipsAdd","push","calcNightscoutSecret","email","login","secret","nightscoutPass","renderChips","chipsDiv","onKeyUp","keyCode","trim","word","Chip","onDelete","chip","fullSize","readOnly","copyToClipboard","CopyContentImg","text2command","nightscout","normalSize","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","changed","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","match","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","informInstance","sendTo","addChanged","i","length","onToggleEnum","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","setTimeout","onEdit","getLanguage","en","getObjectNameFromObj","language","renderEnum","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","enumLineEdit","fontSize","renderEnums","renderMessage","changeSmartName","startsWith","newObj","updateSmartName","undefined","renderEditDialog","Dialog","fullWidth","handleOk","aria-labelledby","aria-describedby","DialogTitle","DialogContent","helperText","DialogActions","autoFocus","CircularProgress","columnHeader","columnDiv","overflow","position","right","top","fontStyle","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","onAskDelete","renderActions","actions","sort","b","Icon","actionIcon","onExpand","lineNum","renderSelectByOn","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","renderSelectType","renderChannels","channels","names","types","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","devSubLine","devLineActions","channelLineActions","devSubLineName","devSubSubLineName","devSubLineDelete","renderDevice","nameModified","devModified","devCount","ch","error","devLine","devLineNumber","devLineExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","preventDefault","editedId","onKeyDown","defaultValue","renderConfirmDialog","renderDevices","toLowerCase","placeholder","devLineEnabled","left","devSubLineEdit","OnOff","Brightness","RGB","AlisaDevices","iobID","main","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","GoogleSmartNames","myTableRef","React","createRef","columns","field","editable","cellStyle","wordBreak","lookup","editComponent","cols","rows","onGHParamsChange","newData","oldData","displayTraits","Array","isArray","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","flex","tableRef","onRowClick","rowData","current","onTreeExpandChanged","tableData","path","parentChildData","row","element","parentId","data","icons","isLoading","actionsColumnIndex","paging","rowStyle","smartEnum","ioType","selectedRow","backgroundColor","onRowUpdate","nicknames","onRowDelete","App","GenericApp","extendedProps","encryptedFields","translations","require","port","parseInt","location","isNaN","protocol","getSelectedTab","selectedTab","amazonAlexa","yandexAlisa","loaded","AppBar","Tabs","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","themeType","root","Boolean","hostname","build","ReactDOM","createTheme","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d44408f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from './Logo';\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            forceUserCreate: false,\n            showHint: false,\n            toast: '',\n            isInstanceAlive: false,\n        };\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts() {\n        this.setState({inAction: true});\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (this.state.forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    onForceUserCreate() {\n        this.setState({forceUserCreate: !this.state.forceUserCreate, showHint: !this.state.forceUserCreate});\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderHint() {\n        if (this.state.showHint) {\n            return (<Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Logo\n                    instance={this.props.instance}\n                    common={this.props.common}\n                    native={this.props.native}\n                    onError={text => this.setState({errorText: text})}\n                    onLoad={this.props.onLoad}\n                />\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnSettings}>\n                    {this.renderInput('ioBroker.pro Login', 'login')}<br/>\n                    {this.renderInput('ioBroker.pro Password', 'pass', 'password')}<br/>\n                    {this.renderCheckbox('Amazon Alexa', 'amazonAlexa', {marginTop: 10})}<br/>\n                    <FormControlLabel key=\"googleHome\" style={{paddingTop: 5}} className={this.props.classes.controlElement}\n                        control={\n                          <Checkbox\n                              checked={this.props.native.googleHome}\n                              onChange={() => {\n                                  // activate alexa if google home is on (temporary)\n                                  const newVal = !this.props.native.googleHome;\n                                  this.props.onChange('googleHome', newVal, () =>\n                                      newVal && this.props.onChange('amazonAlexa', true));\n                              }}\n                              color=\"primary\"\n                          />\n                        }\n                        label={I18n.t('Google Home')}\n                    />\n                    {/*this.renderCheckbox('Google Home', 'googleHome', {marginTop: 10})*/}<br/>\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa', {marginTop: 10})}<br/>\n                    <br/>\n                    <Button variant=\"outlined\"\n                            className={this.props.classes.button}\n                            disabled={this.state.inAction || !this.state.isInstanceAlive}\n                            title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                            onClick={() => this.resetCerts()}>\n                        <IconReload/>{I18n.t('Get new connection certificates')}\n                    </Button>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.forceUserCreate}\n                                onChange={() => this.onForceUserCreate()}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Request email with password one more time')}\n                    />\n                    <p style={{fontWeight: 'bold'}}>{Utils.renderTextWithA(I18n.t('help_tip'))}</p>\n                    <p style={{fontWeight: 'bold', paddingTop: 20}}>{Utils.renderTextWithA(I18n.t('help_link_tip1'))}</p>\n                    <p style={{fontWeight: 'bold'}}>{Utils.renderTextWithA(I18n.t('help_link_tip2'))}</p>\n                    <p style={{fontWeight: 'bold', color: 'red'}}>{Utils.renderTextWithA(I18n.t('help_link_tip3'))}</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard()}</div>\n                {this.renderHint()}\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={this.props.native[attr]}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport CopyContentImg from '@iobroker/adapter-react/assets/copy-content.svg';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from \"@iobroker/adapter-react/Dialogs/SelectID\";\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID3\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={this.props.native[attr]}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                <br/>\n                <br/>\n                <div className={this.props.classes.controlElement}>\n                    <TextField\n                        label={I18n.t('Read blood sugar from')}\n                        className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n                        value={this.props.native.amazonAlexaBlood || ''}\n                        type=\"text\"\n                        onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                        margin=\"normal\"\n                    />\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                    <FormControlLabel  className={this.props.classes.controlElement}\n                        control={\n                            <Checkbox\n                                style={{paddingLeft: 30}}\n                                checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                                onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Short answer for blood sugar')}\n                    />\n                </div>\n                <br/>\n                {this.renderToast()}\n                {this.getSelectIdDialog('amazonAlexaBlood')}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editedSmartType: null,\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\n        if (state && state.ack === true && state.val === true) {\n            this.devTimer && clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    let editedSmartType = null;\n                    if (!device.additionalApplianceDetails.group) {\n                        editedSmartType = device.additionalApplianceDetails.smartType;\n                    }\n\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectTypeSelector(type, onChange) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            try {\n                channels && Object.keys(channels).forEach(chan =>\n                    chan && channels[chan].forEach(el => {\n                        if (this.state.changed.indexOf(el.id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === el.id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    })\n                );\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            const editedSmartType = this.state.editedSmartType;\n\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRGB = '#ff7ee3';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        minWidth: 100,\n        display: 'inline-block',\n        fontSize: 13,\n        paddingLeft: 70,\n        //width: 'calc(100% - 400px)'\n    },\n    devSubSubLine:  {\n        fontSize: 10,\n        fontStyle: 'italic',\n        display: 'inline-block',\n        marginLeft: 15\n    },\n    devSubLineSetId:  {\n        fontStyle: 'italic',\n        display: 'block',\n        color: '#999'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlisaDevices extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        console.log('Send BROWSE!');\n\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.iobID === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.name;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName:smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'OnOff') return -1;\n            if (b === 'OnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].name);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        const id = dev.main.getId;\n        const name = dev.func;\n        let background = DEFAULT_CHANNEL_COLOR;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n            background = LAST_CHANGED_COLOR;\n        }*/\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\n            <div className={classes.devSubSubLine}>\n                <div>{dev.main.getId}</div>\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\n            </div>\n\n        </div>));\n\n        dev.attributes.forEach(attr => {\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\n                <div className={classes.devSubSubLine}>\n                    <div>{attr.getId}</div>\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\n                </div>\n            </div>));\n        });\n\n        /*if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n        }*/\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (dev.iobID === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        //const isComplex = dev.\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {dev.attributes.length ?\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\n\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlisaDevices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlisaDevices);\n","import React, {Component, forwardRef} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\n\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n \nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nconst styles = () => ({})\n\nclass GoogleSmartNames extends Component {\n    constructor(props) {\n        super(props);\n        this.myTableRef =  React.createRef();\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: '',\n            columns: [\n                { title: 'Id', field: 'id' , editable: 'never' ,   cellStyle: {\n                    maxWidth: \"12rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  }},\n                { title: 'Smartnames', field: 'name.nicknames' },\n                { title: 'ioBType', field: 'ioType',editable: 'never', cellStyle: {\n                    maxWidth: \"4rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  }},\n                { title: 'Type', field: 'type' ,  lookup: { \n                    \"action.devices.types.AC_UNIT\": 'Air conditioning unit\t', \n                    \"action.devices.types.AIRFRESHENER\": 'Air Freshener' ,\n                    \"action.devices.types.AIRPURIFIER\": 'Air purifier' ,\n                    \"action.devices.types.AWNING\": 'Awning' ,\n                    \"action.devices.types.BLINDS\": 'Blinds' ,\n                    \"action.devices.types.BOILER\": 'Boiler' ,\n                    \"action.devices.types.CAMERA\": 'Camera' ,\n                    \"action.devices.types.COFFEE_MAKER\": 'Coffee maker' ,\n                    \"action.devices.types.CURTAIN\": 'Curtain' ,\n                    \"action.devices.types.DISHWASHER\": 'Dishwasher' ,\n                    \"action.devices.types.DOOR\": 'Door' ,\n                    \"action.devices.types.DRYER\": 'Dryer' ,\n                    \"action.devices.types.FAN\": 'Fan' ,\n                    \"action.devices.types.FIREPLACE\": 'Fireplace' ,\n                    \"action.devices.types.GARAGE\": 'Garage' ,\n                    \"action.devices.types.GATE\": 'Gate' ,\n                    \"action.devices.types.HEATER\": 'Heater' ,\n                    \"action.devices.types.HOOD\": 'Hood' ,\n                    \"action.devices.types.KETTLE\": 'Kettle' ,\n                    \"action.devices.types.LIGHT\": 'Light' ,\n                    \"action.devices.types.LOCK\": 'Lock' ,\n                    \"action.devices.types.MOP\": 'Mop' ,\n                    \"action.devices.types.MICROWAVE\": 'Microwave' ,\n                    \"action.devices.types.OUTLET\": 'Outlet' ,\n                    \"action.devices.types.OVEN\": 'Oven' ,\n                    \"action.devices.types.PERGOLA\": 'Pergola' ,\n                    \"action.devices.types.REFRIGERATOR\": 'Refrigerator' ,\n                    \"action.devices.types.SCENE\": 'Scene' ,\n                    \"action.devices.types.SECURITYSYSTEM\": 'Security System' ,\n                    \"action.devices.types.SENSOR\": 'Sensor' ,\n                    \"action.devices.types.SHUTTER\": 'Shutter' ,\n                    \"action.devices.types.SHOWER\": 'Shower' ,\n                    \"action.devices.types.SPEAKER\": 'Speaker' ,\n                    \"action.devices.types.SPRINKLER\": 'Sprinkler' ,\n                    \"action.devices.types.SWITCH\": 'Switch' ,\n                    \"action.devices.types.THERMOSTAT\": 'Thermostat' ,\n                    \"action.devices.types.VACUUM\": 'Vacuum' ,\n                    \"action.devices.types.VALVE\": 'Valve' ,\n                    \"action.devices.types.WASHER\": 'Washer' ,\n                    \"action.devices.types.WATERHEATER\": 'Water heater' ,\n                    \"action.devices.types.WINDOW\": 'Window' \n                }},\n                { title: 'Funktion/Trait', field: 'displayTraits' ,  lookup: { \n                    // \"action.devices.traits.ArmDisarm\":'ArmDisarm',\n                    \"action.devices.traits.Brightness\":'Brightness',\n                    // \"action.devices.traits.CameraStream\":'CameraStream',\n                    \"action.devices.traits.ColorSetting_temperature\":'ColorSetting_Temperature',\n                    \"action.devices.traits.ColorSetting_spectrumRGB\":'ColorSetting_RGB',\n                    // \"action.devices.traits.Dock\":'Dock',\n                    \"action.devices.traits.FanSpeed\":'FanSpeed',\n                    // \"action.devices.traits.LightEffects\":'LightEffects',\n                    // \"action.devices.traits.Locator\":'Locator',\n                    \"action.devices.traits.LockUnlock\":'LockUnlock',\n                    \"action.devices.traits.Modes\":'Modes',\n                    \"action.devices.traits.OnOff\":'OnOff',\n                    \"action.devices.traits.OpenClose\":'OpenClose',\n                    // \"action.devices.traits.RunCycle\":'RunCycle',\n                    \"action.devices.traits.Scene\":'Scene',\n                    // \"action.devices.traits.Sensor\":'Sensor',\n                    \"action.devices.traits.StartStop\":'StartStop',\n                    \"action.devices.traits.TemperatureControl_temperatureSetpointCelsius\":'Oven_SetTemp',\n                    \"action.devices.traits.TemperatureControl_temperatureAmbientCelsius\":'Oven_StatusTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatMode\":'Thermostat_Mode',\n                    \"action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint\":'Thermostat_SetTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient\":'Thermostat_StatusTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatHumidityAmbient\":'Thermostat_StatusHumidity',\n                    // \"action.devices.traits.Timer\":'Timer',\n                    \"action.devices.traits.Toggles\":'Toggles',\n                    \"action.devices.traits.Volume\":'Volume',\n                    }},\n\n                { title: 'Attributes', field: 'displayAttributes' ,   cellStyle: {\n                    maxWidth: \"12rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  },  \n                editComponent: props => (\n                    <textarea cols=\"40\" rows=\"20\"\n                      value={props.value}\n                      onChange={e => props.onChange(e.target.value)}\n                    />\n                  )},\n                { title: 'Room', field: 'roomHint', editable: 'never' },\n                { title: 'Automatisch', field: 'smartEnum', editable: 'never',cellStyle: {\n                    maxWidth: \"3rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  } },\n                  { title: 'Conversation to GH', field: 'displayConv2GH' ,  cellStyle: {\n                    maxWidth: \"4rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  },  \n                  editComponent: props => (\n                    <div>Conversation to Google Home = function(value)&#123; <br></br>\n                     <textarea cols=\"40\" rows=\"20\"\n                        value={props.value}\n                        onChange={e => props.onChange(e.target.value)}\n                      />     &#125;</div>\n                )}, { title: 'Conversation to ioB', field: 'displayConv2iob' , cellStyle: {\n                    maxWidth: \"4rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                    },  \n                    editComponent: props => (\n                        <div>Conversation to ioBroker = function(value)&#123; <br></br>\n                        <textarea cols=\"40\" rows=\"20\"\n                        value={props.value}\n                        onChange={e => props.onChange(e.target.value)}\n                        />     &#125;</div>\n                    )},  \n                  \n              ]\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 10);\n        }\n    }\n\n    onResultUpdate(state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n     onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.common.smartName  ?  device.common.smartName  : device._id;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n\n   \n\n    renderSelectByOn(id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    \n    onGHParamsChange(newData, oldData) {\n        this.addChanged(newData.id, () => {\n            this.props.socket.getObject(newData.id)\n                .then(obj => {\n                  //  id, newData.type, newData.displayTraits, newData.displayAttributes\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\n                        if (!Array.isArray(newData.displayTraits)) {\n                            newData.displayTraits=[newData.displayTraits]\n                        }\n\n                        obj.common.smartName.ghTraits = newData.displayTraits;\n                    }\n                    if (newData.type !== oldData.type) {\n                        obj.common.smartName.ghType = newData.type;\n                    }\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\n                        obj.common.smartName.ghAttributes = newData.displayAttributes\n                        try {\n                            if(obj.common.smartName.ghAttributes) {\n                            JSON.parse(obj.common.smartName.ghAttributes)\n                        }\n                        } catch (error) {\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')})\n                        }\n                    }\n                    if (newData.conv2GH) {\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\n                    }\n                    if (newData.conv2iob) {\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\n                    }\n                    return this.props.socket.setObject(newData.id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(newData.id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n   \n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n                                \n                                if (!obj.common.smartName) {\n\n                                    obj.common.smartName = {ghType:\"action.devices.types.LIGHT\"}\n                                    obj.common.smartName = {ghTraits:[\"action.devices.traits.OnOff\"]}\n                                } else {\n\n                                    obj.common.smartName.ghType=\"action.devices.types.LIGHT\"\n                                    obj.common.smartName.ghTraits=[\"action.devices.traits.OnOff\"];\n                                }\n                                \n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => {\n                                        this.informInstance(obj._id);\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});})\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    \n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"gh\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab \n                style ={{marginLeft:\"1rem\"}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n            \n                {this.renderMessage()}\n                {this.getSelectIdDialog()}\n                <div style={{marginTop:\"4rem\",display: \"flex\"}}>\n                <div style={{ flex: \"50%\"}}><div style={{fontWeight:\"bold\"}}> Auto Mode</div>\n                <div style={{marginTop:\"0.8rem\",marginRight:\"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\n              \n                </div>\n                <div style={{ flex: \"50%\"}}><div style={{fontWeight:\"bold\"}}>Manuell Mode</div>\n                <span>{Utils.renderTextWithA(I18n.t(\"Please select a  <a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/guides/'>TYPE</a> and a\"))}</span>\n                <span>{Utils.renderTextWithA(I18n.t(\"<a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/traits/' > TRAIT</a> after adding a state.   To add multiple traits add a different id and trait but same smartname, type and room. Comma separated for mutiple smartnames.  To assign a room please use the ioBroker Enums/Aufzählungen.  With attributes you can for example set a range for the color temperature \"))}</span>\n                <span>  {Utils.renderTextWithA(I18n.t(\"<a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/traits/colorsetting'> Infos about Attributes you can find here.</a> Empty attribute is {}\"))}</span>\n                </div>\n\n                </div>\n                <br></br>\n                <div style={{ flex: \"100%\"}}><div style={{fontWeight:\"bold\"}}>{Utils.renderTextWithA(I18n.t(\"For help use this forum <a target='_blank' rel='noopener noreferrer' href='https://forum.iobroker.net/topic/24061/google-home-assistant-iobroker-einrichten-nutzen/'>thread</a>\"))}</div></div>\n             \n                \n                <div>\n                <MaterialTable\n                style ={{marginTop:\"1rem\",display: \"inline-block\"}}\n                title=\"\"\n                tableRef={this.myTableRef}\n                onRowClick={(e, rowData) => {\n                    this.myTableRef.current.onTreeExpandChanged(rowData.tableData.path, rowData)\n                }\n            }\n           \n                columns={this.state.columns}\n                parentChildData={(row, rows) => {\n                    const result = rows.find(function(element) {\n                        if (element.id && row.parentId && element.id === row.parentId) {\n                            console.log(row.parentId)\n                            return true;\n                        };\n                      })\n                      console.log(result)\n                      return result\n                }} \n                data={this.state.devices}\n                icons={tableIcons}\n                isLoading={this.state.browse }\n                options={{\n                    actionsColumnIndex: -1,\n                    paging: false, \n                    rowStyle: (rowData) => {\n                        let background = '#FFF'\n                        if (rowData.smartEnum) {\n                            background = '#F7FFEA'\n                        }\n                        if (rowData.ioType === \"channel\" || rowData.ioType === \"device\") {\n                            if (rowData.smartEnum) {\n                                background = '#eafff2'\n                            } else {\n                                background = '#E2FFFF'\n                            }\n                            \n                        }\n                        if  (this.state.selectedRow && this.state.selectedRow.tableData.id === rowData.tableData.id) {\n                            background =  '#EEE'\n                        }\n\n\n                        return {backgroundColor:  background}\n                      }\n                  }}\n               \n                editable={{\n                    \n                    onRowUpdate: (newData, oldData) => {\n                        if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\n                            newData.name.nicknames = newData.name.nicknames.join(\",\");\n                        }\n                        this.editedSmartName = newData.name.nicknames\n                        this.setState({editId: newData.id});\n                       \n                    return new Promise(resolve => {\n                        this.setState({browse:true})\n                        setTimeout(() => {\n                            if(!newData.type || !newData.displayTraits) {\n                                this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});\n                            }\n                        \n                        this.onGHParamsChange(newData, oldData);\n                        resolve();\n                        const devices = [...this.state.devices];\n                        devices[devices.indexOf(oldData)] = newData;\n                        this.setState({ ...this.state, devices });\n                        }, 500);\n                    })},\n                    onRowDelete: (oldData) => {\n                    // if smartenum set smartname on false if not delete/reset smartname content\n                    if (oldData.smartEnum=== \"X\") {\n                        this.setState({deleteId: oldData.id});\n                    } else {\n                        this.props.socket.getObject(oldData.id)\n                        .then(obj => {\n                            if (obj.common[\"smartName\"]) {\n                                delete obj.common[\"smartName\"][\"ghTraits\"]\n                                delete obj.common[\"smartName\"][\"ghType\"]\n                                delete obj.common[\"smartName\"][\"ghAttributes\"]\n                            }\n                            \n                            return this.props.socket.setObject(oldData.id, obj);\n                        })\n                    }\n                    return new Promise(resolve => {\n                        setTimeout(() => {\n                            if (this.state.deleteId) {\n                                this.onDelete();\n                            } else {\n\n                            this.informInstance(oldData.id);\n                            }\n                            resolve();\n                            const devices = [...this.state.devices];\n                            devices.splice(devices.indexOf(oldData), 1);\n                            this.setState({ ...this.state, devices });\n                        }, 600);\n                    })\n                    }\n                }}\n                /></div>\n\n            </form>\n        );\n    }\n}\n\nGoogleSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GoogleSmartNames);\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabExtended from './Tabs/Extended';\r\nimport TabServices from './Tabs/Services';\r\nimport TabEnums from './Tabs/Enums';\r\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\r\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\r\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        // get actual port\r\n        extendedProps.socket = extendedProps.socket || {};\r\n        extendedProps.socket.port = parseInt(window.location.port, 10);\r\n        if (isNaN(extendedProps.socket.port)) {\r\n            switch (window.location.protocol) {\r\n                case 'https:':\r\n                    extendedProps.socket.port = 443;\r\n                    break;\r\n                case 'http:':\r\n                    extendedProps.socket.port = 80;\r\n                    break;\r\n            }\r\n        }\r\n        // for debug and fallback purposes\r\n        if (!extendedProps.socket.port || extendedProps.socket.port === 3000) {\r\n            extendedProps.socket.port = 8081;\r\n        }\r\n\r\n        super(extendedProps);\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'enums') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'alexa') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'google') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\r\n            return 2 + offset;\r\n        }\r\n        if (tab === 'alisa') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'extended') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'services') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 3 + offset;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return (<Loader theme={this.state.themeType}/>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\r\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\r\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\r\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\r\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\r\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\r\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                        key=\"options\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        onLoad={native => this.onLoadConfig(native)}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />)}\r\n                    {this.state.selectedTab === 'enums' && (<TabEnums\r\n                        key=\"enums\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                    />)}\r\n                    {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\r\n                        key=\"alexa\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />)}\r\n                        {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\r\n                        key=\"google\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />)}\r\n                    {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\r\n                        key=\"alisa\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        adapterName={this.adapterName}\r\n                        instance={this.instance}\r\n                    />)}\r\n                    {this.state.selectedTab === 'extended' && (<TabExtended\r\n                        key=\"extended\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    />)}\r\n                    {this.state.selectedTab === 'services' && (<TabServices\r\n                        key=\"services\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onShowError={error => this.showError(error)}\r\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    />)}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createTheme from '@iobroker/adapter-react/createTheme';\n\nlet theme = 'light';\n\nfunction build() {\n    return ReactDOM.render(<MuiThemeProvider theme={createTheme(theme)}>\n        <App onThemeChange={_theme => {\n            theme = _theme;\n            build();\n        }}/>\n    </MuiThemeProvider>, document.getElementById('root'));\n}\n\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}