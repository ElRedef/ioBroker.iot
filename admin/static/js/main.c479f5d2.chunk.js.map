{"version":3,"sources":["Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Components/TreeTable.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","onAliveChanged","id","state","adapterName","instance","setState","isInstanceAlive","val","inAction","toast","errorWithPercent","socket","getState","then","this","subscribeState","unsubscribeState","pass","length","match","I18n","t","title","attr","type","error","checkPassword","native","TextField","label","className","classes","input","value","helperText","onChange","e","target","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","style","textAlign","Button","size","color","onClick","window","open","focus","forceUserCreate","ack","Promise","resolve","getObject","obj","common","enabled","setObject","catch","err","onError","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","action","IconButton","key","aria-label","close","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","text","errorText","onLoad","column","columnSettings","renderInput","renderCheckbox","marginTop","googleHome","newVal","changed","hintUnsaved","variant","button","disabled","resetCerts","marginRight","fontWeight","columnLogo","renderCard","renderToast","Component","withStyles","theme","width","minHeight","minWidth","marginBottom","maxWidth","height","display","verticalAlign","cannotUse","fontSize","fontStyle","ExtendedOptions","showSelectId","options","FormControl","Select","Input","name","map","item","MenuItem","FormHelperText","imagePrefix","selected","types","onOk","renderSelect","Fab","marginLeft","getSelectIdDialog","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","getAdapterInstances","list","nsList","_id","replace","showError","chips","split","filter","a","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","encodeURIComponent","readOnly","copyToClipboard","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","padding","Enums","editId","editedSmartName","funcs","rooms","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","JSON","parse","stringify","i","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","palette","primary","light","contrastText","actionsMapping","turnOn","icon","IconOn","desc","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showListOfDevices","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","actions","sort","b","Icon","actionIcon","lineNum","items","toString","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","result","channels","names","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","themeType","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","nameModified","devModified","devCount","ch","el","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","role","headerRow","headerCell","tableDiv","tableCell","lines","copy","placeholder","InputProps","endAdornment","renderDevices","renderConfirmDialog","renderListOfDevices","devLineEnabled","left","devSubLineEdit","spacing","main","OnOff","Brightness","RGB","AlisaDevices","iobID","includes","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","getAttr","lookup","shift","descendingComparator","orderBy","_a","_b","TreeTable","opened","localStorage","getItem","Array","isArray","editMode","deleteMode","editData","order","columns","field","col","level","editable","TableCell","clsx","cell","cellSecondary","cellStyle","component","v","data","parentId","children","it","TableRow","row","rowSecondary","rowMainWithChildren","rowMainWithoutChildren","rowNoEdit","cellExpand","scope","ii","renderCell","cellButton","newData","setAttr","onUpdate","renderLine","property","isAsc","TableHead","cellHeader","sortDirection","TableSortLabel","active","direction","handleRequestSort","visuallyHidden","table","array","comparator","stabilizedThis","index","stableSort","getComparator","tableContainer","Table","stickyHeader","renderHead","TableBody","React","paddingBottom","paddingRight","wordBreak","whiteSpace","width_name_nicknames","width_ioType","width_type","width_displayTraits","width_roomHint","clip","GoogleSmartNames","myTableRef","createRef","expertMode","helpHidden","searchText","helpHeight","editComponent","rows","resize","helpRef","oldData","displayTraits","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","nicknames","n","roomHint","desktop","innerHeight","innerWidth","smallDisplay","manualModeHint","ref","flex","Toolbar","hideHelp","setItem","prevProps","prevState","snapshot","current","h","clientHeight","defaultNames","renderToolbar","renderInstructions","onGHParamsChange","smartEnum","useMediaQuery","App","extendedProps","encryptedFields","translations","require","showAckTempPasswordDialog","selectedTab","amazonAlexa","yandexAlisa","DialogContentText","loaded","default","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","scrollButtons","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","renderAckTempPasswordDialog","GenericApp","root","Boolean","location","hostname","themeName","getThemeName","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c479f5d2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    checkPassword(pass) {\n        if (pass.length < 8 || !pass.match(/[a-z]/) || !pass.match(/[A-Z]/) || !pass.match(/\\d/)) {\n            return I18n.t('invalid_password_warning');\n        } else {\n            return false;\n        }\n    }\n\n    renderInput(title, attr, type) {\n        const error = attr === 'pass' && this.checkPassword(this.props.native[attr]);\n        return (<TextField\n            label={ I18n.t(title) }\n            error={ !!error  }\n            className={ this.props.classes.input }\n            value={ this.props.native[attr] }\n            type={ type || 'text' }\n            helperText={ error || '' }\n            onChange={ e => this.props.onChange(attr, e.target.value) }\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts(forceUserCreate) {\n        this.setState({ inAction: true });\n\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return <form className={ this.props.classes.tab }>\n            <Logo\n                instance={ this.props.instance }\n                common={ this.props.common }\n                native={ this.props.native }\n                onError={ text => this.setState({errorText: text}) }\n                onLoad={ this.props.onLoad }\n            />\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                { this.renderInput('ioBroker.pro Login', 'login') }<br/>\n                { this.renderInput('ioBroker.pro Password', 'pass', 'password') }<br/>\n                { this.renderCheckbox('Amazon Alexa', 'amazonAlexa') }\n                <FormControlLabel key=\"googleHome\" className={ this.props.classes.controlElement }\n                                  style={{ marginTop: 5 }}\n                    control={\n                      <Checkbox\n                          checked={this.props.native.googleHome}\n                          onChange={() => {\n                              // activate alexa if google home is on (temporary)\n                              const newVal = !this.props.native.googleHome;\n                              this.props.onChange('googleHome', newVal, () =>\n                                  newVal && this.props.onChange('amazonAlexa', true));\n                          }}\n                          color=\"primary\"\n                      />\n                    }\n                    label={I18n.t('Google Home')}\n                />\n                {this.renderCheckbox('Yandex Алиса', 'yandexAlisa')}\n                <br/>\n\n                <p>{I18n.t('new_certs_tip')}</p>\n                {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                <Button variant=\"outlined\"\n                        className={ this.props.classes.button }\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                        onClick={ () => this.resetCerts() }>\n                    <IconReload style={{ marginRight: 8 }}/>{ I18n.t('Get new connection certificates') }\n                </Button>\n\n                <p>{I18n.t('new_credentials_tip')}</p>\n                {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                <Button variant=\"outlined\"\n                        className={ this.props.classes.button }\n                        disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                        title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                        onClick={ () => this.resetCerts(true) }>\n                    <IconReload  style={{ marginRight: 8 }}/>{ I18n.t('Create IoT credentials anew') }\n                </Button>\n                <p>{ Utils.renderTextWithA(I18n.t('forum_tip')) }</p>\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_tip')) }</p>\n                <p style={{ fontWeight: 'bold', paddingTop: 20}}>{ Utils.renderTextWithA(I18n.t('help_link_tip1')) }</p>\n                <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_link_tip2')) }</p>\n                <p style={{ fontWeight: 'bold', color: 'red'}}>{ Utils.renderTextWithA(I18n.t('help_link_tip3')) }</p>\n            </div>\n            <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard() }</div>\n            { this.renderToast() }\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID2\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport IconCopy from '@iobroker/adapter-react/Components/CopyIcon';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID3\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><IconCopy /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><IconCopy /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout api-secret')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.calcNightscoutSecret()}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />) : null}\n                <br/>\n                <br/>\n                <div className={this.props.classes.controlElement}>\n                    <TextField\n                        label={I18n.t('Read blood sugar from')}\n                        className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n                        value={this.props.native.amazonAlexaBlood || ''}\n                        type=\"text\"\n                        onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                        margin=\"normal\"\n                    />\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                    <FormControlLabel  className={this.props.classes.controlElement}\n                        control={\n                            <Checkbox\n                                style={{paddingLeft: 30}}\n                                checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                                onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Short answer for blood sugar')}\n                    />\n                </div>\n                <br/>\n                {this.renderToast()}\n                {this.getSelectIdDialog('amazonAlexaBlood')}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return <div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>;\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({editId: ''})}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\nimport {MdList as IconList} from 'react-icons/md';\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport copy from \"copy-to-clipboard\";\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    },\n    headerRow: {\n        paddingLeft: theme.spacing(1),\n        background: theme.palette.primary.main,\n    },\n    headerCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '100%'\n    },\n    tableCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '100%'\n    },\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editedSmartType: null,\n            editObjectName: '',\n            deleteId: '',\n\n            showListOfDevices: false,\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\n            .then(list => {\n                this.browseTimer && clearTimeout(this.browseTimer);\n                this.browseTimerCount = 0;\n                this.browseTimer = null;\n                if (list && list.error) {\n                    this.setState({message: I18n.t(list.error)});\n                } else {\n                    if (this.waitForUpdateID) {\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                        }\n                        this.waitForUpdateID = null;\n                    }\n                    console.log('BROWSE received.');\n\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\n                }\n            })\n            .catch(e => this.setState({message: I18n.t('Error %s', e)}));\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\n        if (state && state.ack === true && state.val === true) {\n            this.devTimer && clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    let editedSmartType = null;\n                    if (!device.additionalApplianceDetails.group) {\n                        editedSmartType = device.additionalApplianceDetails.smartType;\n                    }\n\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectTypeSelector(type, onChange) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\n                        if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\n            if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\n                background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            try {\n                channels && Object.keys(channels).forEach(chan =>\n                    chan && channels[chan].forEach(el => {\n                        if (this.state.changed.indexOf(el.id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === el.id) {\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n                        }\n                    })\n                );\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            const editedSmartType = this.state.editedSmartType;\n\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => {\n                    this.editedSmartName = null;\n                    this.setState({editId: '', editedSmartName: ''});\n                }}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({showConfirmation: ''})}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectID1\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={''}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    renderListOfDevices() {\n        if (!this.state.showListOfDevices) {\n            return null;\n        }\n        const classes = this.props.classes;\n\n        return <Dialog\n            open={true}\n            maxWidth=\"xl\"\n            fullWidth\n            onClose={() => this.setState({showListOfDevices: false})}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\n            <DialogContent>\n                <div className={ classes.headerRow } >\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\n                </div>\n                <div className={ this.props.classes.tableDiv } >\n                    { this.state.devices.map((item, i) => <div key={i}>\n                        <div className={ classes.tableCell }>{ item.friendlyName }</div>\n                    </div>)\n                    }\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => {\n                    this.setState({showListOfDevices: false});\n                    const lines = this.state.devices.map(item => item.friendlyName);\n                    copy(lines.join('\\n'));\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\n            </DialogActions>\n        </Dialog>\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n                <Fab style={{marginLeft: '1rem'}}\n                     title={I18n.t('Show all devices for print out')}\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\n                <TextField\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                    InputProps={{\n                        endAdornment: this.state.filter ? (\n                            <IconButton onClick={() => this.setState({ filter: '' })}>\n                                <IconClear />\n                            </IconButton>\n                        ) : undefined,\n                    }}\n                />\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n                {this.renderListOfDevices()}\n            </form>\n        );\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    themeType: PropTypes.string,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\nimport {MdList as IconList} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport copy from \"copy-to-clipboard\";\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRGB = '#ff7ee3';\nconst colorRead = '#00bc00';\n//const colorThermometer = '#bc1600';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\n\nconst actionsMapping = {\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA', 'THERMOSTAT.AC', 'VACUUM_CLEANER'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        minWidth: 100,\n        display: 'inline-block',\n        fontSize: 13,\n        paddingLeft: 70,\n        //width: 'calc(100% - 400px)'\n    },\n    devSubSubLine:  {\n        fontSize: 10,\n        fontStyle: 'italic',\n        display: 'inline-block',\n        marginLeft: 15\n    },\n    devSubLineSetId:  {\n        fontStyle: 'italic',\n        display: 'block',\n        color: '#999'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    },\n    headerRow: {\n        paddingLeft: theme.spacing(1),\n        background: theme.palette.primary.main,\n    },\n    headerCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '100%'\n    },\n    tableCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '100%'\n    },\n});\n\nclass AlisaDevices extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) {\n            return;\n        }\n\n        this.lastBrowse = Date.now();\n\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        this.browseTimer = setTimeout(() => {\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null)\n            .then(list => {\n                this.browseTimer && clearTimeout(this.browseTimer);\n                this.browseTimerCount = 0;\n                this.browseTimer = null;\n\n                if (list && list.error) {\n                    this.setState({message: I18n.t(list.error)});\n                } else {\n                    if (this.waitForUpdateID) {\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                        }\n                        this.waitForUpdateID = null;\n                    }\n\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\n                }\n            });\n    }\n\n    onReadyUpdate(id, state) {\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.iobID === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.name;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n\n        dev.actions.sort((a, b) => {\n            if (a === b) {\n                return 0;\n            }\n            if (a === 'OnOff') {\n                return -1;\n            }\n            if (b === 'OnOff') {\n                return 1;\n            }\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.includes(action)) {\n                const Icon = actionsMapping[action].icon;\n                actions.push(<span key={action} title={actionsMapping[action].desc}>\n                    <Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/>\n                </span>);\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].name);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        const id = dev.main.getId;\n        const name = dev.func;\n        let background = this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n            background = LAST_CHANGED_COLOR;\n        }*/\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\n            <div className={classes.devSubSubLine}>\n                <div>{dev.main.getId}</div>\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\n            </div>\n\n        </div>));\n\n        dev.attributes.forEach(attr => {\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\n                <div className={classes.devSubSubLine}>\n                    <div>{attr.getId}</div>\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\n                </div>\n            </div>));\n        });\n\n        /*if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n        }*/\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (dev.iobID === this.state.lastChanged) {\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\n        }\n\n        //const isComplex = dev.\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {dev.attributes.length ?\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\n\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => {\n                    this.editedSmartName = null;\n                    this.setState({editId: '', editedSmartName: ''});\n                }}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({showConfirmation: ''})}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectAlisa\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={''}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    renderListOfDevices() {\n        if (!this.state.showListOfDevices) {\n            return null;\n        }\n        const classes = this.props.classes;\n\n        return <Dialog\n            open={true}\n            maxWidth=\"xl\"\n            fullWidth\n            onClose={() => this.setState({showListOfDevices: false})}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\n            <DialogContent>\n                <div className={ classes.headerRow } >\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\n                </div>\n                <div className={ this.props.classes.tableDiv } >\n                    { this.state.devices.map((item, i) => <div key={i}>\n                        <div className={ classes.tableCell }>{ item.name }</div>\n                    </div>)\n                    }\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => {\n                    this.setState({showListOfDevices: false});\n                    const lines = this.state.devices.map(item => item.name);\n                    copy(lines.join('\\n'));\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\n            </DialogActions>\n        </Dialog>\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n                <Fab style={{marginLeft: '1rem'}}\n                     title={I18n.t('Show all devices for print out')}\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\n                <TextField\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                    InputProps={{\n                        endAdornment: this.state.filter ? (\n                            <IconButton onClick={() => this.setState({ filter: '' })}>\n                                <IconClear />\n                            </IconButton>\n                        ) : undefined,\n                    }}\n                />\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n                {this.renderListOfDevices()}\n            </form>\n        );\n    }\n}\n\nAlisaDevices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    themeType: PropTypes.string,\n};\n\nexport default withStyles(styles)(AlisaDevices);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport IconEdit from '@material-ui/icons/Edit';\nimport IconDelete from '@material-ui/icons/Delete';\nimport IconExpand from '@material-ui/icons/NavigateNext';\nimport IconCollapse from '@material-ui/icons/ExpandMore';\nimport IconCheck from '@material-ui/icons/Check';\nimport IconClose from '@material-ui/icons/Close';\n\nfunction getAttr(obj, attr, lookup) {\n    if (typeof attr === 'string') {\n        attr = attr.split('.');\n    }\n\n    if (!obj) {\n        return null;\n    }\n\n    if (attr.length === 1) {\n        if (lookup && lookup[obj[attr[0]]]) {\n            return lookup[obj[attr[0]]];\n        } else {\n            return obj[attr[0]];\n        }\n    } else {\n        const name = attr.shift();\n        return getAttr(obj[name], attr);\n    }\n}\n\nfunction setAttr(obj, attr, value) {\n    if (typeof attr === 'string') {\n        attr = attr.split('.');\n    }\n\n    if (attr.length === 1) {\n        return obj[attr[0]] = value;\n    } else {\n        const name = attr.shift();\n        if (obj[name] === null || obj[name] === undefined) {\n            obj[name] = {};\n        }\n        return setAttr(obj[name], attr, value);\n    }\n}\n\nconst styles = theme => ({\n    tableContainer: {\n        width: '100%',\n        height: '100%',\n        overflow: 'auto'\n    },\n    table: {\n        width: '100%',\n        minWidth: 800,\n        maxWidth: 1920,\n    },\n    cell: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingLeft: 4,\n        paddingRight: 4,\n    },\n    rowMainWithChildren: {\n\n    },\n    rowMainWithoutChildren: {\n\n    },\n    rowNoEdit: {\n        opacity: 0.3\n    },\n    cellExpand: {\n        width: 30,\n    },\n    cellButton: {\n        width: 30,\n    },\n    cellHeader: {\n        fontWeight: 'bold',\n        background: theme.palette.type === 'dark' ? '#888' : '#888',\n        color: theme.palette.type === 'dark' ? '#EEE' : '#111',\n        height: 48,\n        wordBreak: 'break-word',\n        whiteSpace: 'pre',\n    },\n    width_name_nicknames: {\n        maxWidth: 150,\n    },\n    width_ioType: {\n        maxWidth: 100,\n    },\n    width_type: {\n        maxWidth: 100,\n    },\n    width_displayTraits: {\n        maxWidth: 100,\n    },\n    width_roomHint: {\n        maxWidth: 100,\n    },\n    rowSecondary: {\n        fontStyle: 'italic',\n    },\n    cellSecondary: {\n        fontSize: 10,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n});\n\nfunction descendingComparator(a, b, orderBy, lookup) {\n    const _a = getAttr(a, orderBy, lookup) || '';\n    const _b = getAttr(b, orderBy, lookup) || '';\n\n    if (_b < _a) {\n        return -1;\n    } else\n    if (_b > _a) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nfunction getComparator(order, orderBy, lookup) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy, lookup)\n        : (a, b) => -descendingComparator(a, b, orderBy, lookup);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order) {\n            return order;\n        } else {\n            return a[1] - b[1];\n        }\n    });\n\n    return stabilizedThis.map(el => el[0]);\n}\n\nclass TreeTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let opened = window.localStorage.getItem('iot.ghome.opened') || '[]';\n        try {\n            opened = JSON.parse(opened) || [];\n        } catch (e) {\n            opened = [];\n        }\n        if (!Array.isArray(opened)) {\n            opened = [];\n        }\n\n        this.state = {\n            opened,\n            editMode: false,\n            deleteMode: false,\n            editData: null,\n            order: 'asc',\n            orderBy: this.props.columns[0].field,\n        }\n    }\n\n    renderCell(item, col, level, i) {\n        if (this.state.editMode === i && col.editable !== 'never') {\n            let val = getAttr(item, col.field);\n            if (Array.isArray(val)) {\n                val = val[0];\n            }\n            return <TableCell\n                key={col.field}\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\n                style={col.cellStyle}\n                component=\"th\" >{\n                    col.lookup ?\n                        <Select\n                            onChange={e => {\n                                const editData = this.state.editData ? {...this.state.editData} : {};\n                                if (e.target.value === val) {\n                                    delete editData[col.field];\n                                } else {\n                                    editData[col.field] = e.target.value;\n                                }\n                                this.setState({editData});\n                            }}\n                            value={(this.state.editData && this.state.editData[col.field]) || val}\n                        >\n                            {Object.keys(col.lookup).map(v => <MenuItem value={v}>{col.lookup[v]}</MenuItem>)}\n                        </Select>\n                        :\n                        <TextField\n                            value={this.state.editData && this.state.editData[col.field] !== undefined ? this.state.editData[col.field] : val}\n                            onChange={e => {\n                                const editData = this.state.editData ? {...this.state.editData} : {};\n                                if (e.target.value === val) {\n                                    delete editData[col.field];\n                                } else {\n                                    editData[col.field] = e.target.value;\n                                }\n                                this.setState({editData});\n                            }}\n                        />\n            }</TableCell>;\n        } else {\n            return <TableCell\n                key={col.field}\n                className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\n                style={col.cellStyle}\n                component=\"th\" >{getAttr(item, col.field, col.lookup)}</TableCell>;\n        }\n    }\n\n    renderLine(item, level) {\n        level = level || 0;\n        const i = this.props.data.indexOf(item);\n        if (!item) {\n            return null;\n        }\n        if (!level && item.parentId) {\n            return null;\n        } else if (level && !item.parentId) {\n            return null; // should never happens\n        } else {\n            // try to find children\n            const children = this.props.data.filter(it => it.parentId === item.id);\n            const opened = this.state.opened.includes(item.id);\n\n            return [\n                <TableRow\n                    key={item.id}\n                    className={clsx(\n                        this.props.classes.row,\n                        level  && this.props.classes.rowSecondary,\n                        !level && children.length && this.props.classes.rowMainWithChildren,\n                        !level && !children.length && this.props.classes.rowMainWithoutChildren,\n                        this.state.editMode !== false && this.state.editMode !== i && this.props.classes.rowNoEdit,\n                        this.state.deleteMode !== false && this.state.deleteMode !== i && this.props.classes.rowNoEdit,\n                    )}\n                >\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellExpand, level && this.props.classes.cellSecondary)}>\n                        {children.length ? <IconButton onClick={() => {\n                            const opened = [...this.state.opened];\n                            const pos = opened.indexOf(item.id);\n                            if (pos === -1) {\n                                opened.push(item.id);\n                                opened.sort();\n                            } else {\n                                opened.splice(pos, 1);\n                            }\n\n                            this.setState({opened});\n                        }}>\n                                {opened ? <IconCollapse/> : <IconExpand/>}\n                            </IconButton>  : null}\n                    </TableCell>\n                    <TableCell scope=\"row\"\n                       className={clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\n                       style={this.props.columns[0].cellStyle}>\n                        {getAttr(item, this.props.columns[0].field, this.props.columns[0].lookup)}\n                    </TableCell>\n                    {this.props.columns.map((col, ii) =>\n                        !ii ? null : this.renderCell(item, col, level, i))}\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\n                        {this.state.editMode === i || this.state.deleteMode === i ?\n                            <IconButton\n                                disabled={this.state.editMode !== false && (!this.state.editData || !Object.keys(this.state.editData).length)}\n                                onClick={() => {\n                                if (this.state.editMode !== false) {\n                                    const newData = JSON.parse(JSON.stringify(item));\n                                    Object.keys(this.state.editData).forEach(attr => setAttr(newData, attr, this.state.editData[attr]));\n                                    this.setState({editMode: false}, () => this.props.onUpdate(newData, item))\n                                } else {\n                                    this.setState({deleteMode: false}, () => this.props.onDelete(item))\n                                }\n                            }}>\n                                <IconCheck/>\n                            </IconButton>\n                            :\n                            <IconButton\n                                disabled={this.state.editMode !== false}\n                                onClick={() => this.setState({editMode: i, editData: null})}>\n                                <IconEdit/>\n                            </IconButton>}\n                    </TableCell>\n                    <TableCell className={clsx(this.props.classes.cell, this.props.classes.cellButton)}>\n                        {this.state.editMode === i || this.state.deleteMode === i ?\n                            <IconButton onClick={() => this.setState({editMode: false, deleteMode: false})}>\n                                <IconClose/>\n                            </IconButton>\n                            :\n                            <IconButton\n                                disabled={this.state.deleteMode !== false}\n                                onClick={() => this.setState({deleteMode: i})}>\n                                <IconDelete/>\n                            </IconButton>\n                        }\n                    </TableCell>\n                </TableRow>,\n                !level && this.state.opened.includes(item.id) ? children.map(item => this.renderLine(item, level + 1)) : null,\n            ];\n        }\n    }\n\n    handleRequestSort(property) {\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\n    }\n\n    renderHead() {\n        return <TableHead>\n            <TableRow>\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellExpand)}/>\n                <TableCell\n                    component=\"th\"\n                    className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + this.props.columns[0].field.replace(/\\./g, '_')])}\n                    style={this.props.columns[0].cellStyle}\n                    sortDirection={this.state.orderBy === this.props.columns[0].field ? this.state.order : false}\n                >\n                    <TableSortLabel\n                        active={this.state.orderBy === this.props.columns[0].field}\n                        direction={this.state.orderBy === this.props.columns[0].field ? this.state.order : 'asc'}\n                        onClick={() => this.handleRequestSort(this.props.columns[0].field)}\n                    >\n                        {this.props.columns[0].title}\n                        {this.state.orderBy === this.props.columns[0].field ?\n                            <span className={this.props.classes.visuallyHidden}>\n                                {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                            </span> : null}\n                    </TableSortLabel>\n                </TableCell>\n                {this.props.columns.map((col, i) =>\n                    !i ? null : <TableCell\n                        key={col.field}\n                        className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + col.field.replace(/\\./g, '_')])}\n                        style={col.cellStyle}\n                        component=\"th\"\n                    >\n                        <TableSortLabel\n                            active={this.state.orderBy === col.field}\n                            direction={this.state.orderBy === col.field ? this.state.order : 'asc'}\n                            onClick={() => this.handleRequestSort(col.field)}\n                        >\n                            {col.title}\n                            {this.state.orderBy === col.field ?\n                                <span className={this.props.classes.visuallyHidden}>\n                                    {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span> : null}\n                        </TableSortLabel>\n                </TableCell>)}\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\n                <TableCell component=\"th\" className={clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/>\n            </TableRow>\n        </TableHead>;\n    }\n\n    render() {\n        const lookup = this.props.columns ? this.props.columns.find(col => col.field === this.state.orderBy).lookup : '';\n        const table = stableSort(this.props.data, getComparator(this.state.order, this.state.orderBy, lookup));\n\n        return <div className={clsx(this.props.classes.tableContainer, this.props.className)}>\n            <Table className={this.props.classes.table} aria-label=\"simple table\" size=\"small\" stickyHeader={true}>\n                {this.renderHead()}\n                <TableBody>\n                    {table.map(item => this.renderLine(item))}\n                </TableBody>\n            </Table>\n        </div>;\n    }\n}\n\nTreeTable.propTypes = {\n    data: PropTypes.array.isRequired,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    columns: PropTypes.array,\n    onUpdate: PropTypes.func,\n    onDelete: PropTypes.func,\n    themeType: PropTypes.string,\n};\n\nexport default withStyles(styles)(TreeTable);\n\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\n\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport ExpertIcon from '@iobroker/adapter-react/Components/ExpertIcon'\nimport TreeTable from '../Components/TreeTable';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {MdList as IconList} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\n\nconst styles = theme => ({\n    tab: {\n        height: '100%',\n        overflow: 'hidden',\n    },\n    tableDiv: {\n        width: '100%',\n        overflow: 'hidden',\n        height: 'calc(100% - 48px)',\n    },\n    searchText: {\n        width: 150,\n        marginLeft: theme.spacing(1),\n        verticalAlign: 'middle'\n    },\n    headerRow: {\n        paddingLeft: theme.spacing(1),\n        background: theme.palette.primary.main,\n    },\n    headerCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '30%'\n    },\n    tableCell: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '30%'\n    },\n});\n\nconst MOBILE_HEIGHT = 400;\nconst MOBILE_WIDTH  = 400;\n\nclass GoogleSmartNames extends Component {\n    constructor(props) {\n        super(props);\n        this.myTableRef =  React.createRef();\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            expertMode: window.localStorage.getItem('App.expertMode') !== 'true',\n            helpHidden: window.localStorage.getItem('App.helpHidden') === 'true',\n            showSelectId: false,\n            searchText: '',\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: '',\n            helpHeight: 0\n        };\n\n        this.columns = [\n            {\n                title: I18n.t('ID'),\n                field: 'id',\n                editable: 'never',\n                cellStyle: {\n                    maxWidth: '12rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                }\n            },\n            {title: I18n.t('Smart names'), field: 'name.nicknames'},\n            {title: I18n.t('ioBType'), field: 'ioType', editable: 'never', cellStyle: {\n                    maxWidth: '4rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                }},\n            {\n                title: I18n.t('Type'),\n                field: 'type',\n                lookup: {\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\n                    'action.devices.types.AWNING':          'Awning',\n                    'action.devices.types.BLINDS':          'Blinds',\n                    'action.devices.types.BOILER':          'Boiler',\n                    'action.devices.types.CAMERA':          'Camera',\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\n                    'action.devices.types.CURTAIN':         'Curtain',\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\n                    'action.devices.types.DOOR':            'Door',\n                    'action.devices.types.DRYER':           'Dryer',\n                    'action.devices.types.FAN':             'Fan',\n                    'action.devices.types.FIREPLACE':       'Fireplace',\n                    'action.devices.types.GARAGE':          'Garage',\n                    'action.devices.types.GATE':            'Gate',\n                    'action.devices.types.HEATER':          'Heater',\n                    'action.devices.types.HOOD':            'Hood',\n                    'action.devices.types.KETTLE':          'Kettle',\n                    'action.devices.types.LIGHT':           'Light',\n                    'action.devices.types.LOCK':            'Lock',\n                    'action.devices.types.MOP':             'Mop',\n                    'action.devices.types.MICROWAVE':       'Microwave',\n                    'action.devices.types.OUTLET':          'Outlet',\n                    'action.devices.types.OVEN':            'Oven',\n                    'action.devices.types.PERGOLA':         'Pergola',\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\n                    'action.devices.types.SCENE':           'Scene',\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\n                    'action.devices.types.SENSOR':          'Sensor',\n                    'action.devices.types.SHUTTER':         'Shutter',\n                    'action.devices.types.SHOWER':          'Shower',\n                    'action.devices.types.SPEAKER':         'Speaker',\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\n                    'action.devices.types.SWITCH':          'Switch',\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\n                    'action.devices.types.VACUUM':          'Vacuum',\n                    'action.devices.types.VALVE':           'Valve',\n                    'action.devices.types.WASHER':          'Washer',\n                    'action.devices.types.WATERHEATER':     'Water heater',\n                    'action.devices.types.WINDOW':          'Window'\n                }\n            },\n            {title: I18n.t('Function/Trait'), field: 'displayTraits',  lookup: {\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\n                    'action.devices.traits.Brightness':     'Brightness',\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\n                    // 'action.devices.traits.Dock':        'Dock',\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\n                    // 'action.devices.traits.Locator':     'Locator',\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\n                    'action.devices.traits.Modes':          'Modes',\n                    'action.devices.traits.OnOff':          'OnOff',\n                    'action.devices.traits.OpenClose':      'OpenClose',\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\n                    'action.devices.traits.Scene':          'Scene',\n                    // 'action.devices.traits.Sensor':      'Sensor',\n                    'action.devices.traits.StartStop':      'StartStop',\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\n                    // 'action.devices.traits.Timer':       'Timer',\n                    'action.devices.traits.Toggles':        'Toggles',\n                    'action.devices.traits.Volume':         'Volume',\n                }},\n\n            {\n                title: I18n.t('Attributes'),\n                field: 'displayAttributes',\n                cellStyle: {\n                    maxWidth: '12rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                },\n                expertMode: true,\n                editComponent: props => <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\n                                                  value={props.value}\n                                                  onChange={e => props.onChange(e.target.value)}\n                />\n            },\n            {title: I18n.t('Room'), field: 'roomHint', editable: 'never'},\n            {title: I18n.t('Auto'), field: 'smartEnum', editable: 'never',\n                cellStyle: {\n                    maxWidth: '3rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                },\n                expertMode: true,\n            },\n            {title: I18n.t('Conversation to GH'), field: 'displayConv2GH',  cellStyle: {\n                    maxWidth: '4rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                },\n                expertMode: true,\n                editComponent: props => (\n                    <div>Conversation to Google Home = function(value)&#123; <br/>\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\n                                  value={props.value}\n                                  onChange={e => props.onChange(e.target.value)}\n                        />\n                        &#125;\n                    </div>\n                )\n            },\n            { title: I18n.t('Conversation to ioB'), field: 'displayConv2iob', cellStyle: {\n                    maxWidth: '4rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-word'\n                },\n                expertMode: true,\n                editComponent: props => (\n                    <div>Conversation to ioBroker = function(value)&#123; <br/>\n                        <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\n                                  value={props.value}\n                                  onChange={e => props.onChange(e.target.value)}\n                        />\n                        &#125;\n                    </div>\n                )},\n        ];\n\n        this.timerChanged        = null;\n        this.browseTimer         = null;\n        this.browseTimerCount    = 0;\n        this.editedSmartName     = '';\n\n        this.waitForUpdateID     = null;\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n        this.helpRef             = React.createRef();\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null)\n            .then(list => {\n                this.browseTimer && clearTimeout(this.browseTimer);\n                this.browseTimerCount = 0;\n                this.browseTimer = null;\n\n                if (list && list.error) {\n                    this.setState({message: I18n.t(list.error)});\n                } else {\n                    if (this.waitForUpdateID) {\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                        }\n                        this.waitForUpdateID = null;\n                    }\n\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\n                }\n            })\n            .catch(error => {\n                this.setState({message: I18n.t(error)});\n            });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 10);\n        }\n    }\n\n    onResultUpdate(state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`,     this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectByOn(id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    onGHParamsChange(newData, oldData) {\n        this.addChanged(newData.id, () => {\n            this.props.socket.getObject(newData.id)\n                .then(obj => {\n                    if (!obj || !obj.common) {\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\n                    }\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\n                        if (!Array.isArray(newData.displayTraits)) {\n                            newData.displayTraits=[newData.displayTraits]\n                        }\n\n                        obj.common.smartName.ghTraits = newData.displayTraits;\n                    }\n                    if (newData.type !== oldData.type) {\n                        obj.common.smartName.ghType = newData.type;\n                    }\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\n                        try {\n                            if (obj.common.smartName.ghAttributes) {\n                                JSON.parse(obj.common.smartName.ghAttributes)\n                            }\n                        } catch (error) {\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')});\n                        }\n                    }\n                    if (newData.conv2GH) {\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\n                    }\n                    if (newData.conv2iob) {\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\n                    }\n                    return this.props.socket.setObject(newData.id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(newData.id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return <DialogSelectID\n                key=\"dialogSelectGoogle\"\n                imagePrefix=\"../..\"\n                socket={this.props.socket}\n                selected={''}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                if (!obj.common) {\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\n                                }\n\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                if (!obj.common.smartName) {\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\n                                } else {\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => {\n                                        this.informInstance(obj._id);\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\n                                    })\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    renderListOfDevices() {\n        if (!this.state.showListOfDevices) {\n            return null;\n        }\n        const classes = this.props.classes;\n\n        return <Dialog\n            open={true}\n            maxWidth=\"xl\"\n            fullWidth\n            onClose={() => this.setState({showListOfDevices: false})}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\n            <DialogContent>\n                <div className={ classes.headerRow } >\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\n                    <div className={ classes.headerCell }>{ I18n.t('Function') }</div>\n                    <div className={ classes.headerCell }>{ I18n.t('Room') }</div>\n                </div>\n                <div className={ this.props.classes.tableDiv } >\n                    { this.state.devices.map((item, i) => <div key={i}>\n                            <div className={ classes.tableCell }>{ item.name.nicknames.join(', ') }</div>\n                            <div className={ classes.tableCell }>{ item.displayTraits.map(n => n.replace('action.devices.traits.', '')).join(', ') }</div>\n                            <div className={ classes.tableCell }>{ item.roomHint }</div>\n                        </div>)\n                    }\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => {\n                    this.setState({showListOfDevices: false});\n                    const lines = this.state.devices.map(item => item.name.nicknames.join(', ') + '\\t' + item.displayTraits + '\\t' + item.roomHint);\n                    copy(lines.join('\\n'));\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\n            </DialogActions>\n        </Dialog>;\n    }\n\n    renderInstructions() {\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\n\n        if (this.state.helpHidden || this.props.smallDisplay || !desktop) {\n            return null;\n        }\n\n        const manualModeHint = I18n.t('manualModeHint');\n        return <div style={{width: '100%'}} ref={this.helpRef}>\n            <div style={{marginTop: '4rem', display: 'flex'}}>\n                <div style={{flex: '50%'}}>\n                    <div style={{fontWeight:\"bold\"}}>{I18n.t('Auto Mode')}</div>\n                    <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\n                </div>\n                <div style={{flex: '50%'}}>\n                    <div style={{fontWeight: 'bold'}}>{I18n.t('Manual Mode')}</div>\n                    <span>{Utils.renderTextWithA(manualModeHint)}</span>\n                </div>\n            </div>\n            <br/>\n            <div style={{flex: '100%'}}>\n                <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t('For help use this forum'))}</div>\n            </div>\n        </div>;\n    }\n\n    renderToolbar() {\n        const desktop = window.innerHeight > MOBILE_HEIGHT && window.innerWidth > MOBILE_WIDTH;\n\n        return <Toolbar variant=\"dense\">\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n            <Fab style={{marginLeft: '1rem'}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                 onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\n            {desktop && !this.state.hideHelp ? <Fab style={{marginLeft: '1rem'}} size=\"small\" color={this.state.helpHidden ? 'default' : 'primary'} aria-label=\"Help\" className={this.props.classes.button}\n                 title={I18n.t('Show/Hide help')}\n                 onClick={() => {\n                     window.localStorage.setItem('App.helpHidden', this.state.helpHidden ? 'false' : 'true');\n                     this.setState({helpHidden: !this.state.helpHidden});\n                 }} disabled={this.state.browse}><IconHelp/></Fab> : null }\n            <Fab style={{marginLeft: '1rem'}}\n                 size=\"small\"\n                 color={this.state.expertMode ? 'primary' : 'default'} aria-label=\"Help\" className={this.props.classes.button}\n                 title={I18n.t('Toggle expert mode')}\n                 onClick={() => {\n                     window.localStorage.setItem('App.expertMode', this.state.expertMode ? 'false' : 'true');\n                     this.setState({expertMode: !this.state.expertMode});\n                 }} disabled={this.state.browse}><ExpertIcon/></Fab>\n            <Fab style={{marginLeft: '1rem'}}\n                 title={I18n.t('Show all devices for print out')}\n                 size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\n                 onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\n            {!this.props.smallDisplay ? <TextField\n                className={this.props.classes.searchText}\n                label={I18n.t('Filter')}\n                value={this.state.searchText} onChange={e => this.setState({searchText: e.target.value})}\n                InputProps={{\n                    endAdornment: this.state.searchText ? (\n                        <IconButton onClick={() => this.setState({ searchText: '' })}>\n                            <IconClear />\n                        </IconButton>\n                    ) : undefined,\n                }}\n            /> : null}\n        </Toolbar>;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.helpRef.current) {\n            const h = this.helpRef.current.clientHeight;\n            if (this.state.helpHeight !== h) {\n                if (!this.state.helpHidden && h + 64 + 48 + 200 > window.innerHeight) {\n                    setTimeout(() => this.setState({helpHeight: h, helpHidden: true, hideHelp: true}), 50);\n                } else {\n                    setTimeout(() => this.setState({helpHeight: h}), 50);\n                }\n            }\n        } else if (this.state.helpHeight) {\n            setTimeout(() => this.setState({helpHeight: 0}), 50);\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress  key=\"alexaProgress\" />;\n        }\n        const searchText = this.state.searchText.toLowerCase();\n        const devices = this.state.searchText ? this.state.devices.filter(item =>\n            item.name?.name?.toLowerCase().includes(searchText) ||\n            item.name?.defaultNames?.find(n => n.toLowerCase().includes(searchText)) ||\n            item.name?.nicknames?.find(n => n.toLowerCase().includes(searchText)))\n            : this.state.devices;\n\n        return <form key=\"gh\" className={this.props.classes.tab}>\n            {this.renderToolbar()}\n            {this.renderInstructions()}\n            <div className={this.props.classes.tableDiv} style={{height: `calc(100% - ${48 + (this.state.helpHeight ? this.state.helpHeight + 64 : 0)}px)`}}>\n                <TreeTable\n                    columns={this.state.expertMode ? this.columns : this.columns.filter(item => !item.expertMode)}\n                    data={devices}\n                    onUpdate={(newData, oldData) => {\n                        if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\n                            newData.name.nicknames = newData.name.nicknames.join(',');\n                        }\n                        this.editedSmartName = newData.name.nicknames;\n                        this.setState({editId: newData.id}, () => {\n                            if (!newData.type || !newData.displayTraits) {\n                                this.setState({browse: true, message: I18n.t('Please add action and trait to complete the Google Home state.')});\n                            } else {\n                                this.setState({browse: true});\n                            }\n\n                            this.onGHParamsChange(newData, oldData);\n                            const devices = [...this.state.devices];\n                            devices[devices.indexOf(oldData)] = newData;\n                            this.setState({ ...this.state, devices});\n                        });\n                    }}\n\n                    onDelete={oldData => {\n                        // if smartenum set smartname on false if not delete/reset smartname content\n                        if (oldData.smartEnum === 'X') {\n                            this.setState({deleteId: oldData.id});\n                        } else {\n                            this.props.socket.getObject(oldData.id)\n                                .then(obj => {\n                                    if (obj && obj.common && obj.common['smartName']) {\n                                        delete obj.common['smartName']['ghTraits'];\n                                        delete obj.common['smartName']['ghType'];\n                                        delete obj.common['smartName']['ghAttributes'];\n                                    }\n                                    return this.props.socket.setObject(oldData.id, obj);\n                                });\n                        }\n\n                        return new Promise(resolve => {\n                            setTimeout(() => {\n                                if (this.state.deleteId) {\n                                    this.onDelete();\n                                } else {\n                                    this.informInstance(oldData.id);\n                                }\n                                resolve();\n                                const devices = [...this.state.devices];\n                                devices.splice(devices.indexOf(oldData), 1);\n                                this.setState({ ...this.state, devices });\n                            }, 600);\n                        })\n                    }}\n                />\n            </div>\n            {this.renderMessage()}\n            {this.getSelectIdDialog()}\n            {this.renderListOfDevices()}\n        </form>;\n    }\n}\n\nGoogleSmartNames.propTypes = {\n    common:      PropTypes.object.isRequired,\n    native:      PropTypes.object.isRequired,\n    instance:    PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError:     PropTypes.func,\n    onLoad:      PropTypes.func,\n    onChange:    PropTypes.func,\n    socket:      PropTypes.object.isRequired,\n    themeType:   PropTypes.string.isRequired,\n};\n\nexport const withMediaQuery = () => Component => props =>\n    <Component smallDisplay={useMediaQuery('(max-width:600px)')} {...props} />;\n\nexport default withStyles(styles)(withMediaQuery()(GoogleSmartNames));\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport TabOptions from './Tabs/Options';\nimport TabExtended from './Tabs/Extended';\nimport TabServices from './Tabs/Services';\nimport TabEnums from './Tabs/Enums';\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = {...props};\n        extendedProps.encryptedFields = ['pass'];\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n\n        super(props, extendedProps);\n    }\n\n    onConnectionReady() {\n        this.socket.getState(`${this.adapterName}.${this.instance}.info.ackTempPassword`)\n            .then(state => {\n                if (!state || !state.val) {\n                    this.setState({showAckTempPasswordDialog: true});\n                }\n            });\n    }\n\n    getSelectedTab() {\n        const tab = this.state.selectedTab;\n        if (!tab || tab === 'options') {\n            return 0;\n        } else\n        if (tab === 'enums') {\n            return 1;\n        } else\n        if (tab === 'alexa') {\n            return 2;\n        } else\n        if (tab === 'google') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'alisa') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'extended') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'services') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 3 + offset;\n        }\n    }\n\n    renderAckTempPasswordDialog() {\n        if (!this.state.showAckTempPasswordDialog) {\n            return null;\n        } else {\n            return <Dialog\n                open={true}\n                onClose={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{I18n.t('Information: The skill linking process was changed!')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {I18n.t('The linking process has been changed for a few months.')}\n                        {I18n.t('Now there is no temporary password that will be sent by email.')}<br/><br/>\n                        <b>{I18n.t('The password is equal with ioBroker.pro and with password that was entered here in the settings!')}</b>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))} autoFocus>\n                        {I18n.t('Not understood')}\n                    </Button>\n                    <Button onClick={() =>\n                        this.socket.setState(`${this.adapterName}.${this.instance}.info.ackTempPassword`, true, true)\n                            .then(() =>\n                                this.setState({showAckTempPasswordDialog: false}))\n                    } color=\"primary\" >\n                        {I18n.t('Roger that')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <MuiThemeProvider theme={this.state.theme}>\n                <Loader theme={this.state.themeType} />\n            </MuiThemeProvider>\n        }\n\n        return (\n            <MuiThemeProvider theme={this.state.theme}>\n                <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\n                    <AppBar position=\"static\">\n                        <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)} scrollButtons=\"auto\">\n                            <Tab label={I18n.t('Options')} data-name=\"options\" />\n                            <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\n                            {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\n                            {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\n                            {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\n                            <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\n                            <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\n                        </Tabs>\n                    </AppBar>\n\n                    <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\n                        {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\n                            key=\"options\"\n                            common={this.common}\n                            socket={this.socket}\n                            native={this.state.native}\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                            onLoad={native => this.onLoadConfig(native)}\n                            instance={this.instance}\n                            adapterName={this.adapterName}\n                            changed={this.state.changed}\n                            onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                        />)}\n                        {this.state.selectedTab === 'enums' && (<TabEnums\n                            key=\"enums\"\n                            common={this.common}\n                            socket={this.socket}\n                            native={this.state.native}\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                            instance={this.instance}\n                            adapterName={this.adapterName}\n                        />)}\n                        {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\n                            key=\"alexa\"\n                            themeType={this.state.themeType}\n                            common={this.common}\n                            socket={this.socket}\n                            native={this.state.native}\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                            adapterName={this.adapterName}\n                            instance={this.instance}\n                        />)}\n                            {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\n                            key=\"google\"\n                            themeType={this.state.themeType}\n                            common={this.common}\n                            socket={this.socket}\n                            native={this.state.native}\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                            adapterName={this.adapterName}\n                            instance={this.instance}\n                        />)}\n                        {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\n                            key=\"alisa\"\n                            themeType={this.state.themeType}\n                            common={this.common}\n                            socket={this.socket}\n                            native={this.state.native}\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                            adapterName={this.adapterName}\n                            instance={this.instance}\n                        />)}\n                        {this.state.selectedTab === 'extended' && (<TabExtended\n                            key=\"extended\"\n                            common={this.common}\n                            socket={this.socket}\n                            native={this.state.native}\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                            instance={this.instance}\n                            adapterName={this.adapterName}\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                        />)}\n                        {this.state.selectedTab === 'services' && (<TabServices\n                            key=\"services\"\n                            common={this.common}\n                            socket={this.socket}\n                            native={this.state.native}\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                            instance={this.instance}\n                            adapterName={this.adapterName}\n                            onShowError={error => this.showError(error)}\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                        />)}\n                    </div>\n                    {this.renderError()}\n                    {this.renderSaveCloseButtons()}\n                    {this.renderAckTempPasswordDialog()}\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {version} from '../package.json';\nimport theme from '@iobroker/adapter-react/Theme';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nwindow.adapterName = 'iot';\nlet themeName = Utils.getThemeName();\n\n\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\n\nfunction build() {\n    return ReactDOM.render(\n        <MuiThemeProvider theme={theme(themeName)}>\n            <App\n                onThemeChange={_theme => {\n                    themeName = _theme;\n                    build();\n                }}\n            />\n        </MuiThemeProvider>,\n        document.getElementById('root')\n    );\n}\n\nif (window.location.host !== 'localhost:3000') {\n    Sentry.init({\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\n        release: 'iobroker.' + window.adapterName + '@' + version,\n        integrations: [\n            new SentryIntegrations.Dedupe()\n        ]\n    });\n}\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}