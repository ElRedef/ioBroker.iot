{"version":3,"sources":["Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Logo","evt","_this","this","f","target","files","r","window","FileReader","onload","e","contents","result","json","JSON","parse","native","common","name","props","onError","I18n","t","onLoad","toString","readAsText","alert","_id","instance","stringify","news","titleLang","desc","generateFile","_this2","input","document","createElement","setAttribute","addEventListener","handleFileSelect","click","_this3","react_default","a","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","index_esm","title","upload","fa_index_esm","download","filename","obj","el","encodeURIComponent","style","display","body","appendChild","removeChild","Component","withStyles","theme","marginRight","marginTop","float","padding","width","Options","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","inAction","forceUserCreate","showHint","toast","isInstanceAlive","socket","getObject","concat","adapterName","then","getState","setState","enabled","val","attr","type","TextField","label","value","onChange","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","ack","Promise","resolve","setObject","catch","err","_this4","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton","key","close","_this5","Message_default","text","_this6","FormControlLabel","assign","paddingTop","controlElement","control","Checkbox","checked","_this7","tab","Tabs_Logo","errorText","column","columnSettings","renderInput","renderCheckbox","googleHome","newVal","variant","button","disabled","resetCerts","onForceUserCreate","fontWeight","columnLogo","renderCard","renderHint","renderToast","minHeight","minWidth","maxWidth","height","verticalAlign","ExtendedOptions","showSelectId","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","SelectID_default","prefix","connection","selected","statesOnly","onOk","renderSelect","marginLeft","getSelectIdDialog","marginBottom","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","assertThisInitialized","getAdapterInstances","list","nsList","replace","subscribeState","unsubscribeState","showError","chips","split","filter","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","_this8","reissueUrlKey","fullSize","readOnly","copyToClipboard","CopyContentImg","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","changed","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","match","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","i","length","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","fontSize","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","handleOk","aria-labelledby","DialogTitle","DialogContent","helperText","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","fontStyle","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editObjectName","deleteId","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","actions","sort","b","Icon","actionIcon","lineNum","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","_this9","_this10","group","channels","names","types","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","_loop","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","smartType","_this11","nameModified","devModified","devCount","ch","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","_this12","_this13","preventDefault","_this14","editedId","onKeyDown","defaultValue","_this15","_this16","toLowerCase","renderDevice","_this17","placeholder","renderDevices","renderConfirmDialog","devLineEnabled","paddingLeft","left","devSubLineEdit","OnOff","Brightness","RGB","AlisaDevices","iobID","main","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","GoogleSmartNames","columns","field","editable","cellStyle","wordBreak","lookup","action.devices.types.AC_UNIT","action.devices.types.AIRFRESHENER","action.devices.types.AIRPURIFIER","action.devices.types.AWNING","action.devices.types.BLINDS","action.devices.types.BOILER","action.devices.types.CAMERA","action.devices.types.COFFEE_MAKER","action.devices.types.CURTAIN","action.devices.types.DISHWASHER","action.devices.types.DOOR","action.devices.types.DRYER","action.devices.types.FAN","action.devices.types.FIREPLACE","action.devices.types.GARAGE","action.devices.types.GATE","action.devices.types.HEATER","action.devices.types.HOOD","action.devices.types.KETTLE","action.devices.types.LIGHT","action.devices.types.LOCK","action.devices.types.MOP","action.devices.types.MICROWAVE","action.devices.types.OUTLET","action.devices.types.OVEN","action.devices.types.PERGOLA","action.devices.types.REFRIGERATOR","action.devices.types.SCENE","action.devices.types.SECURITYSYSTEM","action.devices.types.SENSOR","action.devices.types.SHUTTER","action.devices.types.SHOWER","action.devices.types.SPEAKER","action.devices.types.SPRINKLER","action.devices.types.SWITCH","action.devices.types.THERMOSTAT","action.devices.types.VACUUM","action.devices.types.VALVE","action.devices.types.WASHER","action.devices.types.WATERHEATER","action.devices.types.WINDOW","action.devices.traits.Brightness","action.devices.traits.ColorSetting_temperature","action.devices.traits.ColorSetting_spectrumRGB","action.devices.traits.FanSpeed","action.devices.traits.LockUnlock","action.devices.traits.Modes","action.devices.traits.OnOff","action.devices.traits.OpenClose","action.devices.traits.Scene","action.devices.traits.StartStop","action.devices.traits.TemperatureControl_temperatureSetpointCelsius","action.devices.traits.TemperatureControl_temperatureAmbientCelsius","action.devices.traits.TemperatureSetting_thermostatMode","action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint","action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient","action.devices.traits.TemperatureSetting_thermostatHumidityAmbient","action.devices.traits.Toggles","action.devices.traits.Volume","editComponent","cols","rows","newData","oldData","displayTraits","Array","isArray","ghTraits","ghType","displayAttributes","ghAttributes","error","flex","dist_default","data","icons","isLoading","actionsColumnIndex","paging","onRowUpdate","nicknames","onGHParamsChange","toConsumableArray","objectSpread","onRowDelete","smartEnum","App","extendedProps","encryptedFields","translations","require","de","ru","pt","nl","fr","it","es","pl","zh-cn","selectedTab","amazonAlexa","yandexAlisa","loaded","AppBar","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","Tabs_Options","onLoadConfig","updateNativeValue","Tabs_Enums","Tabs_AlexaSmartNames","Tabs_GoogleSmartNames","AlisaSmartNames","Extended","Tabs_Services","onShowError","renderError","renderSaveCloseButtons","Loader_default","themeType","GenericApp","root","Boolean","location","hostname","build","ReactDOM","render","MuiThemeProvider","createTheme","src_App","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cadfe2ef.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from './Logo';\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            forceUserCreate: false,\n            showHint: false,\n            toast: '',\n            isInstanceAlive: false,\n        };\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts() {\n        this.setState({inAction: true});\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (this.state.forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    onForceUserCreate() {\n        this.setState({forceUserCreate: !this.state.forceUserCreate, showHint: !this.state.forceUserCreate});\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderHint() {\n        if (this.state.showHint) {\n            return (<Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Logo\n                    instance={this.props.instance}\n                    common={this.props.common}\n                    native={this.props.native}\n                    onError={text => this.setState({errorText: text})}\n                    onLoad={this.props.onLoad}\n                />\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnSettings}>\n                    {this.renderInput('ioBroker.pro Login', 'login')}<br/>\n                    {this.renderInput('ioBroker.pro Password', 'pass', 'password')}<br/>\n                    {this.renderCheckbox('Amazon Alexa', 'amazonAlexa', {marginTop: 10})}<br/>\n                    <FormControlLabel key=\"googleHome\" style={{paddingTop: 5}} className={this.props.classes.controlElement}\n                        control={\n                          <Checkbox\n                              checked={this.props.native.googleHome}\n                              onChange={() => {\n                                  // activate alexa if google home is on (temporary)\n                                  const newVal = !this.props.native.googleHome;\n                                  this.props.onChange('googleHome', newVal, () =>\n                                      newVal && this.props.onChange('amazonAlexa', true));\n                              }}\n                              color=\"primary\"\n                          />\n                        }\n                        label={I18n.t('Google Home')}\n                    />\n                    {/*this.renderCheckbox('Google Home', 'googleHome', {marginTop: 10})*/}<br/>\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa', {marginTop: 10})}<br/>\n                    <br/>\n                    <Button variant=\"outlined\"\n                            className={this.props.classes.button}\n                            disabled={this.state.inAction || !this.state.isInstanceAlive}\n                            title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                            onClick={() => this.resetCerts()}>\n                        <IconReload/>{I18n.t('Get new connection certificates')}\n                    </Button>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.forceUserCreate}\n                                onChange={() => this.onForceUserCreate()}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Request email with password one more time')}\n                    />\n                    <p style={{fontWeight: 'bold'}}>{Utils.renderTextWithA(I18n.t('help_tip'))}</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard()}</div>\n                {this.renderHint()}\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={this.props.native[attr]}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport CopyContentImg from '@iobroker/adapter-react/assets/copy-content.svg';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout api-secret')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.calcNightscoutSecret()}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />) : null}\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + state.val + '/' + state.ack);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        if (this.state.changed.indexOf(id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    }\n                }\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRGB = '#ff7ee3';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        minWidth: 100,\n        display: 'inline-block',\n        fontSize: 13,\n        paddingLeft: 70,\n        //width: 'calc(100% - 400px)'\n    },\n    devSubSubLine:  {\n        fontSize: 10,\n        fontStyle: 'italic',\n        display: 'inline-block',\n        marginLeft: 15\n    },\n    devSubLineSetId:  {\n        fontStyle: 'italic',\n        display: 'block',\n        color: '#999'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlisaDevices extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        console.log('Send BROWSE!');\n\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + state.val + '/' + state.ack);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.iobID === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.name;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName:smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'OnOff') return -1;\n            if (b === 'OnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].name);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        const id = dev.main.getId;\n        const name = dev.func;\n        let background = DEFAULT_CHANNEL_COLOR;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n            background = LAST_CHANGED_COLOR;\n        }*/\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\n            <div className={classes.devSubSubLine}>\n                <div>{dev.main.getId}</div>\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\n            </div>\n\n        </div>));\n\n        dev.attributes.forEach(attr => {\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\n                <div className={classes.devSubSubLine}>\n                    <div>{attr.getId}</div>\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\n                </div>\n            </div>));\n        });\n\n        /*if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n        }*/\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (dev.iobID === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        //const isComplex = dev.\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {dev.attributes.length ?\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\n\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlisaDevices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlisaDevices);\n","import React, {Component, forwardRef} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\n\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n \nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nconst styles = () => ({})\n\nclass GoogleSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: '',\n            columns: [\n                { title: 'Id', field: 'id' , editable: 'never' ,   cellStyle: {\n                    maxWidth: \"12rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  }},\n                { title: 'Smartnames', field: 'name.nicknames' },\n                { title: 'Type', field: 'type' ,  lookup: { \n                    \"action.devices.types.AC_UNIT\": 'Air conditioning unit\t', \n                    \"action.devices.types.AIRFRESHENER\": 'Air Freshener' ,\n                    \"action.devices.types.AIRPURIFIER\": 'Air purifier' ,\n                    \"action.devices.types.AWNING\": 'Awning' ,\n                    \"action.devices.types.BLINDS\": 'Blinds' ,\n                    \"action.devices.types.BOILER\": 'Boiler' ,\n                    \"action.devices.types.CAMERA\": 'Camera' ,\n                    \"action.devices.types.COFFEE_MAKER\": 'Coffee maker' ,\n                    \"action.devices.types.CURTAIN\": 'Curtain' ,\n                    \"action.devices.types.DISHWASHER\": 'Dishwasher' ,\n                    \"action.devices.types.DOOR\": 'Door' ,\n                    \"action.devices.types.DRYER\": 'Dryer' ,\n                    \"action.devices.types.FAN\": 'Fan' ,\n                    \"action.devices.types.FIREPLACE\": 'Fireplace' ,\n                    \"action.devices.types.GARAGE\": 'Garage' ,\n                    \"action.devices.types.GATE\": 'Gate' ,\n                    \"action.devices.types.HEATER\": 'Heater' ,\n                    \"action.devices.types.HOOD\": 'Hood' ,\n                    \"action.devices.types.KETTLE\": 'Kettle' ,\n                    \"action.devices.types.LIGHT\": 'Light' ,\n                    \"action.devices.types.LOCK\": 'Lock' ,\n                    \"action.devices.types.MOP\": 'Mop' ,\n                    \"action.devices.types.MICROWAVE\": 'Microwave' ,\n                    \"action.devices.types.OUTLET\": 'Outlet' ,\n                    \"action.devices.types.OVEN\": 'Oven' ,\n                    \"action.devices.types.PERGOLA\": 'Pergola' ,\n                    \"action.devices.types.REFRIGERATOR\": 'Refrigerator' ,\n                    \"action.devices.types.SCENE\": 'Scene' ,\n                    \"action.devices.types.SECURITYSYSTEM\": 'Security System' ,\n                    \"action.devices.types.SENSOR\": 'Sensor' ,\n                    \"action.devices.types.SHUTTER\": 'Shutter' ,\n                    \"action.devices.types.SHOWER\": 'Shower' ,\n                    \"action.devices.types.SPEAKER\": 'Speaker' ,\n                    \"action.devices.types.SPRINKLER\": 'Sprinkler' ,\n                    \"action.devices.types.SWITCH\": 'Switch' ,\n                    \"action.devices.types.THERMOSTAT\": 'Thermostat' ,\n                    \"action.devices.types.VACUUM\": 'Vacuum' ,\n                    \"action.devices.types.VALVE\": 'Valve' ,\n                    \"action.devices.types.WASHER\": 'Washer' ,\n                    \"action.devices.types.WATERHEATER\": 'Water heater' ,\n                    \"action.devices.types.WINDOW\": 'Window' \n                }},\n                { title: 'Funktion/Trait', field: 'displayTraits' ,  lookup: { \n                    // \"action.devices.traits.ArmDisarm\":'ArmDisarm',\n                    \"action.devices.traits.Brightness\":'Brightness',\n                    // \"action.devices.traits.CameraStream\":'CameraStream',\n                    \"action.devices.traits.ColorSetting_temperature\":'ColorSetting_Temperature',\n                    \"action.devices.traits.ColorSetting_spectrumRGB\":'ColorSetting_RGB',\n                    // \"action.devices.traits.Dock\":'Dock',\n                    \"action.devices.traits.FanSpeed\":'FanSpeed',\n                    // \"action.devices.traits.LightEffects\":'LightEffects',\n                    // \"action.devices.traits.Locator\":'Locator',\n                    \"action.devices.traits.LockUnlock\":'LockUnlock',\n                    \"action.devices.traits.Modes\":'Modes',\n                    \"action.devices.traits.OnOff\":'OnOff',\n                    \"action.devices.traits.OpenClose\":'OpenClose',\n                    // \"action.devices.traits.RunCycle\":'RunCycle',\n                    \"action.devices.traits.Scene\":'Scene',\n                    // \"action.devices.traits.Sensor\":'Sensor',\n                    \"action.devices.traits.StartStop\":'StartStop',\n                    \"action.devices.traits.TemperatureControl_temperatureSetpointCelsius\":'Oven_SetTemp',\n                    \"action.devices.traits.TemperatureControl_temperatureAmbientCelsius\":'Oven_StatusTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatMode\":'Thermostat_Mode',\n                    \"action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint\":'Thermostat_SetTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient\":'Thermostat_StatusTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatHumidityAmbient\":'Thermostat_StatusHumidity',\n                    // \"action.devices.traits.Timer\":'Timer',\n                    \"action.devices.traits.Toggles\":'Toggles',\n                    \"action.devices.traits.Volume\":'Volume',\n                    }},\n\n                { title: 'Attributes', field: 'displayAttributes' ,   cellStyle: {\n                    maxWidth: \"12rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  },  \n                editComponent: props => (\n                    <textarea cols=\"40\" rows=\"20\"\n                      value={props.value}\n                      onChange={e => props.onChange(e.target.value)}\n                    />\n                  )},\n                { title: 'Room', field: 'roomHint', editable: 'never' },\n                { title: 'Automatisch', field: 'smartEnum', editable: 'never',cellStyle: {\n                    maxWidth: \"3rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  } },\n              ]\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 10);\n        }\n    }\n\n    onResultUpdate(state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n     onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.common.smartName  ?  device.common.smartName  : device._id;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n\n   \n\n    renderSelectByOn(id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    \n    onGHParamsChange(newData, oldData) {\n        this.addChanged(newData.id, () => {\n            this.props.socket.getObject(newData.id)\n                .then(obj => {\n                  //  id, newData.type, newData.displayTraits, newData.displayAttributes\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\n                        if (!Array.isArray(newData.displayTraits)) {\n                            newData.displayTraits=[newData.displayTraits]\n                        }\n\n                        obj.common.smartName.ghTraits = newData.displayTraits;\n                    }\n                    if (newData.type !== oldData.type) {\n                        obj.common.smartName.ghType = newData.type;\n                    }\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\n                        obj.common.smartName.ghAttributes = newData.displayAttributes\n                        try {\n                            if(obj.common.smartName.ghAttributes) {\n                            JSON.parse(obj.common.smartName.ghAttributes)\n                        }\n                        } catch (error) {\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')})\n                        }\n                    }\n                    return this.props.socket.setObject(newData.id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(newData.id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n   \n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n                                obj.common.smartName.ghType=\"action.devices.types.LIGHT\"\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => {\n                                        this.informInstance(obj._id);\n                                        this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});})\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    \n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"gh\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab \n                style ={{marginLeft:\"1rem\"}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n            \n                {this.renderMessage()}\n                {this.getSelectIdDialog()}\n                <div style={{marginTop:\"4rem\",display: \"flex\"}}>\n                <div style={{ flex: \"50%\"}}><div style={{fontWeight:\"bold\"}}> Auto Mode</div>\n                <div style={{marginTop:\"0.8rem\",marginRight:\"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\n              \n                </div>\n                <div style={{ flex: \"50%\"}}><div style={{fontWeight:\"bold\"}}>Manuell Mode</div>\n                <span>{Utils.renderTextWithA(I18n.t(\"Please select a  <a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/guides/'>TYPE</a> and a\"))}</span>\n                <span>{Utils.renderTextWithA(I18n.t(\"<a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/traits/' > TRAIT</a> after adding a state.   To add multiple traits add a different id and trait but same smartname, type and room. Comma separated for mutiple smartnames.  To assign a room please use the ioBroker Enums/Aufzählungen.  With attributes you can for example set a range for the color temperature \"))}</span>\n                <span>  {Utils.renderTextWithA(I18n.t(\"<a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/traits/colorsetting'> Infos about Attributes you can find here.</a> Empty attribute is {}\"))}</span>\n                </div>\n                </div>\n                \n                <div>\n                <MaterialTable\n                style ={{marginTop:\"1rem\",display: \"inline-block\"}}\n                title=\"\"\n                columns={this.state.columns}\n                data={this.state.devices}\n                icons={tableIcons}\n                isLoading={this.state.browse }\n                options={{\n                    actionsColumnIndex: -1,\n                    paging: false\n                  }}\n               \n                editable={{\n                  \n                    onRowUpdate: (newData, oldData) => {\n                        if (Array.isArray(newData.name.nicknames)) {\n                            newData.name.nicknames = newData.name.nicknames.join(\",\");\n                        }\n                        this.editedSmartName = newData.name.nicknames\n                        this.setState({editId: newData.id});\n                       \n                    return new Promise(resolve => {\n                        this.setState({browse:true})\n                        setTimeout(() => {\n                            if(!newData.type || !newData.displayTraits) {\n                                this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});\n                            }\n                        \n                        this.onGHParamsChange(newData, oldData);\n                        resolve();\n                        const devices = [...this.state.devices];\n                        devices[devices.indexOf(oldData)] = newData;\n                        this.setState({ ...this.state, devices });\n                        }, 500);\n                    })},\n                    onRowDelete: (oldData) => {\n                    // if smartenum set smartname on false if not delete/reset smartname content\n                    if (oldData.smartEnum=== \"X\") {\n                        this.setState({deleteId: oldData.id});\n                    } else {\n                        this.props.socket.getObject(oldData.id)\n                        .then(obj => {\n                            if (obj.common[\"smartName\"]) {\n                                delete obj.common[\"smartName\"][\"ghTraits\"]\n                                delete obj.common[\"smartName\"][\"ghType\"]\n                                delete obj.common[\"smartName\"][\"ghAttributes\"]\n                            }\n                            \n                            return this.props.socket.setObject(oldData.id, obj);\n                        })\n                    }\n                    return new Promise(resolve => {\n                        setTimeout(() => {\n                            if (this.state.deleteId) {\n                                this.onDelete();\n                            } else {\n\n                            this.informInstance(oldData.id);\n                            }\n                            resolve();\n                            const devices = [...this.state.devices];\n                            devices.splice(devices.indexOf(oldData), 1);\n                            this.setState({ ...this.state, devices });\n                        }, 600);\n                    })\n                    }\n                }}\n                /></div>\n\n            </form>\n        );\n    }\n}\n\nGoogleSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GoogleSmartNames);\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport TabOptions from './Tabs/Options';\nimport TabExtended from './Tabs/Extended';\nimport TabServices from './Tabs/Services';\nimport TabEnums from './Tabs/Enums';\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = {...props};\n        extendedProps.encryptedFields = ['pass'];\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n        super(extendedProps);\n    }\n\n    getSelectedTab() {\n        const tab = this.state.selectedTab;\n        if (!tab || tab === 'options') {\n            return 0;\n        } else\n        if (tab === 'enums') {\n            return 1;\n        } else\n        if (tab === 'alexa') {\n            return 2;\n        } else\n        if (tab === 'google') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\n            return 2 + offset;\n        }\n        if (tab === 'alisa') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'extended') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'services') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 3 + offset;\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return (<Loader theme={this.state.themeType}/>);\n        }\n\n        return (\n            <div className=\"App\">\n                <AppBar position=\"static\">\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\n                    </Tabs>\n                </AppBar>\n\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\n                        key=\"options\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        onLoad={native => this.onLoadConfig(native)}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                    />)}\n                    {this.state.selectedTab === 'enums' && (<TabEnums\n                        key=\"enums\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                    />)}\n                    {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\n                        key=\"alexa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                        {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\n                        key=\"google\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\n                        key=\"alisa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'extended' && (<TabExtended\n                        key=\"extended\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                    {this.state.selectedTab === 'services' && (<TabServices\n                        key=\"services\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onShowError={error => this.showError(error)}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                </div>\n                {this.renderError()}\n                {this.renderSaveCloseButtons()}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createTheme from '@iobroker/adapter-react/createTheme';\n\nlet theme = 'light';\n\nfunction build() {\n    return ReactDOM.render(<MuiThemeProvider theme={createTheme(theme)}>\n        <App onThemeChange={_theme => {\n            theme = _theme;\n            build();\n        }}/>\n    </MuiThemeProvider>, document.getElementById('root'));\n}\n\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}