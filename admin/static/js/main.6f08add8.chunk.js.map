{"version":3,"sources":["Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Logo","evt","f","target","files","r","window","FileReader","onload","e","contents","result","json","JSON","parse","native","common","name","props","onError","I18n","t","onLoad","toString","readAsText","alert","_id","this","instance","stringify","news","titleLang","desc","generateFile","input","document","createElement","setAttribute","addEventListener","handleFileSelect","click","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","title","upload","download","filename","obj","el","encodeURIComponent","style","display","body","appendChild","removeChild","Component","withStyles","theme","marginRight","marginTop","float","padding","width","Options","state","inAction","forceUserCreate","showHint","toast","isInstanceAlive","socket","getObject","adapterName","then","getState","setState","enabled","val","attr","type","TextField","label","value","onChange","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","ack","Promise","resolve","setObject","catch","err","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","IconButton","key","close","text","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","errorText","column","columnSettings","renderInput","renderCheckbox","googleHome","newVal","variant","button","disabled","resetCerts","onForceUserCreate","fontWeight","columnLogo","renderCard","renderHint","renderToast","minHeight","minWidth","maxWidth","height","verticalAlign","ExtendedOptions","showSelectId","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","prefix","connection","selected","statesOnly","onOk","renderSelect","marginLeft","getSelectIdDialog","marginBottom","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","getAdapterInstances","list","nsList","replace","subscribeState","unsubscribeState","showError","chips","split","filter","a","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","readOnly","copyToClipboard","CopyContentImg","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","changed","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","match","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","i","length","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","fontSize","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","handleOk","aria-labelledby","aria-describedby","DialogTitle","DialogContent","helperText","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","fontStyle","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editObjectName","deleteId","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","actions","sort","b","Icon","actionIcon","lineNum","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","group","channels","names","types","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","smartType","nameModified","devModified","devCount","ch","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","placeholder","renderDevices","renderConfirmDialog","devLineEnabled","paddingLeft","left","devSubLineEdit","OnOff","Brightness","RGB","AlisaDevices","iobID","main","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","GoogleSmartNames","columns","field","editable","cellStyle","wordBreak","lookup","editComponent","cols","rows","newData","oldData","displayTraits","Array","isArray","ghTraits","ghType","displayAttributes","ghAttributes","error","flex","data","icons","isLoading","actionsColumnIndex","paging","onRowUpdate","nicknames","onGHParamsChange","onRowDelete","smartEnum","App","extendedProps","encryptedFields","translations","require","selectedTab","amazonAlexa","yandexAlisa","loaded","AppBar","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","themeType","GenericApp","root","Boolean","location","hostname","build","ReactDOM","render","createTheme","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uv8GAuBMA,E,yLAeeC,GAAM,IAAD,OACZC,EAAID,EAAIE,OAAOC,MAAM,GAC3B,GAAIF,EAAG,CACH,IAAMG,EAAI,IAAIC,OAAOC,WACrBF,EAAEG,OAAS,SAAAC,GACP,IAAMC,EAAWD,EAAEN,OAAOQ,OAC1B,IACI,IAAMC,EAAOC,KAAKC,MAAMJ,GACpBE,EAAKG,QAAUH,EAAKI,OAChBJ,EAAKI,OAAOC,OAAS,EAAKC,MAAMF,OAAOC,KACvC,EAAKC,MAAMC,QAAQC,IAAKC,EAAE,cAAeT,EAAKI,OAAOC,OAErD,EAAKC,MAAMI,OAAOV,EAAKG,QAG3B,EAAKG,MAAMC,QAAQC,IAAKC,EAAE,kBAEhC,MAAOZ,GACL,EAAKS,MAAMC,QAAQV,EAAEc,cAG7BlB,EAAEmB,WAAWtB,QAEbuB,MAAM,8B,iCAKV,IAAMd,EAAS,CACXe,IAAK,kBAAoBC,KAAKT,MAAMF,OAAOC,KAAO,IAAMU,KAAKT,MAAMU,SACnEZ,OAAQH,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKT,MAAMF,SAC7CD,OAAQY,KAAKT,MAAMH,QAGnBJ,EAAOK,OAAOc,aACPnB,EAAOK,OAAOc,KAErBnB,EAAOK,OAAOe,kBACPpB,EAAOK,OAAOe,UAErBpB,EAAOK,OAAOgB,aACPrB,EAAOK,OAAOgB,KAIzBhC,EAAKiC,aAAatB,EAAOe,IAAM,QAASf,K,+BAGlC,IAAD,OACCuB,EAAQ5B,OAAO6B,SAASC,cAAc,SAC5CF,EAAMG,aAAa,OAAQ,QAC3BH,EAAMG,aAAa,KAAM,SACzBH,EAAMG,aAAa,UAAW,GAC9BH,EAAMI,iBAAiB,UAAU,SAAA7B,GAAC,OAAI,EAAK8B,iBAAiB9B,GAAG,kBAAW,GACzEyB,EAAMM,U,+BAGD,IAAD,OACL,OAAQ,6BACHb,KAAKT,MAAMF,OAAOyB,MAAS,yBAAKC,IAAKf,KAAKT,MAAMF,OAAOyB,KAAME,UAAWhB,KAAKT,MAAM0B,QAAQC,KAAMC,IAAI,SACrGnB,KAAKT,MAAMF,OAAO+B,QACd,kBAACC,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASC,QAAS,WACrF/C,OAAOgD,KAAK,EAAKpC,MAAMF,OAAO+B,OAAQ,UAC9CQ,UACL,kBAAC,gBAAD,OACP,kBAACP,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,cAAcR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASI,MAAOpC,IAAKC,EAAE,gCAAiCgC,QAAS,kBAAM,EAAKI,WAAU,kBAAC,eAAD,OAC/K,kBAACT,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,cAAcR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASI,MAAOpC,IAAKC,EAAE,8BAA+BgC,QAAS,kBAAM,EAAKK,aAAY,kBAAC,iBAAD,W,oCA/EnKC,EAAUC,GAC1B,IAAMC,EAAKvD,OAAO6B,SAASC,cAAc,KACzCyB,EAAGxB,aAAa,OAAQ,uCAAyCyB,mBAAmBjD,KAAKgB,UAAU+B,EAAK,KAAM,KAC9GC,EAAGxB,aAAa,WAAYsB,GAE5BE,EAAGE,MAAMC,QAAU,OACnB1D,OAAO6B,SAAS8B,KAAKC,YAAYL,GAEjCA,EAAGrB,QAEHlC,OAAO6B,SAAS8B,KAAKE,YAAYN,O,GAZtBO,aA8FJC,eA1GA,SAAAC,GAAK,MAAK,CACrBlB,QAAS,CACLmB,YAAa,EACbC,UAAW,EACXC,MAAO,SAEX5B,KAAM,CACF6B,QAAS,EACTC,MAAO,OAkGAN,CAAmBrE,G,iBC9D5B4E,E,YACF,WAAY1D,GAAQ,IAAD,8BACf,4CAAMA,KAED2D,MAAQ,CACTC,UAAU,EACVC,iBAAiB,EACjBC,UAAU,EACVC,MAAO,GACPC,iBAAiB,GAGrB,EAAKhE,MAAMiE,OAAOC,UAAlB,yBAA8C,EAAKlE,MAAMmE,YAAzD,YAAwE,EAAKnE,MAAMU,WAAY0D,MAAK,SAAA1B,GAAG,OACnG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAAK,OAC1G,EAAKW,SAAS,CAACN,gBAAiBtB,GAAOA,EAAI5C,QAAU4C,EAAI5C,OAAOyE,SAAWZ,GAASA,EAAMa,YAbnF,E,yEAiBPlC,EAAOmC,EAAMC,GAAO,IAAD,OAC3B,OAAQ,kBAACC,EAAA,EAAD,CACJC,MAAO1E,IAAKC,EAAEmC,GACdb,UAAWhB,KAAKT,MAAM0B,QAAQV,MAC9B6D,MAAOpE,KAAKT,MAAMH,OAAO4E,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAASL,EAAMlF,EAAEN,OAAO4F,QAClDE,OAAO,a,mCAKX,OAAQ,kBAACC,EAAA,EAAD,CAAMvD,UAAWhB,KAAKT,MAAM0B,QAAQuD,MACxC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI1D,UAAWhB,KAAKT,MAAM0B,QAAQ0D,MAC9BC,MAAM,gBACN/C,MAAM,eAEV,kBAACgD,EAAA,EAAD,KAAcC,IAAMC,gBAAgBtF,IAAKC,EAAE,kBAE/C,kBAACsF,EAAA,EAAD,CAAa5C,MAAO,CAAC6C,UAAW,WAC5B,kBAACC,EAAA,EAAD,CAAQ5D,KAAK,QAAQC,MAAM,UAAUa,MAAO,CAAC6C,UAAW,UAAWvD,QAAS,WAC5D/C,OAAOgD,KAAK,qEAAsE,UAC1FC,UACJnC,IAAKC,EAAE,e,mCAKT,IAAD,OACTM,KAAK6D,SAAS,CAACV,UAAU,IACzBnD,KAAKT,MAAMiE,OAAOK,SAAS,OAAS7D,KAAKT,MAAMU,SAAW,iBAAkB,CAAC8D,IAAK,GAAIoB,KAAK,IACtFxB,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOK,SAAS,OAAS,EAAKtE,MAAMU,SAAW,YAAa,CAAC8D,IAAK,GAAIoB,KAAK,OACjGxB,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOK,SAAS,OAAS,EAAKtE,MAAMU,SAAW,gBAAiB,CAAC8D,IAAK,GAAIoB,KAAK,OACrGxB,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOK,SAAS,OAAS,EAAKtE,MAAMU,SAAW,qBAAsB,CAAC8D,IAAK,GAAIoB,KAAK,OAC1GxB,MAAK,WACF,OAAI,EAAKT,MAAME,gBACJ,EAAK7D,MAAMiE,OAAOK,SAAS,OAAS,EAAKtE,MAAMU,SAAW,yBAA0B,CAAC8D,KAAK,EAAMoB,KAAK,IAErGC,QAAQC,aAItB1B,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOC,UAAU,sBAAwB,EAAKlE,MAAMU,aAC1E0D,MAAK,SAAA1B,GACF,OAAKA,GAAQA,EAAI5C,QAAW4C,EAAI5C,OAAOyE,QAK5B,EAAKvE,MAAMiE,OAAO8B,UAAU,sBAAwB,EAAK/F,MAAMU,SAAUgC,GAHzEmD,QAAQC,aAMtB1B,MAAK,kBAAM,EAAKE,SAAS,CAACP,MAAO7D,IAAKC,EAAE,iDACxC6F,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,MAChC7B,MAAK,kBAAM,EAAKE,SAAS,CAACV,UAAU,S,0CAIzCnD,KAAK6D,SAAS,CAACT,iBAAkBpD,KAAKkD,MAAME,gBAAiBC,UAAWrD,KAAKkD,MAAME,oB,oCAGxE,IAAD,OACV,OAAKpD,KAAKkD,MAAMI,MAEZ,kBAACmC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBjE,MAAM,EACNkE,iBAAkB,IAClBC,QAAS,kBAAM,EAAKjC,SAAS,CAACP,MAAO,MACrCyC,aAAc,CACV,mBAAoB,cAExBC,QAAS,0BAAMC,GAAG,cAAcjG,KAAKkD,MAAMI,OAC3C4C,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJ5E,aAAW,QACXD,MAAM,UACNP,UAAWhB,KAAKT,MAAM0B,QAAQoF,MAC9B3E,QAAS,kBAAM,EAAKmC,SAAS,CAACP,MAAO,OAErC,kBAAC,UAAD,UAtBc,O,mCA4BpB,IAAD,OACT,OAAItD,KAAKkD,MAAMG,SACH,kBAAC,IAAD,CAASiD,KAAM7G,IAAKC,EAAE,+EAAgFoG,QAAS,kBAAM,EAAKjC,SAAS,CAACR,UAAU,OAE/I,O,qCAIAxB,EAAOmC,EAAM5B,GAAQ,IAAD,OAC/B,OAAQ,kBAACmE,EAAA,EAAD,CAAkBH,IAAKpC,EAAM5B,MAAOoE,OAAOC,OAAO,CAACC,WAAY,GAAItE,GAAQpB,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eAC3GC,QACI,kBAACC,EAAA,EAAD,CACIC,QAAS9G,KAAKT,MAAMH,OAAO4E,GAC3BK,SAAU,kBAAM,EAAK9E,MAAM8E,SAASL,GAAO,EAAKzE,MAAMH,OAAO4E,KAC7DzC,MAAM,YAGd4C,MAAO1E,IAAKC,EAAEmC,O,+BAId,IAAD,OACL,OACI,0BAAMb,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAChC,kBAAC,EAAD,CACI9G,SAAUD,KAAKT,MAAMU,SACrBZ,OAAQW,KAAKT,MAAMF,OACnBD,OAAQY,KAAKT,MAAMH,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3C3G,OAAQK,KAAKT,MAAMI,SAEvB,yBAAKqB,UAAWhB,KAAKT,MAAM0B,QAAQgG,OAAS,IAAMjH,KAAKT,MAAM0B,QAAQiG,gBAChElH,KAAKmH,YAAY,qBAAsB,SAAS,6BAChDnH,KAAKmH,YAAY,wBAAyB,OAAQ,YAAY,6BAC9DnH,KAAKoH,eAAe,eAAgB,cAAe,CAACvE,UAAW,KAAK,6BACrE,kBAAC0D,EAAA,EAAD,CAAkBH,IAAI,aAAahE,MAAO,CAACsE,WAAY,GAAI1F,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eACrFC,QACE,kBAACC,EAAA,EAAD,CACIC,QAAS9G,KAAKT,MAAMH,OAAOiI,WAC3BhD,SAAU,WAEN,IAAMiD,GAAU,EAAK/H,MAAMH,OAAOiI,WAClC,EAAK9H,MAAM8E,SAAS,aAAciD,GAAQ,kBACtCA,GAAU,EAAK/H,MAAM8E,SAAS,eAAe,OAErD9C,MAAM,YAGZ4C,MAAO1E,IAAKC,EAAE,iBAEqD,6BACtEM,KAAKoH,eAAe,wCAAgB,cAAe,CAACvE,UAAW,KAAK,6BACrE,6BACA,kBAACqC,EAAA,EAAD,CAAQqC,QAAQ,WACRvG,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAC9BC,SAAUzH,KAAKkD,MAAMC,WAAanD,KAAKkD,MAAMK,gBAC7C1B,MAAQ7B,KAAKkD,MAAMK,gBAAuD,GAArC9D,IAAKC,EAAE,4BAC5CgC,QAAS,kBAAM,EAAKgG,eACxB,kBAAC,YAAD,MAAcjI,IAAKC,EAAE,oCAEzB,kBAAC6G,EAAA,EAAD,CACIK,QACI,kBAACC,EAAA,EAAD,CACIC,QAAS9G,KAAKkD,MAAME,gBACpBiB,SAAU,kBAAM,EAAKsD,qBACrBpG,MAAM,YAGd4C,MAAO1E,IAAKC,EAAE,+CAElB,uBAAG0C,MAAO,CAACwF,WAAY,SAAU9C,IAAMC,gBAAgBtF,IAAKC,EAAE,eAElE,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQgG,OAAS,IAAMjH,KAAKT,MAAM0B,QAAQ4G,YAAa7H,KAAK8H,cACtF9H,KAAK+H,aACL/H,KAAKgI,mB,GAxLAvF,aAyMPC,eAzOA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPiF,UAAW,QAEf1H,MAAO,CACH2H,SAAU,KAEdV,OAAQ,CACJ5E,YAAa,IAEjB4B,KAAM,CACF2D,SAAU,IACVlD,UAAW,UAEfN,MAAO,CACHyD,OAAQ,KAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,IAEjBiF,WAAY,CACR7E,MAAO,IACPJ,YAAa,GAEjBsE,eAAgB,CACZlE,MAAO,yBA6MAN,CAAmBO,G,8DCxM5BqF,E,YACF,WAAY/I,GAAQ,IAAD,8BACf,4CAAMA,KAED2D,MAAQ,CACTqF,cAAc,GAJH,E,yEASP1G,EAAOmC,EAAMC,GAAO,IAAD,OAC3B,OAAQ,kBAACC,EAAA,EAAD,CACJC,MAAO1E,IAAKC,EAAEmC,GACdb,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAC/DvC,MAAOpE,KAAKT,MAAMH,OAAO4E,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAASL,EAAMlF,EAAEN,OAAO4F,QAClDE,OAAO,a,mCAIFzC,EAAOmC,EAAMwE,EAASpG,GAAQ,IAAD,OACtC,OAAQ,kBAACqG,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAgBvE,MAAOoE,OAAOC,OAAO,CAACC,WAAY,GAAItE,IACtI,kBAACsG,EAAA,EAAD,CACItE,MAAOpE,KAAKT,MAAMH,OAAO4E,IAAS,IAClCK,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAASL,EAAyB,MAAnBlF,EAAEN,OAAO4F,MAAgB,GAAKtF,EAAEN,OAAO4F,QAChF7D,MAAO,kBAACoI,EAAA,EAAD,CAAOrJ,KAAM0E,EAAMiC,GAAIjC,EAAO,aAEpCwE,EAAQI,KAAI,SAAAC,GAAI,OAAK,kBAACC,EAAA,EAAD,CAAU1C,IAAK,OAASyC,EAAKzE,MAAOA,MAAOyE,EAAKzE,OAAS,KAAM3E,IAAKC,EAAEmJ,EAAKhH,YAErG,kBAACkH,EAAA,EAAD,KAAiBtJ,IAAKC,EAAEmC,O,qCAIjBA,EAAOmC,EAAM5B,GAAQ,IAAD,OAC/B,OAAQ,kBAACmE,EAAA,EAAD,CAAkBH,IAAKpC,EAAM5B,MAAOoE,OAAOC,OAAO,CAACC,WAAY,GAAItE,GAAQpB,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eAC7GC,QACI,kBAACC,EAAA,EAAD,CACIC,QAAS9G,KAAKT,MAAMH,OAAO4E,GAC3BK,SAAU,kBAAM,EAAK9E,MAAM8E,SAASL,GAAO,EAAKzE,MAAMH,OAAO4E,KAC7DzC,MAAM,YAGd4C,MAAO1E,IAAKC,EAAEmC,O,wCAIJmC,GAAO,IAAD,OACpB,OAAIhE,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAUlJ,KAAKT,MAAMH,OAAO4E,GAC5BmF,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAAAF,GACF,EAAKrF,SAAS,CAAC0E,cAAc,IAC7B,EAAKhJ,MAAM8E,SAASL,EAAMkF,MAI3B,O,+BAIL,IAAD,OACL,OACI,0BAAMlI,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAC/B/G,KAAKmH,YAAY,YAAa,YAAY,6BAC1CnH,KAAKqJ,aAAa,WAAY,WAAY,CACvC,CAACxH,MAAO,UAAWuC,MAAO,IAC1B,CAACvC,MAAO,UAAWuC,MAAO,MAC1B,CAACvC,MAAO,UAAWuC,MAAO,MAC1B,CAACvC,MAAO,6CAAWuC,MAAO,OAC3B,CAACvB,UAAW,KAAK,6BACnB7C,KAAKoH,eAAe,gCAAiC,gBAAiB,CAACvE,UAAW,KAAK,6BACvF7C,KAAKmH,YAAY,yBAA0B,cAAc,6BACzDnH,KAAKmH,YAAY,mBAAoB,YAAY,6BAClD,yBAAKnG,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eAAgBvE,MAAO,CAACS,UAAW,KACjE7C,KAAKmH,YAAY,8BAA+B,kBACjD,kBAAC4B,EAAA,EAAD,KAAiBtJ,IAAKC,EAAE,wCAE5B,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQ0F,gBAC9B3G,KAAKmH,YAAY,oBAAqB,eACvC,kBAAC9F,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYG,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,KAAQ/G,aAAW,MAAMY,MAAO,CAACkH,WAAY,EAAGzG,UAAW,KAAK,kBAAC,QAAD,OAAiB,8BAErK,yBAAK7B,UAAWhB,KAAKT,MAAM0B,QAAQ0F,gBAC9B3G,KAAKoH,eAAe,+BAAgC,YACrD,kBAAC2B,EAAA,EAAD,KAAiBjE,IAAMC,gBAAgBtF,IAAKC,EAAE,cAA8B,8BAE/EM,KAAKoH,eAAe,gBAAiB,SACrCpH,KAAKuJ,kBAAkB,oB,GA5FV9G,aA4GfC,gBAjJA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPiF,UAAW,QAEf1H,MAAO,CACHsC,UAAW,EACXqF,SAAU,KAEdV,OAAQ,CACJ5E,YAAa,IAEjB4B,KAAM,CACF2D,SAAU,IACVlD,UAAW,UAEfN,MAAO,CACHyD,OAAQ,KAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,IAEjBiF,WAAY,CACR7E,MAAO,IACPJ,YAAa,GAEjBsE,eAAgB,CACZlE,MAAO,sBAEX2D,eAAgB,CAEZ6C,aAAc,MAgHP9G,CAAmB4F,G,wCCrF5BmB,G,YACF,WAAYlK,GAAQ,IAAD,8BACf,4CAAMA,KAED2D,MAAQ,CACTwG,SAAS,EACTpG,MAAO,GACPqG,iBAAkB,GAClBC,eAAgB,GAChBC,SAAU,GACVtG,iBAAiB,GAErB,EAAKuG,kBAAoB,EAAKC,aAAaC,KAAlB,iBAEzB,EAAKzK,MAAMiE,OAAOyG,oBAAoB,gBACjCtG,MAAK,SAAAuG,GAAI,OACN,EAAK3K,MAAMiE,OAAOyG,oBAAoB,cACjCtG,MAAK,SAAAwG,GAAM,OAAI,EAAKtG,SAAS,CAC1B+F,eAAgBO,EAAOvB,KAAI,SAAA3G,GAAG,OAAIA,EAAIlC,IAAIqK,QAAQ,6BAA8B,OAChFT,iBAAkBO,EAAKtB,KAAI,SAAA3G,GAAG,OAAIA,EAAIlC,IAAIqK,QAAQ,+BAAgC,eAlBnF,E,kFAsBG,IAAD,OACjBpK,KAAKT,MAAMiE,OAAO6G,eAAe,OAASrK,KAAKT,MAAMU,SAAW,gBAAiBD,KAAK8J,mBAEtF9J,KAAKT,MAAMiE,OAAOC,UAAlB,yBAA8CzD,KAAKT,MAAMmE,YAAzD,YAAwE1D,KAAKT,MAAMU,WAAY0D,MAAK,SAAA1B,GAAG,OACnG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAAK,OAC1G,EAAKW,SAAS,CAACN,gBAAiBtB,GAAOA,EAAI5C,QAAU4C,EAAI5C,OAAOyE,SAAWZ,GAASA,EAAMa,c,6CAIlG/D,KAAKT,MAAMiE,OAAO8G,iBAAiB,OAAStK,KAAKT,MAAMU,SAAW,gBAAiBD,KAAK8J,qB,mCAG/E7D,EAAI/C,GACblD,KAAK6D,SAAS,CAACuC,IAAKlD,EAAMa,Q,kCAGlBlC,EAAOmC,EAAMC,GAAO,IAAD,OAC3B,OAAQ,kBAACC,EAAA,EAAD,CACJC,MAAO1E,IAAKC,EAAEmC,GACdb,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAC/DvC,MAAOpE,KAAKT,MAAMH,OAAO4E,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAASL,EAAMlF,EAAEN,OAAO4F,QAClDE,OAAO,a,sCAIE,IAAD,OAEZ,OADAtE,KAAK6D,SAAS,CAAC6F,SAAS,IACjB1J,KAAKT,MAAMiE,OAAOK,SAAS,OAAS7D,KAAKT,MAAMU,SAAW,gBAAiB,CAAC8D,IAAK,GAAIoB,KAAK,IAC5FxB,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOC,UAAU,sBAAwB,EAAKlE,MAAMU,aAC1E0D,MAAK,SAAA1B,GACF,GAAKA,GAAQA,EAAI5C,QAAW4C,EAAI5C,OAAOyE,QAGnC,OAAO,EAAKvE,MAAMiE,OAAO8B,UAAU,sBAAwB,EAAK/F,MAAMU,SAAUgC,GAFhF,EAAK4B,SAAS,CAAC6F,SAAS,EAAOpG,MAAO7D,IAAKC,EAAE,wCAKpDiE,MAAK,kBAAM,EAAKE,SAAS,CAAC6F,SAAS,EAAOpG,MAAO7D,IAAKC,EAAE,6DACxD6F,OAAM,SAAAC,GACH,EAAK3B,SAAS,CAAC6F,SAAS,IACxB,EAAKnK,MAAMgL,UAAU/E,Q,oCAIlB,IAAD,OACV,OAAKxF,KAAKkD,MAAMI,MAEZ,kBAACmC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBjE,MAAM,EACNkE,iBAAkB,IAClBC,QAAS,kBAAM,EAAKjC,SAAS,CAACP,MAAO,MACrCyC,aAAc,CACV,mBAAoB,cAExBC,QAAS,0BAAMC,GAAG,cAAcjG,KAAKkD,MAAMI,OAC3C4C,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJ5E,aAAW,QACXD,MAAM,UACNP,UAAWhB,KAAKT,MAAM0B,QAAQoF,MAC9B3E,QAAS,kBAAM,EAAKmC,SAAS,CAACP,MAAO,OAErC,kBAAC,UAAD,UAtBc,O,oCA4BpBU,EAAMI,GAChB,IAAMoG,GAASxK,KAAKT,MAAMH,OAAO4E,IAAS,IAAIyG,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,KACtEC,EAAMJ,EAAMK,QAAQzG,IACb,IAATwG,IACAJ,EAAMM,OAAOF,EAAK,GAClB5K,KAAKT,MAAM8E,SAASL,EAAMwG,EAAMO,KAAK,S,iCAIlC/G,GAAO,IAAD,OACPwG,GAASxK,KAAKT,MAAMH,OAAO4E,IAAS,IAAIyG,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,MAE/D,IADDH,EAAMK,QAAQ7K,KAAKkD,MAAM2G,YAEjCW,EAAMQ,KAAKhL,KAAKkD,MAAM2G,UACtB7J,KAAK6D,SAAS,CAACgG,SAAU,KAAK,kBAAM,EAAKtK,MAAM8E,SAASL,EAAMwG,EAAMO,KAAK,Y,6CAK7E,IAAME,EAAQjL,KAAKT,MAAMH,OAAO8L,MAAMd,QAAQ,aAAc,KACtDe,EAASnL,KAAKT,MAAMH,OAAOgM,eACjC,OAAOH,GAASE,EAAS,IAAMA,EAAS,M,kCAGhChH,EAAOH,GAAO,IAAD,OACrB,OAAQ,yBAAKhD,UAAWhB,KAAKT,MAAM0B,QAAQoK,UACvC,kBAACtC,EAAA,EAAD,KAAiBjE,IAAMC,gBAAgBtF,IAAKC,EAAEyE,KAC9C,kBAACD,EAAA,EAAD,CACIC,MAAO1E,IAAKC,EAAE,eACd0C,MAAO,CAACY,MAAO,KACfiB,KAAM,OACNG,MAAOpE,KAAKkD,MAAM2G,SAClByB,QAAS,SAAAxM,GAAC,OAAkB,KAAdA,EAAEyM,SAAkB,EAAKC,WAAWxH,IAClDK,SAAU,SAAAvF,GAAC,OAAI,EAAK+E,SAAS,CAACgG,SAAU/K,EAAEN,OAAO4F,MAAMqH,UACvDnH,OAAO,WAGX,kBAACjD,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYkG,UAAWzH,KAAKkD,MAAM2G,SAAUnI,QAAS,kBAAM,EAAK8J,WAAWxH,IAAO5B,MAAO,CAACkH,WAAY,EAAGzG,WAAY,KAAK,kBAAC,QAAD,OAElJ,yBAAK7B,UAAWhB,KAAKT,MAAM0B,QAAQuJ,QAC7BxK,KAAKT,MAAMH,OAAO4E,IAAS,IAAIyG,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,KAC9D/B,KAAI,SAAA8C,GAAI,OACJ,kBAACC,GAAA,EAAD,CACGvF,IAAKsF,EACLpK,KAAK,QACL6C,MAAOuH,EACPE,SAAU,kBAAM,EAAKC,cAAc7H,EAAM0H,IACzC1K,UAAW,EAAKzB,MAAM0B,QAAQ6K,c,+BAMxC,IAAD,OACL,OACI,0BAAM9K,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAChC,kBAAC7B,EAAA,EAAD,CACIqC,QAAQ,WACRE,UAAWzH,KAAKkD,MAAMK,iBAAmBvD,KAAKkD,MAAMwG,QACpDnI,MAAM,UACNM,MAAQ7B,KAAKkD,MAAMK,gBAAuD,GAArC9D,IAAKC,EAAE,4BAC5CgC,QAAS,kBAAM,EAAKqK,kBACpB,kBAAC,YAAD,MAAgBtM,IAAKC,EAAE,4BAClB,6BAERM,KAAKmH,YAAY,YAAa,YAAY,6BAE3C,kBAACjD,EAAA,EAAD,CACI9B,MAAO,CAACS,UAAW,IACnBsB,MAAO1E,IAAKC,EAAE,gCACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAiB,IAAM3G,KAAKT,MAAM0B,QAAQ+K,SACzG5H,MAAK,sEAAiEpE,KAAKkD,MAAMkD,IAA5E,iBAAwFjE,mBAAmBnC,KAAKT,MAAMH,OAAO8L,QAClIjH,KAAK,OACLgI,UAAU,EACV3H,OAAO,WAEX,kBAACjD,EAAA,EAAD,CAAKC,KAAK,QAAQc,MAAO,CAACS,UAAW,GAAIyG,WAAY,GAAI5H,QAAS,kBAAMoD,IAAMoH,gBAAN,sEAAqF,EAAKhJ,MAAMkD,IAAhG,iBAA4GjE,mBAAmB,EAAK5C,MAAMH,OAAO8L,WAAY,yBAAKnK,IAAKoL,KAAgBhL,IAAI,UAAe,6BAClR,6BAECnB,KAAKoM,YAAY,0BAA2B,mBAAmB,6BAEhE,kBAAClI,EAAA,EAAD,CACI9B,MAAO,CAACS,UAAW,IACnBsB,MAAO1E,IAAKC,EAAE,yCACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAiB,IAAM3G,KAAKT,MAAM0B,QAAQ+K,SACzG5H,MAAK,sFAAiFpE,KAAKkD,MAAMkD,IAA5F,iBAAwGjE,mBAAmBnC,KAAKT,MAAMH,OAAO8L,OAA7I,qBACLjH,KAAK,OACLgI,UAAU,EACV3H,OAAO,WAEX,kBAACjD,EAAA,EAAD,CAAKC,KAAK,QAAQc,MAAO,CAACS,UAAW,GAAIyG,WAAY,GAAI5H,QAAS,kBAAMoD,IAAMoH,gBAAN,sFAAqG,EAAKhJ,MAAMkD,IAAhH,iBAA4HjE,mBAAmB,EAAK5C,MAAMH,OAAO8L,OAAjK,wBAA6L,yBAAKnK,IAAKoL,KAAgBhL,IAAI,UAAe,6BAElT,kBAACsH,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAgBvE,MAAO,CAACsE,WAAY,KAC5G,kBAACgC,EAAA,EAAD,CACItE,MAAOpE,KAAKT,MAAMH,OAAOiN,cAAgB,IACzChI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAAS,eAAmC,MAAnBvF,EAAEN,OAAO4F,MAAgB,GAAKtF,EAAEN,OAAO4F,QAC1F7D,MAAO,kBAACoI,EAAA,EAAD,CAAOrJ,KAAK,eAAe2G,GAAG,yBAErC,kBAAC6C,EAAA,EAAD,CAAU1C,IAAI,cAAchC,MAAO,KAAM3E,IAAKC,EAAE,aAC/CM,KAAKkD,MAAMyG,iBAAiBf,KAAI,SAAAC,GAAI,OAAK,kBAACC,EAAA,EAAD,CAAU1C,IAAK,OAASyC,EAAMzE,MAAOyE,GAArC,gBAAyDA,OAEvG,kBAACE,EAAA,EAAD,KAAiBtJ,IAAKC,EAAE,+BAE5B,6BACA,kBAAC+I,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAgBvE,MAAO,CAACsE,WAAY,KAC5G,kBAACgC,EAAA,EAAD,CACItE,MAAOpE,KAAKT,MAAMH,OAAOkN,YAAc,IACvCjI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAAS,aAAiC,MAAnBvF,EAAEN,OAAO4F,MAAgB,GAAKtF,EAAEN,OAAO4F,QACxF7D,MAAO,kBAACoI,EAAA,EAAD,CAAOrJ,KAAK,aAAa2G,GAAG,uBAEnC,kBAAC6C,EAAA,EAAD,CAAU1C,IAAI,cAAchC,MAAO,KAAM3E,IAAKC,EAAE,aAC/CM,KAAKkD,MAAM0G,eAAehB,KAAI,SAAAC,GAAI,OAAK,kBAACC,EAAA,EAAD,CAAU1C,IAAK,OAASyC,EAAMzE,MAAOyE,GAArC,cAAuDA,OAEnG,kBAACE,EAAA,EAAD,KAAiBtJ,IAAKC,EAAE,6BAE3BM,KAAKT,MAAMH,OAAOkN,WAAc,kBAACpI,EAAA,EAAD,CAC7B9B,MAAO,CAACS,UAAW,KACnBsB,MAAO1E,IAAKC,EAAE,uBACd2E,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAAS,iBAAkBvF,EAAEN,OAAO4F,MAAMgG,QAAQ,aAAc,OAC1FpJ,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAiB,IAAM3G,KAAKT,MAAM0B,QAAQsL,WACzGnI,MAAOpE,KAAKT,MAAMH,OAAOgM,eACzBnH,KAAK,OACLK,OAAO,WACL,KACLtE,KAAKT,MAAMH,OAAOkN,WAAc,kBAACpI,EAAA,EAAD,CAC7B9B,MAAO,CAACS,UAAW,KACnBsB,MAAO1E,IAAKC,EAAE,yBACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAiB,IAAM3G,KAAKT,MAAM0B,QAAQsL,WACzGnI,MAAOpE,KAAKwM,uBACZvI,KAAK,OACLgI,UAAU,EACV3H,OAAO,WACL,KACLtE,KAAKgI,mB,GAtOCvF,aAwPRC,gBAjTA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPiF,UAAW,QAEf1H,MAAO,CACHsC,UAAW,EACXqF,SAAU,KAEd8D,SAAU,CACNhJ,MAAO,qBAEXuJ,WAAY,CACRvJ,MAAO,mBACPsG,WAAY,IAEhB9B,OAAQ,CACJ5E,YAAa,IAEjB4B,KAAM,CACF2D,SAAU,IACVlD,UAAW,UAEfN,MAAO,CACHyD,OAAQ,KAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,IAEjBiF,WAAY,CACR7E,MAAO,IACPJ,YAAa,GAEjBsE,eAAgB,CACZlE,MAAO,sBAEX2D,eAAgB,CAEZ6C,aAAc,GAElBgB,MAAO,CACHiC,OAAQ,iBACRC,aAAc,EACd1J,MAAO,qBACPX,QAAS,eACTU,QAAS,EACTkF,UAAW,GACXqB,WAAY,GACZzG,UAAW,IAEfiJ,KAAM,CACFlJ,YAAa,MA4PNF,CAAmB+G,I,4DC7P5BkD,G,YACF,WAAYpN,GAAQ,IAAD,8BACf,4CAAMA,KAED2D,MAAQ,CACTC,UAAU,EACVyJ,OAAQ,GACRC,gBAAiB,GACjBC,MAAO,GACPC,MAAO,GACPC,QAAS,GACThH,QAAS,GACTiH,SAAS,GAGb,EAAKC,kBAAoB,EAAKC,aAAanD,KAAlB,iBAEzB,EAAKzK,MAAMiE,OAAO4J,WACbzJ,MAAK,SAAA0J,GACF,IAAMP,EAAQ,GACRC,EAAQ,GAWd,OAVAvG,OAAO8G,KAAKD,GAAKE,SAAQ,SAAAtH,GACjBA,EAAGuH,MAAM,kBACTT,EAAM/B,KAAKqC,EAAIpH,IAEfA,EAAGuH,MAAM,uBACTV,EAAM9B,KAAKqC,EAAIpH,OAIvB,EAAKpC,SAAS,CAACiJ,QAAOC,QAAOE,SAAS,IAC/B,EAAK1N,MAAMiE,OAAOiK,gBAAgB,SAAU,EAAKP,sBA9BjD,E,oFAmCflN,KAAKT,MAAMiE,OAAOkK,kBAAkB,SAAU1N,KAAKkN,mBAAmBvJ,MAAK,iB,mCAGlEsC,EAAIhE,GACbjC,KAAK2N,cAAc1H,GACnBjG,KAAK4N,iBAAiB3H,EAAIhE,K,qCAGfgE,GACXjG,KAAKT,MAAMiE,OAAOqK,OAAO7N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAUgG,K,iCAGhFA,GACP,IAAM+G,EAAU9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,WACxB,IAAzBA,EAAQnC,QAAQ5E,KAChB+G,EAAQhC,KAAK/E,GACbjG,KAAK6D,SAAS,CAACmJ,e,oCAIT/G,GACV,IAAM+G,EAAU9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,UAC/CpC,EAAMoC,EAAQnC,QAAQ5E,IAEf,IAAT2E,IACAoC,EAAQlC,OAAOF,EAAK,GACpB5K,KAAK6D,SAAS,CAACmJ,e,uCAIN/G,EAAIhE,GAEjB,GAAIgE,EAAGuH,MAAM,uBACT,IAAK,IAAIM,EAAI9N,KAAKkD,MAAM4J,MAAMiB,OAAS,EAAGD,GAAK,EAAIA,IAC/C,GAAI9N,KAAKkD,MAAM4J,MAAMgB,GAAG/N,MAAQkG,EAAI,CAChC,IAAM6G,EAAQ5N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM4J,QAC/C7K,EACA6K,EAAMgB,GAAK7L,EAEX6K,EAAMhC,OAAOgD,EAAG,GAEpB9N,KAAK6D,SAAS,CAACiJ,UACf,YAIZ,GAAI7G,EAAGuH,MAAM,kBACT,IAAK,IAAIM,EAAI9N,KAAKkD,MAAM6J,MAAMgB,OAAS,EAAGD,GAAK,EAAGA,IAC9C,GAAI9N,KAAKkD,MAAM6J,MAAMe,GAAG/N,MAAQkG,EAAI,CAChC,IAAM8G,EAAQ7N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM6J,QAC/C9K,EACA8K,EAAMe,GAAK7L,EAEX8K,EAAMjC,OAAOgD,EAAG,GAEpB9N,KAAK6D,SAAS,CAACkJ,UACf,S,mCAMH9G,GAAK,IAAD,OACThE,EAAMjC,KAAKkD,MAAM4J,MAAMkB,MAAK,SAAAlP,GAAC,OAAIA,EAAEiB,MAAQkG,MAAOjG,KAAKkD,MAAM6J,MAAMiB,MAAK,SAAAlP,GAAC,OAAIA,EAAEiB,MAAQkG,KAEvFgI,EAAYnJ,IAAMoJ,oBAAoBjM,GAC1CA,EAAM/C,KAAKC,MAAMD,KAAKgB,UAAU+B,KACd,IAAdgM,EACAnJ,IAAMqJ,iBAAiBlM,EAAKjC,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOgP,UAElGtJ,IAAMuJ,gBAAgBpM,EAAKjC,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOgP,UAGrGpO,KAAKsO,WAAWrI,GAEhBjG,KAAKT,MAAMiE,OAAO8B,UAAUW,EAAIhE,GAC3B0B,MAAK,WAEF,EAAKiK,iBAAiB3H,EAAIhE,GAC1B,EAAKsM,eAAetI,GAEpBuI,YAAW,kBAAM,EAAKb,cAAc1H,KAAK,U,6BAI9CA,GACH,IAAMhE,EAAMjC,KAAKkD,MAAM4J,MAAMkB,MAAK,SAAAlP,GAAC,OAAIA,EAAEiB,MAAQkG,MAAOjG,KAAKkD,MAAM6J,MAAMiB,MAAK,SAAAlP,GAAC,OAAIA,EAAEiB,MAAQkG,KACzFgI,EAAYnJ,IAAMoJ,oBAAoBjM,EAAKjC,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOgP,UAC5F,kBAAdH,GAA0BA,IACjCA,EAAYA,EAAUxO,IAAKgP,gBAAkBR,EAAUS,IAE3DT,EAAYA,GAAanJ,IAAM6J,qBAAqB1M,EAAK,KAAM,CAAC2M,SAAUnP,IAAKgP,gBAC/EzO,KAAK6D,SAAS,CAAC+I,OAAQ3G,EAAI4G,gBAAiBoB,M,iCAGrChM,GAAM,IAAD,OACRgM,EAAYnJ,IAAMoJ,oBAAoBjM,EAAKjC,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOgP,UAEjHH,GAAkC,kBAAdA,IACpBA,EAAYA,EAAUxO,IAAKgP,gBAAkBR,EAAUS,IAAM,IAEjE,IAAIpP,EAAOwF,IAAM6J,qBAAqB1M,GAEtC,OAAQ,yBAAKmE,IAAKnE,EAAIlC,IAAKiB,UAAWhB,KAAKT,MAAM0B,QAAQ4N,SAAUzM,MAAO,CAAC0M,YAAqD,IAAzC9O,KAAKkD,MAAM8J,QAAQnC,QAAQ5I,EAAIlC,KAnMxG,YAmMsI,YAChJ,0BAAMiB,UAAWhB,KAAKT,MAAM0B,QAAQ8N,aAAc3M,MAAO,CAAC4M,SAAuB,IAAdf,EAAsB,GAAK,IAAKA,GAAa,KAAMA,EAAa,0BAAMjN,UAAWhB,KAAKT,MAAM0B,QAAQgO,iBAApC,KAAwD3P,EAAxD,KAAyEA,GAC5M,0BAAM0B,UAAWhB,KAAKT,MAAM0B,QAAQiO,WAAY9M,MAAO,CAAC4M,SAAuB,IAAdf,EAAsB,GAAK,IAAKhM,EAAIlC,KACrG,kBAACoP,GAAA,EAAD,CACInO,UAAWhB,KAAKT,MAAM0B,QAAQmO,gBAC9BtI,SAAuB,IAAdmH,EACT5J,SAAU,kBAAM,EAAKgL,aAAapN,EAAIlC,QAE1C,kBAACoG,EAAA,EAAD,CAAY3E,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQqO,aAAc5N,QAAS,kBAAM,EAAK6N,OAAOtN,EAAIlC,OACrG,kBAAC,SAAD,CAAUyP,SAAS,c,kCAMnBlQ,GAAO,IAAD,OACd,OAAOU,KAAKkD,MAAM5D,GAAMsJ,KAAI,SAAA9J,GAAC,OAAI,EAAK2Q,WAAW3Q,Q,sCAGpC,IAAD,OACZ,OAAIkB,KAAKkD,MAAM8C,QACH,kBAAC,IAAD,CAAeM,KAAMtG,KAAKkD,MAAM8C,QAASF,QAAS,kBAAM,EAAKjC,SAAS,CAACmC,QAAS,QAEjF,O,wCAII,IAAD,OAGd,IADYhG,KAAKkD,MAAM0J,OAAO8C,WAAW,mBAAqB1P,KAAKkD,MAAM4J,MAAQ9M,KAAKkD,MAAM6J,OAClFiB,MAAK,SAAA/L,GAAG,OACd,EAAKiB,MAAM0J,SAAW3K,EAAIlC,MAC1B,EAAKmD,MAAM2J,kBAAoB/H,IAAM6J,qBAAqB1M,EAAK,KAAM,CAAC2M,SAAUnP,IAAKgP,iBACrF,EAAKvL,MAAM2J,kBAAoB/H,IAAMoJ,oBAAoBjM,EAAK,EAAK1C,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,cACpIpO,KAAK6D,SAAS,CAACmC,QAASvG,IAAKC,EAAE,wBAC5B,CACHM,KAAKsO,WAAWtO,KAAKkD,MAAM0J,QAC3B4B,YAAW,kBAAM,EAAKb,cAAc,EAAKzK,MAAM0J,UAAS,KACxD,IAEI+C,EAFE1J,EAAKjG,KAAKkD,MAAM0J,OACtB5M,KAAK6D,SAAS,CAAC+I,OAAQ,KAEvB5M,KAAKT,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAGF,OAFA6C,IAAM8K,gBAAgB3N,EAAK,EAAKiB,MAAM2J,qBAAiBgD,OAAWA,EAAW,EAAKtQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UACnJuB,EAAS1N,EACF,EAAK1C,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAKiK,iBAAiB3H,EAAI0J,GAC1B,EAAKpB,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,S,yCAIzB,IAAD,OACf,GAAIxF,KAAKkD,MAAM0J,OAAQ,CACnB,IAAM3K,EAAMjC,KAAKkD,MAAM4J,MAAMkB,MAAK,SAAAlP,GAAC,OAAIA,EAAEiB,MAAQ,EAAKmD,MAAM0J,WAAW5M,KAAKkD,MAAM6J,MAAMiB,MAAK,SAAAlP,GAAC,OAAIA,EAAEiB,MAAQ,EAAKmD,MAAM0J,UAEvH,OAAQ,kBAACkD,GAAA,EAAD,CACJnO,MAAM,EACNwG,SAAS,KACT4H,WAAW,EACXjK,QAAS,kBAAM,EAAKkK,YACpBC,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,GAAA,EAAD,CAAalK,GAAG,wBAAwBjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqBoF,IAAM6J,qBAAqB1M,EAAK,KAAM,CAAC2M,SAAUnP,IAAKgP,kBAC9I,kBAAC2B,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CACI9B,MAAO,CAACY,MAAO,QACfmB,MAAO1E,IAAKC,EAAE,cACd2E,SAAU,SAAAvF,GAAC,OAAI,EAAK+E,SAAS,CAACgJ,gBAAiB/N,EAAEN,OAAO4F,SACxDA,MAAOpE,KAAKkD,MAAM2J,gBAClBwD,WAAY5Q,IAAKC,EAAE,gDACnB4E,OAAO,YAGf,kBAACgM,GAAA,EAAD,KACI,kBAACpL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAK6O,mBAAmBhP,MAAM,UAAUiP,WAAS,GAAE/Q,IAAKC,EAAE,OACjF,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKmC,SAAS,CAAC+I,OAAQ,OAAOnN,IAAKC,EAAE,aAIpE,OAAO,O,+BAKX,OAAIM,KAAKkD,MAAM+J,QACH,kBAACwD,GAAA,EAAD,MAGR,0BAAMzP,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAChC,yBAAK/F,UAAWhB,KAAKT,MAAM0B,QAAQgG,QAC/B,wBAAIjG,UAAWhB,KAAKT,MAAM0B,QAAQyP,cAAejR,IAAKC,EAAE,UACxD,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQ0P,WAAY3Q,KAAK4Q,YAAY,WAEpE,yBAAK5P,UAAWhB,KAAKT,MAAM0B,QAAQgG,QAC/B,wBAAIjG,UAAWhB,KAAKT,MAAM0B,QAAQyP,cAAejR,IAAKC,EAAE,cACxD,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQ0P,WAAY3Q,KAAK4Q,YAAY,WAEnE5Q,KAAK6Q,gBACL7Q,KAAK8Q,wB,GAnPFrO,aAoQLC,gBA1TA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPoF,OAAQ,QAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,GACbwF,OAAQ,OACR2I,SAAU,SACV/N,MAAO,mBACPkF,SAAU,IACVC,SAAU,KAEdwI,UAAW,CACPvI,OAAQ,oBACR2I,SAAU,OACV7I,SAAU,KAEdkH,gBAAiB,CACb4B,SAAU,WACVC,MAAO,EACPC,IAAK,GAET5B,aAAc,CAEV0B,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXlC,aAAc,GAGdE,gBAAgB,CACZkC,UAAW,UAEftC,SAAU,CACNzG,OAAQ,GACRpF,MAAO,OACPgO,SAAU,YAEd9B,WAAY,CACR7M,QAAS,QACT8O,UAAW,SACX3B,SAAU,IAEdkB,aAAc,CACV5B,WAAYnM,EAAMyO,QAAQC,QAAQC,MAClCvO,QAAS,GACTxB,MAAOoB,EAAMyO,QAAQC,QAAQE,iBAwQtB7O,CAAmBiK,I,UC5R5B6E,GAAiB,CACnBC,OAAQ,CAAClQ,MATG,UASaT,KAAM4Q,aAAQrR,KAAM,WAC7CsR,QAAS,CAACpQ,MATG,OAScT,KAAM4Q,aAAQrR,KAAM,YAE/CuR,qBAAsB,CAACrQ,MAVV,UAU2BT,KAAM+Q,oBAAiBxR,KAAM,0BACrEyR,2BAA4B,CAACvQ,MAbjB,UAaiCT,KAAMiR,mBAAQ1R,KAAM,gCACjE2R,2BAA4B,CAACzQ,MAbhB,OAaiCT,KAAMmR,qBAAU5R,KAAM,gCAEpE6R,cAAe,CAAC3Q,MAdH,UAcoBT,KAAMqR,eAAgB9R,KAAM,kBAC7D+R,oBAAqB,CAAC7Q,MAjBV,UAiB0BT,KAAMiR,mBAAQ1R,KAAM,wBAC1DgS,oBAAqB,CAAC9Q,MAjBT,OAiB0BT,KAAMmR,qBAAU5R,KAAM,wBAE7DiS,SAAU,CAAC/Q,MAlBE,UAkBeT,KAAMyR,YAAWlS,KAAM,aAEnDmS,oBAAqB,CAACjR,MApBT,UAoB0BT,KAAM2R,cAAUpS,KAAM,yBAC7DqS,0BAA2B,CAACnR,MAvBhB,UAuBgCT,KAAMiR,mBAAQ1R,KAAM,+BAChEsS,0BAA2B,CAACpR,MAvBf,OAuBgCT,KAAMmR,qBAAU5R,KAAM,+BAEnEuS,qBAAsB,CAACrR,MAvBT,UAuB2BT,KAAM+R,gBAAiBxS,KAAM,0BACtEyS,sBAAuB,CAACvR,MAxBV,UAwB4BT,KAAM+R,gBAAiBxS,KAAM,0BAEvE0S,aAAc,CAACxR,MA3BF,UA2BmBT,KAAMkS,aAAU3S,KAAM,kBACtD4S,aAAc,CAAC1R,MA3BD,UA2BmBT,KAAMkS,aAAU3S,KAAM,oBAGrD6S,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,UAqI9GC,G,YACF,WAAY5T,GAAQ,IAAD,6BACf,4CAAMA,IAEDiS,GAAe4B,aAChB5M,OAAO8G,KAAKkE,IAAgBjE,SAAQ,SAAA5C,GAAC,OAAI6G,GAAe7G,GAAGtK,KAAOZ,IAAKC,EAAE8R,GAAe7G,GAAGtK,SAC3FmR,GAAe4B,YAAa,GAGhC,EAAKlQ,MAAQ,CACT2J,gBAAiB,GACjBD,OAAQ,GACRyG,eAAgB,GAChBC,SAAU,GAEV/K,cAAc,EACdgL,iBAAkB,GAClBvG,QAAS,GACTwG,QAAS,GACTxN,QAAS,GACT0E,OAAQ,GACRuC,SAAS,EACTwG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjB,EAAKC,aAAe,KACpB,EAAKC,YAAc,KACnB,EAAKC,iBAAmB,EACxB,EAAKjH,gBAAkB,GAEvB,EAAKkH,gBAAkB,KACvB,EAAKC,mBAAqB,EAAKC,cAAcjK,KAAnB,iBAC1B,EAAKkK,oBAAsB,EAAKC,eAAenK,KAApB,iBAE3B,EAAKzK,MAAMiE,OAAOC,UAAlB,yBAA8C,EAAKlE,MAAMmE,YAAzD,YAAwE,EAAKnE,MAAMU,WAAY0D,MAAK,SAAA1B,GAChG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAChGjB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOyE,SAAaZ,GAAUA,EAAMa,KAGjE,EAAK0P,SAFL,EAAK5P,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAA6BuN,SAAS,EAAOuG,QAAS,WAtClF,E,oEA8CZY,GAAa,IAAD,OACXC,KAAKC,MAAQtU,KAAKuU,WAAa,MACnCvU,KAAKuU,WAAaF,KAAKC,MACnBF,EACApU,KAAK6D,SAAS,CAACoJ,SAAS,EAAMwG,QAAQ,IAEtCzT,KAAK6D,SAAS,CAAC4P,QAAQ,IAE3Be,QAAQC,IAAI,gBACZzU,KAAK6T,YAAcrF,YAAW,WAC1BgG,QAAQC,IAAI,mBACZ,EAAKZ,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKvQ,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMiE,OAAOqK,OAAO7N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAU,MAAM,SAAAiK,GACzF,EAAK2J,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KACf,EAAKE,kBACA,EAAKxE,OAAO,EAAKwE,gBAAiB7J,IACnC,EAAKrG,SAAS,CAACmC,QAASvG,IAAKC,EAAE,0BAA2B,EAAKqU,mBAEnE,EAAKA,gBAAkB,MAE3BS,QAAQC,IAAI,oBAEZ,EAAK5Q,SAAS,CAAC2P,QAAStJ,EAAM+C,SAAS,EAAOD,QAAS,GAAIyG,QAAQ,U,oCAI7DxN,EAAI/C,GAAQ,IAAD,OACrBsR,QAAQC,IAAI,UAAYxO,EAAK,IAAM/C,EAAMa,IAAM,IAAMb,EAAMiC,KACvDjC,IAAuB,IAAdA,EAAMiC,MAA8B,IAAdjC,EAAMa,MACjC/D,KAAK2U,UAAUD,aAAa1U,KAAK2U,UACrC3U,KAAK2U,SAAWnG,YAAW,WACvB,EAAKmG,SAAW,KAChB,EAAKlB,WACN,Q,qCAIIxN,EAAI/C,GACfA,IAAuB,IAAdA,EAAMiC,KAAgBjC,EAAMa,KAAO/D,KAAK6D,SAAS,CAACmC,QAAS9C,EAAMa,Q,2CAI1E/D,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,kBAAmGD,KAAKgU,oBACxGhU,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKkU,uB,6CAI9GlU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,kBAAqGD,KAAKgU,oBAC1GhU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKkU,qBAC5GlU,KAAK4T,eACLc,aAAa1U,KAAK4T,cAClB5T,KAAK4T,aAAe,Q,qCAIb3N,GACXjG,KAAKT,MAAMiE,OAAOqK,OAAO7N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAUgG,K,iCAGhFA,EAAI2O,GACX,IAAM5H,EAAU9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,WACxB,IAAzBA,EAAQnC,QAAQ5E,IAChB+G,EAAQhC,KAAK/E,GACbjG,KAAK6D,SAAS,CAACmJ,YAAU,kBAAM4H,GAAMA,QAErCA,GAAMA,M,oCAIA3O,GACV,IAAM+G,EAAU9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,UAC/CpC,EAAMoC,EAAQnC,QAAQ5E,IAEf,IAAT2E,IACAoC,EAAQlC,OAAOF,EAAK,GACpB5K,KAAK6D,SAAS,CAACmJ,e,6BAIhB/G,EAAIuN,GAAU,IAAD,OAEVqB,GADNrB,EAAUA,GAAWxT,KAAKkD,MAAMsQ,SACTxF,MAAK,SAAA8G,GAAG,OAAIA,EAAIC,2BAA2B9O,KAAOA,KACzE,QAAI4O,IACA7U,KAAKT,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GACF,IAAIgM,EAAY4G,EAAOE,2BAA2BC,cAAgBH,EAAOE,2BAA2BC,cAAgBH,EAAOI,aAClG,kBAAdhH,GAA0BA,IACjCA,EAAYA,EAAUxO,IAAKgP,gBAAkBR,EAAUS,IAE3D,EAAK7B,gBAAkBoB,EACvB,EAAKpK,SAAS,CAAC+I,OAAQ3G,EAAI4G,gBAAiBoB,EAAWoF,eAAgBvO,IAAM6J,qBAAqB1M,EAAK,KAAM,CAAC2M,SAAUnP,IAAKgP,sBAE9H,K,kCAMH6E,GACRtT,KAAK6D,SAAS,CAACyP,WAAUC,kBAAkB,M,iCAGnC,IAAD,OACHtN,EAAKjG,KAAKkD,MAAMoQ,SAEpBtT,KAAKsO,WAAWrI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAMqJ,iBAAiBlM,EAAK,EAAK1C,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAC3F,EAAK7O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WACF,EAAKE,SAAS,CAACyP,SAAU,GAAIC,kBAAkB,EAAOI,YAAa1N,IAEnE,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKrF,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,oCAI/BsP,GAAM,IAAD,OAETI,EAAU,GAChB,IAAKJ,EAAII,QAEL,OADAV,QAAQC,IAAI,wBACL,KAEXK,EAAII,QAAQC,MAAK,SAACxK,EAAGyK,GACjB,OAAIzK,IAAMyK,EAAU,EACV,WAANzK,GAAwB,EAClB,WAANyK,EAAuB,EAEjB,YAANzK,GAAyB,EACnB,YAANyK,EAAwB,EACrB,KAGX5O,OAAO8G,KAAKkE,IAAgBjE,SAAQ,SAAArH,GAChC,IAAqC,IAAjC4O,EAAII,QAAQrK,QAAQ3E,GAAgB,CACpC,IAAMmP,EAAO7D,GAAetL,GAAQpF,KACpCoU,EAAQlK,KAAM,0BAAM5E,IAAKF,EAAQrE,MAAO2P,GAAetL,GAAQ7F,MAAM,kBAACgV,EAAD,CAAMrU,UAAW,EAAKzB,MAAM0B,QAAQqU,WAAYlT,MAAO,CAACb,MAAOiQ,GAAetL,GAAQ3E,eAInK,IAAK,IAAIoJ,EAAI,EAAGA,EAAImK,EAAII,QAAQnH,OAAQpD,IAC/B6G,GAAesD,EAAII,QAAQvK,KAC5BuK,EAAQlK,KAAM,0BAAM5E,IAAK0O,EAAII,QAAQvK,IAAKmK,EAAII,QAAQvK,KAG9D,OAAOuK,I,+BAGFK,GACL,IAAM7B,EAAWxU,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMwQ,WAChD9I,EAAM8I,EAAS7I,QAAQ7K,KAAKkD,MAAMsQ,QAAQ+B,GAASN,eAC5C,IAATrK,EACA8I,EAAS1I,KAAKhL,KAAKkD,MAAMsQ,QAAQ+B,GAASN,cAE1CvB,EAAS5I,OAAOF,EAAK,GAEzB5K,KAAK6D,SAAS,CAAC6P,e,uCAGFoB,EAAKS,EAAStP,EAAIhC,GAAO,IAAD,OAErC,IAAa,IAATA,EAAgB,CAKhB,IAJA,IAAMuR,EAAQ,CACT,kBAAC1M,EAAA,EAAD,CAAU1C,IAAI,IAAIhC,MAAM,IAAG,4BAAK3E,IAAKC,EAAE,aACvC,kBAACoJ,EAAA,EAAD,CAAU1C,IAAI,OAAOhC,MAAM,UAAU3E,IAAKC,EAAE,gBAExCoO,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3B0H,EAAMxK,KAAM,kBAAClC,EAAA,EAAD,CAAW1C,IAAK0H,EAAElO,WAAYwE,MAAO0J,EAAElO,YAAakO,EAApD,MAEhB,OAAQ,kBAACrF,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQwU,gBAC/C,kBAAC/M,EAAA,EAAD,CAAQ1H,UAAWhB,KAAKT,MAAM0B,QAAQyU,qBAAsBtR,OAAQH,GAAQ,IAAIrE,WAAYyE,SAAU,SAAAvF,GAAC,OAAI,EAAK6W,eAAe1P,EAAInH,EAAEN,OAAO4F,SAASoR,GACrJ,kBAACzM,EAAA,EAAD,CAAgB/H,UAAWhB,KAAKT,MAAM0B,QAAQ2U,qBAAsBnW,IAAKC,EAAE,WAG/E,OAAO,O,qCAIAuG,EAAI4P,EAAM5R,GAAO,IAAD,OAC3BjE,KAAKsO,WAAWrI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAYF,OAXA6C,IAAM8K,gBAAgB3N,OAAK4N,EAAWgG,EAAM5R,EAAM,EAAK1E,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAEpH,EAAKlL,MAAMyQ,cAAgB1N,IAC3B,EAAKpC,SAAS,CAAC8P,YAAa1N,IAC5B,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKrU,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK4K,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,uCAI5BsP,EAAKS,EAAStP,EAAIhC,GAAO,IAAD,OACrC,IAAa,IAATA,EAAgB,CAIhB,IAHA,IAAMuR,EAAQ,CACT,kBAAC1M,EAAA,EAAD,CAAU1C,IAAI,IAAIhC,MAAM,KAAI,4BAAK3E,IAAKC,EAAE,cAEpCoO,EAAI,EAAGA,EAAIoF,GAAWnF,OAAQD,IACnC0H,EAAMxK,KAAM,kBAAClC,EAAA,EAAD,CAAW1C,IAAK8M,GAAWpF,GAAI1J,MAAO8O,GAAWpF,IAAI,4BAAKrO,IAAKC,EAAEwT,GAAWpF,OAE5F,OACI,kBAACrF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQtE,MAAOH,GAAQ,IAAKI,SAAU,SAAAvF,GAAC,OAAI,EAAK6W,eAAe1P,OAAI4J,EAAW/Q,EAAEN,OAAO4F,SAASoR,GAChG,kBAACzM,EAAA,EAAD,CAAgB/H,UAAWhB,KAAKT,MAAM0B,QAAQ2U,qBAAsBnW,IAAKC,EAAE,WAGnF,MAAO,K,qCAIAoV,EAAKS,GAAU,IAAD,OACnBvW,EAAS,GACTiC,EAAUjB,KAAKT,MAAM0B,QAE3B,GAAI6T,EAAIC,2BAA2Be,MAAO,CACtC,IAAMC,EAAajB,EAAIC,2BAA2BgB,SAC5CC,EAAalB,EAAIC,2BAA2BiB,MAC5CC,EAAanB,EAAIC,2BAA2BmB,MAC5CC,EAAarB,EAAIC,2BAA2BqB,WAE9CC,EAAI,EACR,IAAK,IAAMC,KAAQP,EACf,GAAIA,EAASQ,eAAeD,GACxB,IADgC,IAAD,WACtBxI,GACL,IAAM7H,EAAK8P,EAASO,GAAMxI,GAAG7H,GACzB6I,GAAiD,IAApC,EAAK5L,MAAM8J,QAAQnC,QAAQ5E,GAld9C,YACQ,UAkdF,EAAK/C,MAAMyQ,cAAgB1N,GAldzB,YAkd+B6I,IACjCA,EAldD,WAodH9P,EAAOgM,KAAM,yBAAK5E,IAAK,MAAQH,EAAIjF,UAAWC,EAAQuV,WAAYpU,MAAQiU,EAAI,EAAK,GAAK,CAACvH,eACrF,yBAAK9N,UAAW,EAAKzB,MAAM0B,QAAQwV,eAAiB,IAAM,EAAKlX,MAAM0B,QAAQyV,oBAAqB,EAAKC,cAAcZ,EAASO,GAAMxI,KACpI,yBAAK9M,UAAWC,EAAQ2V,eAAgB/U,MAAOoE,GAAM+P,EAAM/P,IAAOA,EAC7DA,IAAO+P,EAAM/P,GAAO,0BAAMjF,UAAWC,EAAQ4V,mBAAoB5Q,GAAc,MAEnF,EAAK6Q,iBAAiBhC,EAAKS,EAAStP,EAAIkQ,EAAWlQ,IACnD,EAAK8Q,iBAAiBjC,EAAKS,EAAStP,EAAIgQ,EAAMhQ,IAC/C,kBAACE,EAAA,EAAD,CAAY3E,aAAW,SAASR,UAAW,EAAKzB,MAAM0B,QAAQ+V,iBAAkBtV,QAAS,kBAAM,EAAKuV,YAAYhR,EAAIsP,KAAU,kBAAC,WAAD,CAAY/F,SAAS,cAEvJ6G,KAfKvI,EAAI,EAAGA,EAAIiI,EAASO,GAAMvI,OAAQD,IAAM,EAAxCA,OAmBd,CACH,IAAM7H,EAAK6O,EAAIC,2BAA2B9O,GACpC3G,EAAOwV,EAAIC,2BAA2BzV,MAAQ2G,EAChD6I,GAAiD,IAApC9O,KAAKkD,MAAM8J,QAAQnC,QAAQ5E,GAtelC,YACQ,UAsedjG,KAAKkD,MAAMyQ,cAAgB1N,GAteb,YAsemB6I,IACjCA,EAteW,WAwef9P,EAAOgM,KAAM,yBAAK5E,IAAK,MAAQH,EAAIjF,UAAWC,EAAQuV,WAAYpU,MAAO,CAAC0M,eACtE,yBAAK9N,UAAWhB,KAAKT,MAAM0B,QAAQwV,eAAiB,IAAMzW,KAAKT,MAAM0B,QAAQyV,mBAAoBtU,MAAO,CAACY,MAAO,KAAMhD,KAAK2W,cAAc7B,IACzI,yBAAK9T,UAAWC,EAAQ2V,eAAgB/U,MAAQoE,GAAM,IAAM3G,GAC3DU,KAAK8W,iBAAiBhC,EAAKS,EAAStP,EAAI6O,EAAIC,2BAA2BmC,WACvElX,KAAK+W,iBAAiBjC,EAAKS,EAAStP,EAAI6O,EAAIC,2BAA2Bc,QAGhF,OAAO7W,I,mCAGE8V,EAAKS,GAAU,IAEpB1T,EAFmB,OACnBoT,EAAeH,EAAIG,aAGnBpT,GADCiT,EAAIC,2BAA2Be,OAAShB,EAAIC,2BAA2BoC,aAChElC,EAEC,0BAAMjU,UAAWhB,KAAKT,MAAM0B,QAAQmW,YAAavV,MAAOpC,IAAKC,EAAE,aAAcuV,GAG1F,IAAIoC,EAAW,EACf,IAAK,IAAMC,KAAMxC,EAAIC,2BAA2BgB,SACxCjB,EAAIC,2BAA2BgB,SAASQ,eAAee,KACvDD,GAAYvC,EAAIC,2BAA2BgB,SAASuB,GAAIvJ,QAGhEsJ,EAAWA,GAAY,EACvB,IAAM3D,GAA0D,IAA/C1T,KAAKkD,MAAMwQ,SAAS7I,QAAQoK,GACvChP,EAAK6O,EAAIC,2BAA2B9O,GAEtC6I,EAAcyG,EAAU,EAAK,UAAY,UACvCvI,GAA8C,IAApChN,KAAKkD,MAAM8J,QAAQnC,QAAQ5E,GAQ3C,GAPI+G,EACA8B,EA1gBU,YA2gBH7I,IAAOjG,KAAKkD,MAAMyQ,cACzB7E,EA1gBe,WA8gBfgG,EAAIC,2BAA2Be,QAAU9I,GAAW/G,IAAOjG,KAAKkD,MAAMyQ,YAAa,CACnF,IAAMoC,EAAWjB,EAAIC,2BAA2BgB,SAChD,IAAK,IAAMO,KAAQP,EACf,GAAIA,EAASQ,eAAeD,GACxB,IAAK,IAAIxI,EAAI,EAAGA,EAAIiI,EAASO,GAAMvI,OAAQD,IAAK,CAC5C,IAAM7H,EAAK8P,EAASO,GAAMxI,GAAG7H,IACW,IAApCjG,KAAKkD,MAAM8J,QAAQnC,QAAQ5E,GAC3B6I,EAvhBN,YAwhBa9O,KAAKkD,MAAMyQ,cAAgB1N,IAClC6I,EAvhBD,YA8hBnB,MAAO,CACF,yBAAK1I,IAAK,OAASmP,EAASvU,UAAWhB,KAAKT,MAAM0B,QAAQsW,QAASnV,MAAO,CAAC0M,eACxE,yBAAK9N,UAAWhB,KAAKT,MAAM0B,QAAQuW,eAAgBjC,EAAU,EAA7D,KACA,kBAACpP,EAAA,EAAD,CAAYnF,UAAWhB,KAAKT,MAAM0B,QAAQwW,cAAe/V,QAAS,kBAAM,EAAKgW,SAASnC,KACjF8B,EAAW,EACP,kBAACM,GAAA,EAAD,CAAOC,aAAcP,EAAU9V,MAAM,WACjCmS,EAAY,kBAAC,eAAD,MAAoB,kBAAC,uBAAD,OAEpCA,EAAY,kBAAC,eAAD,MAAoB,kBAAC,uBAAD,OAEzC,yBAAK1S,UAAWhB,KAAKT,MAAM0B,QAAQ4W,iBAAkBzV,MAAO,CAACC,QAAS,eAAgB2O,SAAU,aAC5F,0BAAMhQ,UAAWhB,KAAKT,MAAM0B,QAAQ6W,aAAcjW,GAClD,0BAAMb,UAAWhB,KAAKT,MAAM0B,QAAQ8W,oBAAqBjD,EAAIkD,qBAC5DhL,EAAW,kBAACyD,GAAA,EAAD,CAAkBzP,UAAWhB,KAAKT,MAAM0B,QAAQgX,gBAAiB3W,KAAM,KAAS,MAEhG,0BAAMN,UAAWhB,KAAKT,MAAM0B,QAAQwV,gBAAiBzW,KAAK2W,cAAc7B,IACtEA,EAAIC,2BAA2Be,MAC4H,KAAxJ,kBAAC3P,EAAA,EAAD,CAAY3E,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQiX,YAAaxW,QAAS,kBAAM,EAAK6N,OAAOtJ,KAAK,kBAAC,SAAD,CAAUuJ,SAAS,YAC/HsF,EAAIC,2BAA2Be,MACuI,KAAnK,kBAAC3P,EAAA,EAAD,CAAY3E,aAAW,SAASR,UAAWhB,KAAKT,MAAM0B,QAAQkX,cAAezW,QAAS,kBAAM,EAAKuV,YAAYhR,KAAK,kBAAC,WAAD,CAAYuJ,SAAS,aAEhJkE,EAAW1T,KAAKoY,eAAetD,EAAKS,GAAW,Q,sCAItC,IAAD,OACZ,OAAIvV,KAAKkD,MAAM8C,QACH,kBAAC,IAAD,CAAeM,KAAMtG,KAAKkD,MAAM8C,QAASF,QAAS,kBAAM,EAAKjC,SAAS,CAACmC,QAAS,QAEjF,O,sCAIClH,GAAI,IAAD,OACfA,GAAKA,EAAEuZ,iBAEPrY,KAAKsO,WAAWtO,KAAKkD,MAAM0J,QAAQ,WAC/B,IAAM3G,EAAK,EAAK/C,MAAM0J,OACtB,EAAK/I,SAAS,CAAC+I,OAAQ,GAAIyG,eAAgB,GAAIM,YAAa1N,IAE5D,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKrU,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAM8K,gBAAgB3N,EAAK,EAAK4K,qBAAiBgD,OAAWA,EAAW,EAAKtQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UACtI,EAAK7O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK4K,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,yCAIzB,IAAD,OACf,OAAIxF,KAAKkD,MAAM0J,OACH,kBAACkD,GAAA,EAAD,CACJnO,MAAM,EACNwG,SAAS,KACT4H,WAAW,EACXjK,QAAS,kBAAM,EAAKkK,YACpBC,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,GAAA,EAAD,CAAalK,GAAG,wBAAwBjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqBM,KAAKkD,MAAMmQ,iBACnG,kBAACjD,GAAA,EAAD,KACI,2BAAG,qCAAH,IAAoB,0BAAMpP,UAAWhB,KAAKT,MAAM0B,QAAQqX,UAAWtY,KAAKkD,MAAM0J,SAC9E,kBAAC1I,EAAA,EAAD,CACI9B,MAAO,CAACY,MAAO,QACfmB,MAAO1E,IAAKC,EAAE,cACd6Y,UAAW,SAAAzZ,GAAC,OACM,KAAdA,EAAEyM,SAAkB,EAAKgF,gBAAgBzR,IAC7CuF,SAAU,SAAAvF,GAAC,OAAI,EAAK+N,gBAAkB/N,EAAEN,OAAO4F,OAC/CoU,aAAcxY,KAAKkD,MAAM2J,gBACzBwD,WAAY5Q,IAAKC,EAAE,gDACnB4E,OAAO,YAGf,kBAACgM,GAAA,EAAD,KACI,kBAACpL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAK6O,mBAAmBhP,MAAM,UAAUiP,WAAS,GAAE/Q,IAAKC,EAAE,OACjF,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,WACb,EAAKmL,gBAAkB,KACvB,EAAKhJ,SAAS,CAAC+I,OAAQ,GAAIC,gBAAiB,OAC5CpN,IAAKC,EAAE,aAIZ,O,4CAIQ,IAAD,OAClB,OAAIM,KAAKkD,MAAMqQ,iBACH,kBAACzD,GAAA,EAAD,CACJnO,MAAM,EACNwG,SAAS,KACT4H,WAAW,EACXjK,QAAS,kBAAM,EAAKkK,YACpBC,kBAAgB,4BAChBC,mBAAiB,mCAEjB,kBAACC,GAAA,EAAD,CAAalK,GAAG,6BAA6BjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,6BACxE,kBAAC0Q,GAAA,EAAD,KACI,2BAAI3Q,IAAKC,EAAE,mBAEf,kBAAC4Q,GAAA,EAAD,KACI,kBAACpL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKkK,YAAYrK,MAAM,UAAUiP,WAAS,GAAE/Q,IAAKC,EAAE,OAC1E,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKmC,SAAS,CAAC0P,iBAAkB,OAAO9T,IAAKC,EAAE,aAIvE,O,0CAIM,IAAD,OAChB,OAAIM,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAU,GACVC,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAACF,EAAU5J,GACb,EAAKuE,SAAS,CAAC0E,cAAc,IAE7B,EAAKhJ,MAAMiE,OAAOC,UAAUyF,GACvBvF,MAAK,SAAA1B,GACF,GAAIA,EAAK,CACL,IAAM3C,EAAOwF,IAAM6J,qBAAqB1M,EAAK,KAAM,CAAC2M,SAAUnP,IAAKgP,gBACnE3J,IAAM8K,gBAAgB3N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgB0K,QAAQ,UAAW,UAAMyF,OAAWA,EAAW,EAAKtQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAChL,EAAKE,WAAWrM,EAAIlC,KACpB,EAAKgU,gBAAkB9R,EAAIlC,IAEvB,EAAKmD,MAAMyQ,cAAgB1R,EAAIlC,MAC/B,EAAK8D,SAAS,CAAC8P,YAAa1R,EAAIlC,MAChC,EAAK6T,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGP,EAAKrU,MAAMiE,OAAO8B,UAAUrD,EAAIlC,IAAKkC,GAChC0B,MAAK,kBAAM,EAAK4K,eAAetM,EAAIlC,QACnCwF,OAAM,SAAAC,GAAG,OAAI,EAAK3B,SAAS,CAACmC,QAASR,YAE1C,EAAK3B,SAAS,CAACmC,QAASvG,IAAKC,EAAE,sBAM5C,O,sCAOX,IAFA,IAAMgL,EAAS1K,KAAKkD,MAAMwH,OAAO+N,cAC3BzZ,EAAS,GACN8O,EAAI,EAAGA,EAAI9N,KAAKkD,MAAMsQ,QAAQzF,OAAQD,IACvC9N,KAAKkD,MAAMwH,SAAgF,IAAtE1K,KAAKkD,MAAMsQ,QAAQ1F,GAAGmH,aAAawD,cAAc5N,QAAQH,IAClF1L,EAAOgM,KAAKhL,KAAK0Y,aAAa1Y,KAAKkD,MAAMsQ,QAAQ1F,GAAIA,IAEzD,OAAQ,yBAAK1H,IAAI,cAAcpF,UAAWhB,KAAKT,MAAM0B,QAAQ0P,WAAY3R,K,+BAGnE,IAAD,OACL,OAAIgB,KAAKkD,MAAM+J,QACH,kBAACwD,GAAA,EAAD,CAAmBrK,IAAI,kBAI/B,0BAAMA,IAAI,QAAQpF,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAC5C,kBAAC1F,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,MAAQ,kBAAC,QAAD,OAC/I,kBAAClH,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAC/E9F,QAAS,kBAAM,EAAK+R,QAAO,IAAOhM,SAAUzH,KAAKkD,MAAMuQ,QAASzT,KAAKkD,MAAMuQ,OAAU,kBAAChD,GAAA,EAAD,CAAkBnP,KAAM,KAAW,kBAAC,YAAD,OAE9H,kBAACqH,EAAA,EAAD,CACIgQ,YAAalZ,IAAKC,EAAE,UACpBsB,UAAWhB,KAAKkD,MAAMwH,OACtBtG,MAAOpE,KAAKkD,MAAMwH,OAClBrG,SAAU,SAAAvF,GAAC,OAAI,EAAK+E,SAAS,CAAC6G,OAAQ5L,EAAEN,OAAO4F,WAEnD,kBAAC+B,EAAA,EAAD,CAAY3E,aAAW,QAAQR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC6G,OAAQ,OAAM,kBAAC,UAAD,CAAW8E,SAAS,WACpIxP,KAAK4Y,gBACL5Y,KAAK6Q,gBACL7Q,KAAK8Q,mBACL9Q,KAAKuJ,oBACLvJ,KAAK6Y,2B,GAjkBQpW,aAklBfC,gBArtBA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPoF,OAAQ,QAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,GACbwF,OAAQ,OACR2I,SAAU,UAEdJ,UAAW,CACPvI,OAAQ,oBACR2I,SAAU,OACV7I,SAAU,KAEdwC,OAAQ,CACJpG,OAAQ,GAEZkD,OAAQ,CACJ5E,YAAa,IAEjB6U,cAAe,CACX7U,YAAa,IAEjBkW,eAAgB,CACZ9H,SAAU,WACVC,MAAO,EACPC,IAAK,GAETgH,YAAa,CACTlH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXkH,cAAe,CACXnH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEX6G,YAAa,GAGbN,cAAc,CACVnV,QAAS,eACTgG,cAAe,SACfrF,MAAO,IAEXsV,SAAU,CACNnH,UAAW,UAEflC,gBAAgB,CACZkC,UAAW,UAEfoG,QAAS,CACLnP,OAAQ,GACRpF,MAAO,OACPgO,SAAU,YAEd+G,mBAAoB,CAChB1V,QAAS,QACT8O,UAAW,SACX3B,SAAU,IAEdiH,eAAgB,CACZtF,UAAW,SACX3B,SAAU,GACVuJ,YAAa,GACb1W,QAAS,gBAEb4V,gBAAiB,CACbjH,SAAU,WACVE,IAAK,EACL8H,KAAM,GAEVtC,mBAAoB,CAChB1T,MAAO,IAEX6U,iBAAkB,CACdxV,QAAS,eACTW,MAAO,sBAEX0N,aAAc,CACV5B,WAAYnM,EAAMyO,QAAQC,QAAQC,MAClCvO,QAAS,GACTxB,MAAOoB,EAAMyO,QAAQC,QAAQE,cAEjC6F,YAAa,CACTjG,UAAW,UAEfmE,WAAY,CACRtS,MAAO,IAGXwT,WAAY,CACRxF,SAAU,WACV5I,OAAQ,IAEZwO,eAAgB,CACZtN,WAAY,EACZzG,UAAW,GACXR,QAAS,eACTmN,SAAU,GACVxM,MAAO,sBAEX6T,kBAAoB,CAChBrH,SAAU,EACV2B,UAAW,SACX9O,QAAS,SAEboT,eAAgB,CACZnM,WAAY,GAEhB0N,iBAAkB,CACdhG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPlO,QAAS,GAEbkW,eAAgB,CACZjI,SAAU,WACVE,IAAK,GACLD,MAAO,GACPlO,QAAS,GAEb6S,oBAAqB,CACjB/S,UAAW,MAslBJH,CAAmByQ,IC/uB5B3B,GAAiB,CACnB0H,MAAO,CAAC3X,MAVI,UAUYT,KAAM4Q,aAAQrR,KAAM,UAC5C8Y,WAAY,CAAC5X,MATA,UASiBT,KAAM2R,cAAUpS,KAAM,UACpD+Y,IAAK,CAAC7X,MATO,UASUT,KAAM2R,cAAUpS,KAAM,aAE7CuR,qBAAsB,CAACrQ,MAZV,UAY2BT,KAAM+Q,oBAAiBxR,KAAM,0BACrEyR,2BAA4B,CAACvQ,MAfjB,UAeiCT,KAAMiR,mBAAQ1R,KAAM,gCACjE2R,2BAA4B,CAACzQ,MAfhB,OAeiCT,KAAMmR,qBAAU5R,KAAM,gCAEpE+R,oBAAqB,CAAC7Q,MAlBV,UAkB0BT,KAAMiR,mBAAQ1R,KAAM,wBAC1DgS,oBAAqB,CAAC9Q,MAlBT,OAkB0BT,KAAMmR,qBAAU5R,KAAM,wBAE7DiS,SAAU,CAAC/Q,MAnBE,UAmBeT,KAAMyR,YAAWlS,KAAM,aAEnDqS,0BAA2B,CAACnR,MAvBhB,UAuBgCT,KAAMiR,mBAAQ1R,KAAM,+BAChEsS,0BAA2B,CAACpR,MAvBf,OAuBgCT,KAAMmR,qBAAU5R,KAAM,+BAEnEuS,qBAAsB,CAACrR,MAtBT,UAsB2BT,KAAM+R,gBAAiBxS,KAAM,0BACtEyS,sBAAuB,CAACvR,MAvBV,UAuB4BT,KAAM+R,gBAAiBxS,KAAM,0BAEvE0S,aAAc,CAACxR,MA3BF,UA2BmBT,KAAMkS,aAAU3S,KAAM,kBACtD4S,aAAc,CAAC1R,MA1BD,UA0BmBT,KAAMkS,aAAU3S,KAAM,oBAGrD6S,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,UA6I9GmG,G,YACF,WAAY9Z,GAAQ,IAAD,6BACf,4CAAMA,IAEDiS,GAAe4B,aAChB5M,OAAO8G,KAAKkE,IAAgBjE,SAAQ,SAAA5C,GAAC,OAAI6G,GAAe7G,GAAGtK,KAAOZ,IAAKC,EAAE8R,GAAe7G,GAAGtK,SAC3FmR,GAAe4B,YAAa,GAGhC,EAAKlQ,MAAQ,CACT2J,gBAAiB,GACjBD,OAAQ,GACRyG,eAAgB,GAChBC,SAAU,GAEV/K,cAAc,EACdgL,iBAAkB,GAClBvG,QAAS,GACTwG,QAAS,GACTxN,QAAS,GACT0E,OAAQ,GACRuC,SAAS,EACTwG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjB,EAAKC,aAAe,KACpB,EAAKC,YAAc,KACnB,EAAKC,iBAAmB,EACxB,EAAKjH,gBAAkB,GAEvB,EAAKkH,gBAAkB,KACvB,EAAKC,mBAAqB,EAAKC,cAAcjK,KAAnB,iBAC1B,EAAKkK,oBAAsB,EAAKC,eAAenK,KAApB,iBAE3B,EAAKzK,MAAMiE,OAAOC,UAAlB,yBAA8C,EAAKlE,MAAMmE,YAAzD,YAAwE,EAAKnE,MAAMU,WAAY0D,MAAK,SAAA1B,GAChG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAChGjB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOyE,SAAaZ,GAAUA,EAAMa,KAGjE,EAAK0P,SAFL,EAAK5P,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAA6BuN,SAAS,EAAOuG,QAAS,WAtClF,E,oEA8CZY,GAAa,IAAD,OACXC,KAAKC,MAAQtU,KAAKuU,WAAa,MAEnCvU,KAAKuU,WAAaF,KAAKC,MACnBF,EACApU,KAAK6D,SAAS,CAACoJ,SAAS,EAAMwG,QAAQ,IAEtCzT,KAAK6D,SAAS,CAAC4P,QAAQ,IAG3Be,QAAQC,IAAI,gBAEZzU,KAAK6T,YAAcrF,YAAW,WAC1BgG,QAAQC,IAAI,mBACZ,EAAKZ,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKvQ,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMiE,OAAOqK,OAAO7N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,cAAe,MAAM,SAAAiK,GAC9F,EAAK2J,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KAEf,EAAKE,kBACA,EAAKxE,OAAO,EAAKwE,gBAAiB7J,IACnC,EAAKrG,SAAS,CAACmC,QAASvG,IAAKC,EAAE,0BAA2B,EAAKqU,mBAEnE,EAAKA,gBAAkB,MAG3BS,QAAQC,IAAI,oBAEZ,EAAK5Q,SAAS,CAAC2P,QAAStJ,EAAM+C,SAAS,EAAOD,QAAS,GAAIyG,QAAQ,U,oCAI7DxN,EAAI/C,GAAQ,IAAD,OACrBsR,QAAQC,IAAI,UAAYxO,EAAK,KAAO/C,EAAQA,EAAMa,IAAM,IAAMb,EAAMiC,IAAM,SACtEjC,IAAuB,IAAdA,EAAMiC,MAA8B,IAAdjC,EAAMa,MACjC/D,KAAK2U,UAAUD,aAAa1U,KAAK2U,UACrC3U,KAAK2U,SAAWnG,YAAW,WACvB,EAAKmG,SAAW,KAChB,EAAKlB,WACN,Q,qCAIIxN,EAAI/C,GACfA,IAAuB,IAAdA,EAAMiC,KAAgBjC,EAAMa,KAAO/D,KAAK6D,SAAS,CAACmC,QAAS9C,EAAMa,Q,2CAI1E/D,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,kBAAmGD,KAAKgU,oBACxGhU,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKkU,uB,6CAI9GlU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,kBAAqGD,KAAKgU,oBAC1GhU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKkU,qBAC5GlU,KAAK4T,eACLc,aAAa1U,KAAK4T,cAClB5T,KAAK4T,aAAe,Q,qCAIb3N,GACXjG,KAAKT,MAAMiE,OAAOqK,OAAO7N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAUgG,K,iCAGhFA,EAAI2O,GACX,IAAM5H,EAAU9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,WACxB,IAAzBA,EAAQnC,QAAQ5E,IAChB+G,EAAQhC,KAAK/E,GACbjG,KAAK6D,SAAS,CAACmJ,YAAU,kBAAM4H,GAAMA,QAErCA,GAAMA,M,oCAIA3O,GACV,IAAM+G,EAAU9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,UAC/CpC,EAAMoC,EAAQnC,QAAQ5E,IAEf,IAAT2E,IACAoC,EAAQlC,OAAOF,EAAK,GACpB5K,KAAK6D,SAAS,CAACmJ,e,6BAIhB/G,EAAIuN,GAAU,IAAD,OAEVqB,GADNrB,EAAUA,GAAWxT,KAAKkD,MAAMsQ,SACTxF,MAAK,SAAA8G,GAAG,OAAIA,EAAIwE,QAAUrT,KACjD,QAAI4O,IACA7U,KAAKT,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GACF,IAAIgM,EAAY4G,EAAOvV,KACE,kBAAd2O,GAA0BA,IACjCA,EAAYA,EAAUxO,IAAKgP,gBAAkBR,EAAUS,IAE3D,EAAK7B,gBAAkBoB,EACvB,EAAKpK,SAAS,CAAC+I,OAAQ3G,EAAI4G,gBAAiBoB,EAAWoF,eAAepF,QAEvE,K,kCAMHqF,GACRtT,KAAK6D,SAAS,CAACyP,WAAUC,kBAAkB,M,iCAGnC,IAAD,OACHtN,EAAKjG,KAAKkD,MAAMoQ,SAEpBtT,KAAKsO,WAAWrI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAMqJ,iBAAiBlM,EAAK,EAAK1C,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAC3F,EAAK7O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WACF,EAAKE,SAAS,CAACyP,SAAU,GAAIC,kBAAkB,EAAOI,YAAa1N,IAEnE,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKrF,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,oCAI/BsP,GAAM,IAAD,OAETI,EAAU,GAChB,IAAKJ,EAAII,QAEL,OADAV,QAAQC,IAAI,wBACL,KAGXK,EAAII,QAAQC,MAAK,SAACxK,EAAGyK,GACjB,OAAIzK,IAAMyK,EAAU,EACV,UAANzK,GAAuB,EACjB,UAANyK,EAAsB,EACnB,KAGX5O,OAAO8G,KAAKkE,IAAgBjE,SAAQ,SAAArH,GAChC,IAAqC,IAAjC4O,EAAII,QAAQrK,QAAQ3E,GAAgB,CACpC,IAAMmP,EAAO7D,GAAetL,GAAQpF,KACpCoU,EAAQlK,KAAM,0BAAM5E,IAAKF,EAAQrE,MAAO2P,GAAetL,GAAQ7F,MAAM,kBAACgV,EAAD,CAAMrU,UAAW,EAAKzB,MAAM0B,QAAQqU,WAAYlT,MAAO,CAACb,MAAOiQ,GAAetL,GAAQ3E,eAInK,IAAK,IAAIoJ,EAAI,EAAGA,EAAImK,EAAII,QAAQnH,OAAQpD,IAC/B6G,GAAesD,EAAII,QAAQvK,KAC5BuK,EAAQlK,KAAM,0BAAM5E,IAAK0O,EAAII,QAAQvK,IAAKmK,EAAII,QAAQvK,KAG9D,OAAOuK,I,+BAGFK,GACL,IAAM7B,EAAWxU,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMwQ,WAChD9I,EAAM8I,EAAS7I,QAAQ7K,KAAKkD,MAAMsQ,QAAQ+B,GAASjW,OAC5C,IAATsL,EACA8I,EAAS1I,KAAKhL,KAAKkD,MAAMsQ,QAAQ+B,GAASjW,MAE1CoU,EAAS5I,OAAOF,EAAK,GAEzB5K,KAAK6D,SAAS,CAAC6P,e,qCAGJzN,EAAI4P,EAAM5R,GAAO,IAAD,OAC3BjE,KAAKsO,WAAWrI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAYF,OAXA6C,IAAM8K,gBAAgB3N,OAAK4N,EAAWgG,EAAM5R,EAAM,EAAK1E,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAEpH,EAAKlL,MAAMyQ,cAAgB1N,IAC3B,EAAKpC,SAAS,CAAC8P,YAAa1N,IAC5B,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKrU,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK4K,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,uCAI5BsP,EAAKS,EAAStP,EAAIhC,GAAO,IAAD,OACrC,IAAa,IAATA,EAAgB,CAIhB,IAHA,IAAMuR,EAAQ,CACT,kBAAC1M,EAAA,EAAD,CAAU1C,IAAI,IAAIhC,MAAM,KAAI,4BAAK3E,IAAKC,EAAE,cAEpCoO,EAAI,EAAGA,EAAIoF,GAAWnF,OAAQD,IACnC0H,EAAMxK,KAAM,kBAAClC,EAAA,EAAD,CAAW1C,IAAK8M,GAAWpF,GAAI1J,MAAO8O,GAAWpF,IAAI,4BAAKrO,IAAKC,EAAEwT,GAAWpF,OAE5F,OACI,kBAACrF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQtE,MAAOH,GAAQ,IAAKI,SAAU,SAAAvF,GAAC,OAAI,EAAK6W,eAAe1P,OAAI4J,EAAW/Q,EAAEN,OAAO4F,SAASoR,GAChG,kBAACzM,EAAA,EAAD,CAAgB/H,UAAWhB,KAAKT,MAAM0B,QAAQ2U,qBAAsBnW,IAAKC,EAAE,WAGnF,MAAO,K,qCAIAoV,EAAKS,GAChB,IAAMvW,EAAS,GACTiC,EAAUjB,KAAKT,MAAM0B,QAErBgF,EAAK6O,EAAIyE,KAAKC,MACdla,EAAOwV,EAAI2E,KAsDjB,OAjDAza,EAAOgM,KAAM,yBAAK5E,IAAK,MAAQH,EAAIjF,UAAWC,EAAQuV,WAAYpU,MAAO,CAAC0M,WAncpD,YAoclB,yBAAK9N,UAAWC,EAAQ2V,gBAAiBtX,EAAKoa,eAC9C,yBAAK1Y,UAAWC,EAAQ0Y,eACpB,6BAAM7E,EAAIyE,KAAKC,OACd1E,EAAIyE,KAAKK,OAAS9E,EAAIyE,KAAKK,QAAU9E,EAAIyE,KAAKC,MAAS,yBAAKxY,UAAWC,EAAQ4Y,iBAAkB/E,EAAIyE,KAAKK,OAAgB,QAKnI9E,EAAIgF,WAAWvM,SAAQ,SAAAvJ,GACnBhF,EAAOgM,KAAM,yBAAK5E,IAAK,MAAQpC,EAAKwV,MAAOxY,UAAWC,EAAQuV,WAAYpU,MAAO,CAAC0M,WA7chE,YA8cd,yBAAK9N,UAAWC,EAAQ2V,gBAAiB5S,EAAK1E,KAAKoa,eACnD,yBAAK1Y,UAAWC,EAAQ0Y,eACpB,6BAAM3V,EAAKwV,OACVxV,EAAK4V,OAAS5V,EAAK4V,QAAU5V,EAAKwV,MAAS,yBAAKxY,UAAWC,EAAQ4Y,iBAAkB7V,EAAK4V,OAAgB,WAmChH5a,I,mCAGE8V,EAAKS,GAAU,IAAD,OAEjB7B,GAAsD,IAA3C1T,KAAKkD,MAAMwQ,SAAS7I,QAAQiK,EAAIxV,MAC7CwP,EAAcyG,EAAU,EAAK,UAAY,UACvCvI,GAAqD,IAA3ChN,KAAKkD,MAAM8J,QAAQnC,QAAQiK,EAAIwE,OAS/C,OARItM,EACA8B,EA9fU,YA+fHgG,EAAIwE,QAAUtZ,KAAKkD,MAAMyQ,cAChC7E,EA9fe,WAmgBZ,CACF,yBAAK1I,IAAK,OAASmP,EAASvU,UAAWhB,KAAKT,MAAM0B,QAAQsW,QAASnV,MAAO,CAAC0M,eACxE,yBAAK9N,UAAWhB,KAAKT,MAAM0B,QAAQuW,eAAgBjC,EAAU,EAA7D,KACA,kBAACpP,EAAA,EAAD,CAAYnF,UAAWhB,KAAKT,MAAM0B,QAAQwW,cAAe/V,QAAS,kBAAM,EAAKgW,SAASnC,KACjFT,EAAIgF,WAAW/L,OACX,kBAAC4J,GAAA,EAAD,CAAOC,aAAc9C,EAAIgF,WAAW/L,OAAQxM,MAAM,WAAWmS,EAAY,kBAAC,eAAD,MAAoB,kBAAC,uBAAD,OAC7FA,EAAY,kBAAC,eAAD,MAAoB,kBAAC,uBAAD,OAEzC,yBAAK1S,UAAWhB,KAAKT,MAAM0B,QAAQ4W,iBAAkBzV,MAAO,CAACC,QAAS,eAAgB2O,SAAU,aAC5F,0BAAMhQ,UAAWhB,KAAKT,MAAM0B,QAAQ6W,aAAchD,EAAIxV,MACtD,0BAAM0B,UAAWhB,KAAKT,MAAM0B,QAAQ8W,oBAAqBjD,EAAIiF,aAC5D/M,EAAW,kBAACyD,GAAA,EAAD,CAAkBzP,UAAWhB,KAAKT,MAAM0B,QAAQgX,gBAAiB3W,KAAM,KAAS,MAEhG,0BAAMN,UAAWhB,KAAKT,MAAM0B,QAAQwV,gBAAiBzW,KAAK2W,cAAc7B,IACxE,kBAAC3O,EAAA,EAAD,CAAY3E,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQiX,YAAaxW,QAAS,kBAAM,EAAK6N,OAAOuF,EAAIwE,SAAQ,kBAAC,SAAD,CAAU9J,SAAS,YACnI,kBAACrJ,EAAA,EAAD,CAAY3E,aAAW,SAASR,UAAWhB,KAAKT,MAAM0B,QAAQkX,cAAezW,QAAS,kBAAM,EAAKuV,YAAYnC,EAAIwE,SAAQ,kBAAC,WAAD,CAAY9J,SAAS,aAGlJkE,EAAW1T,KAAKoY,eAAetD,EAAKS,GAAW,Q,sCAItC,IAAD,OACZ,OAAIvV,KAAKkD,MAAM8C,QACH,kBAAC,IAAD,CAAeM,KAAMtG,KAAKkD,MAAM8C,QAASF,QAAS,kBAAM,EAAKjC,SAAS,CAACmC,QAAS,QAEjF,O,sCAIClH,GAAI,IAAD,OACfA,GAAKA,EAAEuZ,iBAEPrY,KAAKsO,WAAWtO,KAAKkD,MAAM0J,QAAQ,WAC/B,IAAM3G,EAAK,EAAK/C,MAAM0J,OACtB,EAAK/I,SAAS,CAAC+I,OAAQ,GAAIyG,eAAgB,GAAIM,YAAa1N,IAE5D,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKrU,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAM8K,gBAAgB3N,EAAK,EAAK4K,qBAAiBgD,OAAWA,EAAW,EAAKtQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UACtI,EAAK7O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK4K,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,yCAIzB,IAAD,OACf,OAAIxF,KAAKkD,MAAM0J,OACH,kBAACkD,GAAA,EAAD,CACJnO,MAAM,EACNwG,SAAS,KACT4H,WAAW,EACXjK,QAAS,kBAAM,EAAKkK,YACpBC,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,GAAA,EAAD,CAAalK,GAAG,wBAAwBjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqBM,KAAKkD,MAAMmQ,iBACnG,kBAACjD,GAAA,EAAD,KACI,2BAAG,qCAAH,IAAoB,0BAAMpP,UAAWhB,KAAKT,MAAM0B,QAAQqX,UAAWtY,KAAKkD,MAAM0J,SAC9E,kBAAC1I,EAAA,EAAD,CACI9B,MAAO,CAACY,MAAO,QACfmB,MAAO1E,IAAKC,EAAE,cACd6Y,UAAW,SAAAzZ,GAAC,OACM,KAAdA,EAAEyM,SAAkB,EAAKgF,gBAAgBzR,IAC7CuF,SAAU,SAAAvF,GAAC,OAAI,EAAK+N,gBAAkB/N,EAAEN,OAAO4F,OAC/CoU,aAAcxY,KAAKkD,MAAM2J,gBACzBwD,WAAY5Q,IAAKC,EAAE,gDACnB4E,OAAO,YAGf,kBAACgM,GAAA,EAAD,KACI,kBAACpL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAK6O,mBAAmBhP,MAAM,UAAUiP,WAAS,GAAE/Q,IAAKC,EAAE,OACjF,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,WACb,EAAKmL,gBAAkB,KACvB,EAAKhJ,SAAS,CAAC+I,OAAQ,GAAIC,gBAAiB,OAC5CpN,IAAKC,EAAE,aAIZ,O,4CAIQ,IAAD,OAClB,OAAIM,KAAKkD,MAAMqQ,iBACH,kBAACzD,GAAA,EAAD,CACJnO,MAAM,EACNwG,SAAS,KACT4H,WAAW,EACXjK,QAAS,kBAAM,EAAKkK,YACpBC,kBAAgB,4BAChBC,mBAAiB,mCAEjB,kBAACC,GAAA,EAAD,CAAalK,GAAG,6BAA6BjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,6BACxE,kBAAC0Q,GAAA,EAAD,KACI,2BAAI3Q,IAAKC,EAAE,mBAEf,kBAAC4Q,GAAA,EAAD,KACI,kBAACpL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKkK,YAAYrK,MAAM,UAAUiP,WAAS,GAAE/Q,IAAKC,EAAE,OAC1E,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKmC,SAAS,CAAC0P,iBAAkB,OAAO9T,IAAKC,EAAE,aAIvE,O,0CAIM,IAAD,OAChB,OAAIM,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAU,GACVC,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAACF,EAAU5J,GACb,EAAKuE,SAAS,CAAC0E,cAAc,IAE7B,EAAKhJ,MAAMiE,OAAOC,UAAUyF,GACvBvF,MAAK,SAAA1B,GACF,GAAIA,EAAK,CACL,IAAM3C,EAAOwF,IAAM6J,qBAAqB1M,EAAK,KAAM,CAAC2M,SAAUnP,IAAKgP,gBACnE3J,IAAM8K,gBAAgB3N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgB0K,QAAQ,UAAW,UAAMyF,OAAWA,EAAW,EAAKtQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAChL,EAAKE,WAAWrM,EAAIlC,KACpB,EAAKgU,gBAAkB9R,EAAIlC,IAEvB,EAAKmD,MAAMyQ,cAAgB1R,EAAIlC,MAC/B,EAAK8D,SAAS,CAAC8P,YAAa1R,EAAIlC,MAChC,EAAK6T,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGP,EAAKrU,MAAMiE,OAAO8B,UAAUrD,EAAIlC,IAAKkC,GAChC0B,MAAK,kBAAM,EAAK4K,eAAetM,EAAIlC,QACnCwF,OAAM,SAAAC,GAAG,OAAI,EAAK3B,SAAS,CAACmC,QAASR,YAE1C,EAAK3B,SAAS,CAACmC,QAASvG,IAAKC,EAAE,sBAM5C,O,sCAOX,IAFA,IAAMgL,EAAS1K,KAAKkD,MAAMwH,OAAO+N,cAC3BzZ,EAAS,GACN8O,EAAI,EAAGA,EAAI9N,KAAKkD,MAAMsQ,QAAQzF,OAAQD,IACvC9N,KAAKkD,MAAMwH,SAAwE,IAA9D1K,KAAKkD,MAAMsQ,QAAQ1F,GAAGxO,KAAKmZ,cAAc5N,QAAQH,IAC1E1L,EAAOgM,KAAKhL,KAAK0Y,aAAa1Y,KAAKkD,MAAMsQ,QAAQ1F,GAAIA,IAEzD,OAAQ,yBAAK1H,IAAI,cAAcpF,UAAWhB,KAAKT,MAAM0B,QAAQ0P,WAAY3R,K,+BAGnE,IAAD,OACL,OAAIgB,KAAKkD,MAAM+J,QACH,kBAACwD,GAAA,EAAD,CAAmBrK,IAAI,kBAI/B,0BAAMA,IAAI,QAAQpF,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAC5C,kBAAC1F,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,MAAQ,kBAAC,QAAD,OAC/I,kBAAClH,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAC/E9F,QAAS,kBAAM,EAAK+R,QAAO,IAAOhM,SAAUzH,KAAKkD,MAAMuQ,QAASzT,KAAKkD,MAAMuQ,OAAU,kBAAChD,GAAA,EAAD,CAAkBnP,KAAM,KAAW,kBAAC,YAAD,OAE9H,kBAACqH,EAAA,EAAD,CACIgQ,YAAalZ,IAAKC,EAAE,UACpBsB,UAAWhB,KAAKkD,MAAMwH,OACtBtG,MAAOpE,KAAKkD,MAAMwH,OAClBrG,SAAU,SAAAvF,GAAC,OAAI,EAAK+E,SAAS,CAAC6G,OAAQ5L,EAAEN,OAAO4F,WAEnD,kBAAC+B,EAAA,EAAD,CAAY3E,aAAW,QAAQR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC6G,OAAQ,OAAM,kBAAC,UAAD,CAAW8E,SAAS,WACpIxP,KAAK4Y,gBACL5Y,KAAK6Q,gBACL7Q,KAAK8Q,mBACL9Q,KAAKuJ,oBACLvJ,KAAK6Y,2B,GA5hBKpW,aA6iBZC,gBAxrBA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPoF,OAAQ,QAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,GACbwF,OAAQ,OACR2I,SAAU,UAEdJ,UAAW,CACPvI,OAAQ,oBACR2I,SAAU,OACV7I,SAAU,KAEdwC,OAAQ,CACJpG,OAAQ,GAEZkD,OAAQ,CACJ5E,YAAa,IAEjB6U,cAAe,CACX7U,YAAa,IAEjBkW,eAAgB,CACZ9H,SAAU,WACVC,MAAO,EACPC,IAAK,GAETgH,YAAa,CACTlH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXkH,cAAe,CACXnH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEX6G,YAAa,GAGbN,cAAc,CACVnV,QAAS,eACTgG,cAAe,SACfrF,MAAO,IAEXsV,SAAU,CACNnH,UAAW,UAEflC,gBAAgB,CACZkC,UAAW,UAEfoG,QAAS,CACLnP,OAAQ,GACRpF,MAAO,OACPgO,SAAU,YAEd+G,mBAAoB,CAChB1V,QAAS,QACT8O,UAAW,SACX3B,SAAU,IAEdiH,eAAgB,CACZtF,UAAW,SACX3B,SAAU,GACVuJ,YAAa,GACb1W,QAAS,gBAEb4V,gBAAiB,CACbjH,SAAU,WACVE,IAAK,EACL8H,KAAM,GAEVtC,mBAAoB,CAChB1T,MAAO,IAEX6U,iBAAkB,CACdxV,QAAS,eACTW,MAAO,sBAEX0N,aAAc,CACV5B,WAAYnM,EAAMyO,QAAQC,QAAQC,MAClCvO,QAAS,GACTxB,MAAOoB,EAAMyO,QAAQC,QAAQE,cAEjC6F,YAAa,CACTjG,UAAW,UAEfmE,WAAY,CACRtS,MAAO,IAGXwT,WAAY,CACRxF,SAAU,WACV5I,OAAQ,IAEZwO,eAAgB,CACZtN,WAAY,EACZzG,UAAW,GACXqF,SAAU,IACV7F,QAAS,eACTmN,SAAU,GACVuJ,YAAa,IAGjBY,cAAgB,CACZnK,SAAU,GACV2B,UAAW,SACX9O,QAAS,eACTiH,WAAY,IAEhBuQ,gBAAkB,CACd1I,UAAW,SACX9O,QAAS,QACTd,MAAO,QAEXkU,eAAgB,CACZnM,WAAY,GAEhB0N,iBAAkB,CACdhG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPlO,QAAS,GAEbkW,eAAgB,CACZjI,SAAU,WACVE,IAAK,GACLD,MAAO,GACPlO,QAAS,GAEb6S,oBAAqB,CACjB/S,UAAW,MAijBJH,CAAmB2W,I,u6BChuBlC,IAAMW,GAAa,CACfC,IAAKC,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAY5a,EAAZ,CAAmB4a,IAAKA,QACxDC,MAAOF,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAW5a,EAAX,CAAkB4a,IAAKA,QACzDE,MAAOH,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAW5a,EAAX,CAAkB4a,IAAKA,QACzDG,OAAQJ,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAmB5a,EAAnB,CAA0B4a,IAAKA,QAClEI,YAAaL,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAkB5a,EAAlB,CAAyB4a,IAAKA,QACtEK,KAAMN,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAU5a,EAAV,CAAiB4a,IAAKA,QACvDM,OAAQP,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAa5a,EAAb,CAAoB4a,IAAKA,QAC5DO,OAAQR,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAgB5a,EAAhB,CAAuB4a,IAAKA,QAC/DQ,UAAWT,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAe5a,EAAf,CAAsB4a,IAAKA,QACjES,SAAUV,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAc5a,EAAd,CAAqB4a,IAAKA,QAC/DU,SAAUX,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAkB5a,EAAlB,CAAyB4a,IAAKA,QACnEW,aAAcZ,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAiB5a,EAAjB,CAAwB4a,IAAKA,QACtEY,YAAab,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAW5a,EAAX,CAAkB4a,IAAKA,QAC/Da,OAAQd,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAY5a,EAAZ,CAAmB4a,IAAKA,QAC3Dc,UAAWf,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAiB5a,EAAjB,CAAwB4a,IAAKA,QACnEe,gBAAiBhB,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAY5a,EAAZ,CAAmB4a,IAAKA,QACpEgB,WAAYjB,sBAAW,SAAC3a,EAAO4a,GAAR,OAAgB,kBAAC,KAAD,iBAAgB5a,EAAhB,CAAuB4a,IAAKA,SAKjEiB,G,YACF,WAAY7b,GAAQ,IAAD,8BACf,4CAAMA,KAED2D,MAAQ,CACT2J,gBAAiB,GACjBD,OAAQ,GACRyG,eAAgB,GAChBC,SAAU,GAEV/K,cAAc,EACdgL,iBAAkB,GAClBvG,QAAS,GACTwG,QAAS,GACTxN,QAAS,GACT0E,OAAQ,GACRuC,SAAS,EACTwG,QAAQ,EACRC,SAAU,GACVC,YAAa,GACb0H,QAAS,CACL,CAAExZ,MAAO,KAAMyZ,MAAO,KAAOC,SAAU,QAAYC,UAAW,CAC1DrT,SAAU,QACV4I,SAAU,SACV0K,UAAW,cAEf,CAAE5Z,MAAO,aAAcyZ,MAAO,kBAC9B,CAAEzZ,MAAO,OAAQyZ,MAAO,OAAUI,OAAQ,CACtC,+BAAgC,0BAChC,oCAAqC,gBACrC,mCAAoC,eACpC,8BAA+B,SAC/B,8BAA+B,SAC/B,8BAA+B,SAC/B,8BAA+B,SAC/B,oCAAqC,eACrC,+BAAgC,UAChC,kCAAmC,aACnC,4BAA6B,OAC7B,6BAA8B,QAC9B,2BAA4B,MAC5B,iCAAkC,YAClC,8BAA+B,SAC/B,4BAA6B,OAC7B,8BAA+B,SAC/B,4BAA6B,OAC7B,8BAA+B,SAC/B,6BAA8B,QAC9B,4BAA6B,OAC7B,2BAA4B,MAC5B,iCAAkC,YAClC,8BAA+B,SAC/B,4BAA6B,OAC7B,+BAAgC,UAChC,oCAAqC,eACrC,6BAA8B,QAC9B,sCAAuC,kBACvC,8BAA+B,SAC/B,+BAAgC,UAChC,8BAA+B,SAC/B,+BAAgC,UAChC,iCAAkC,YAClC,8BAA+B,SAC/B,kCAAmC,aACnC,8BAA+B,SAC/B,6BAA8B,QAC9B,8BAA+B,SAC/B,mCAAoC,eACpC,8BAA+B,WAEnC,CAAE7Z,MAAO,iBAAkByZ,MAAO,gBAAmBI,OAAQ,CAEzD,mCAAmC,aAEnC,iDAAiD,2BACjD,iDAAiD,mBAEjD,iCAAiC,WAGjC,mCAAmC,aACnC,8BAA8B,QAC9B,8BAA8B,QAC9B,kCAAkC,YAElC,8BAA8B,QAE9B,kCAAkC,YAClC,sEAAsE,eACtE,qEAAqE,kBACrE,0DAA0D,kBAC1D,yEAAyE,qBACzE,wEAAwE,wBACxE,qEAAqE,4BAErE,gCAAgC,UAChC,+BAA+B,WAGnC,CAAE7Z,MAAO,aAAcyZ,MAAO,oBAAwBE,UAAW,CAC7DrT,SAAU,QACV4I,SAAU,SACV0K,UAAW,aAEfE,cAAe,SAAApc,GAAK,OAChB,8BAAUqc,KAAK,KAAKC,KAAK,KACvBzX,MAAO7E,EAAM6E,MACbC,SAAU,SAAAvF,GAAC,OAAIS,EAAM8E,SAASvF,EAAEN,OAAO4F,YAG7C,CAAEvC,MAAO,OAAQyZ,MAAO,WAAYC,SAAU,SAC9C,CAAE1Z,MAAO,cAAeyZ,MAAO,YAAaC,SAAU,QAAQC,UAAW,CACrErT,SAAU,OACV4I,SAAU,SACV0K,UAAW,gBAKvB,EAAK7H,aAAe,KACpB,EAAKC,YAAc,KACnB,EAAKC,iBAAmB,EACxB,EAAKjH,gBAAkB,GAEvB,EAAKkH,gBAAkB,KACvB,EAAKC,mBAAqB,EAAKC,cAAcjK,KAAnB,iBAC1B,EAAKkK,oBAAsB,EAAKC,eAAenK,KAApB,iBAE3B,EAAKzK,MAAMiE,OAAOC,UAAlB,yBAA8C,EAAKlE,MAAMmE,YAAzD,YAAwE,EAAKnE,MAAMU,WAAY0D,MAAK,SAAA1B,GAChG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAChGjB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOyE,SAAaZ,GAAUA,EAAMa,KAGjE,EAAK0P,SAFL,EAAK5P,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAA6BuN,SAAS,EAAOuG,QAAS,WAlIlF,E,oEA0IZY,GAAa,IAAD,OACXC,KAAKC,MAAQtU,KAAKuU,WAAa,MACnCvU,KAAKuU,WAAaF,KAAKC,MACnBF,EACApU,KAAK6D,SAAS,CAACoJ,SAAS,EAAMwG,QAAQ,IAEtCzT,KAAK6D,SAAS,CAAC4P,QAAQ,IAE3Be,QAAQC,IAAI,gBACZzU,KAAK6T,YAAcrF,YAAW,WAC1BgG,QAAQC,IAAI,mBACZ,EAAKZ,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKvQ,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMiE,OAAOqK,OAAO7N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,WAAY,MAAM,SAAAiK,GAC3F,EAAK2J,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KACf,EAAKE,kBACA,EAAKxE,OAAO,EAAKwE,gBAAiB7J,IACnC,EAAKrG,SAAS,CAACmC,QAASvG,IAAKC,EAAE,0BAA2B,EAAKqU,mBAEnE,EAAKA,gBAAkB,MAE3BS,QAAQC,IAAI,oBAEZ,EAAK5Q,SAAS,CAAC2P,QAAStJ,EAAM+C,SAAS,EAAOD,QAAS,GAAIyG,QAAQ,U,oCAI7DxN,EAAI/C,GAAQ,IAAD,OACrBsR,QAAQC,IAAR,iBAAsBxO,EAAtB,YAA4B/C,EAAQA,EAAMa,IAAM,IAAMb,EAAMiC,IAAM,SAC9DjC,IAAuB,IAAdA,EAAMiC,MAA8B,IAAdjC,EAAMa,MACjC/D,KAAK2U,UAAUD,aAAa1U,KAAK2U,UACrC3U,KAAK2U,SAAWnG,YAAW,WACvB,EAAKmG,SAAW,KAChB,EAAKlB,WACN,O,qCAIIvQ,GACXA,IAAuB,IAAdA,EAAMiC,KAAgBjC,EAAMa,KAAO/D,KAAK6D,SAAS,CAACmC,QAAS9C,EAAMa,Q,2CAI1E/D,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,kBAAmGD,KAAKgU,oBACxGhU,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKkU,uB,6CAI9GlU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,kBAAqGD,KAAKgU,oBAC1GhU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKkU,qBAC5GlU,KAAK4T,eACLc,aAAa1U,KAAK4T,cAClB5T,KAAK4T,aAAe,Q,qCAIb3N,GACXjG,KAAKT,MAAMiE,OAAOqK,OAAO7N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAUgG,K,iCAGhFA,EAAI2O,GACX,IAAM5H,EAAU9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,WACxB,IAAzBA,EAAQnC,QAAQ5E,IAChB+G,EAAQhC,KAAK/E,GACbjG,KAAK6D,SAAS,CAACmJ,YAAU,kBAAM4H,GAAMA,QAErCA,GAAMA,M,oCAIA3O,GACV,IAAM+G,EAAU9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,UAC/CpC,EAAMoC,EAAQnC,QAAQ5E,IAEf,IAAT2E,IACAoC,EAAQlC,OAAOF,EAAK,GACpB5K,KAAK6D,SAAS,CAACmJ,e,6BAIf/G,EAAIuN,GAAU,IAAD,OAEXqB,GADNrB,EAAUA,GAAWxT,KAAKkD,MAAMsQ,SACTxF,MAAK,SAAA8G,GAAG,OAAIA,EAAI7O,KAAOA,KAC9C,QAAI4O,IACA7U,KAAKT,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GACF,IAAIgM,EAAY4G,EAAOxV,OAAO4O,UAAc4G,EAAOxV,OAAO4O,UAAa4G,EAAO9U,IACrD,kBAAdkO,GAA0BA,IACjCA,EAAYA,EAAUxO,IAAKgP,gBAAkBR,EAAUS,IAE3D,EAAK7B,gBAAkBoB,EACvB,EAAKpK,SAAS,CAAC+I,OAAQ3G,EAAI4G,gBAAiBoB,EAAWoF,eAAgBvO,IAAM6J,qBAAqB1M,EAAK,KAAM,CAAC2M,SAAUnP,IAAKgP,sBAE9H,K,iCAMH,IAAD,OACHxI,EAAKjG,KAAKkD,MAAMoQ,SAEpBtT,KAAKsO,WAAWrI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAMqJ,iBAAiBlM,EAAK,EAAK1C,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAC3F,EAAK7O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WACF,EAAKE,SAAS,CAACyP,SAAU,GAAIC,kBAAkB,EAAOI,YAAa1N,IAEnE,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKrF,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,uCAO5BS,EAAIhC,GAAO,IAAD,OAEvB,IAAa,IAATA,EAAgB,CAKhB,IAJA,IAAMuR,EAAQ,CACT,kBAAC1M,EAAA,EAAD,CAAU1C,IAAI,IAAIhC,MAAM,IAAG,4BAAK3E,IAAKC,EAAE,aACvC,kBAACoJ,EAAA,EAAD,CAAU1C,IAAI,OAAOhC,MAAM,UAAU3E,IAAKC,EAAE,gBAExCoO,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3B0H,EAAMxK,KAAM,kBAAClC,EAAA,EAAD,CAAW1C,IAAK0H,EAAElO,WAAYwE,MAAO0J,EAAElO,YAAakO,EAApD,MAEhB,OAAQ,kBAACrF,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQwU,gBAC/C,kBAAC/M,EAAA,EAAD,CAAQ1H,UAAWhB,KAAKT,MAAM0B,QAAQyU,qBAAsBtR,OAAQH,GAAQ,IAAIrE,WAAYyE,SAAU,SAAAvF,GAAC,OAAI,EAAK6W,eAAe1P,EAAInH,EAAEN,OAAO4F,SAASoR,GACrJ,kBAACzM,EAAA,EAAD,CAAgB/H,UAAWhB,KAAKT,MAAM0B,QAAQ2U,qBAAsBnW,IAAKC,EAAE,WAG/E,OAAO,O,qCAIAuG,EAAI4P,EAAM5R,GAAO,IAAD,OAC3BjE,KAAKsO,WAAWrI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAYF,OAXA6C,IAAM8K,gBAAgB3N,OAAK4N,EAAWgG,EAAM5R,EAAM,EAAK1E,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAEpH,EAAKlL,MAAMyQ,cAAgB1N,IAC3B,EAAKpC,SAAS,CAAC8P,YAAa1N,IAC5B,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKrU,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK4K,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,uCAK5BsW,EAASC,GAAU,IAAD,OAC/B/b,KAAKsO,WAAWwN,EAAQ7V,IAAI,WACxB,EAAK1G,MAAMiE,OAAOC,UAAUqY,EAAQ7V,IAC/BtC,MAAK,SAAA1B,GAaF,GAXA6C,IAAM8K,gBAAgB3N,EAAK,EAAK4K,qBAAiBgD,OAAWA,EAAW,EAAKtQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UACzIlP,KAAKgB,UAAU4b,EAAQE,iBAAmB9c,KAAKgB,UAAU6b,EAAQC,iBAC5DC,MAAMC,QAAQJ,EAAQE,iBACvBF,EAAQE,cAAc,CAACF,EAAQE,gBAGnC/Z,EAAI5C,OAAO4O,UAAUkO,SAAWL,EAAQE,eAExCF,EAAQ7X,OAAS8X,EAAQ9X,OACzBhC,EAAI5C,OAAO4O,UAAUmO,OAASN,EAAQ7X,MAEtC6X,EAAQO,oBAAsBN,EAAQM,kBAAoB,CAC1Dpa,EAAI5C,OAAO4O,UAAUqO,aAAeR,EAAQO,kBAC5C,IACOpa,EAAI5C,OAAO4O,UAAUqO,cACxBpd,KAAKC,MAAM8C,EAAI5C,OAAO4O,UAAUqO,cAElC,MAAOC,GACL,EAAK1Y,SAAS,CAACmC,QAASvG,IAAKC,EAAE,8CAGvC,OAAO,EAAKH,MAAMiE,OAAO8B,UAAUwW,EAAQ7V,GAAIhE,MAElD0B,MAAK,WAEF,EAAK4K,eAAeuN,EAAQ7V,OAE/BV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,sCAK5B,IAAD,OACZ,OAAIxF,KAAKkD,MAAM8C,QACH,kBAAC,IAAD,CAAeM,KAAMtG,KAAKkD,MAAM8C,QAASF,QAAS,kBAAM,EAAKjC,SAAS,CAACmC,QAAS,QAEjF,O,sCAIClH,GAAI,IAAD,OACfA,GAAKA,EAAEuZ,iBAEPrY,KAAKsO,WAAWtO,KAAKkD,MAAM0J,QAAQ,WAC/B,IAAM3G,EAAK,EAAK/C,MAAM0J,OACtB,EAAK/I,SAAS,CAAC+I,OAAQ,GAAIyG,eAAgB,GAAIM,YAAa1N,IAE5D,EAAK2N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKrU,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAM8K,gBAAgB3N,EAAK,EAAK4K,qBAAiBgD,OAAWA,EAAW,EAAKtQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UACtI,EAAK7O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK4K,eAAetI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,0CAIxB,IAAD,OAChB,OAAIxF,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAU,GACVC,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAACF,GACH,EAAKrF,SAAS,CAAC0E,cAAc,IAE7B,EAAKhJ,MAAMiE,OAAOC,UAAUyF,GACvBvF,MAAK,SAAA1B,GACF,GAAIA,EAAK,CACL,IAAM3C,EAAOwF,IAAM6J,qBAAqB1M,EAAK,KAAM,CAAC2M,SAAUnP,IAAKgP,gBACnE3J,IAAM8K,gBAAgB3N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgB0K,QAAQ,UAAW,UAAMyF,OAAWA,EAAW,EAAKtQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOgP,UAChL,EAAKE,WAAWrM,EAAIlC,KACpB,EAAKgU,gBAAkB9R,EAAIlC,IAEvB,EAAKmD,MAAMyQ,cAAgB1R,EAAIlC,MAC/B,EAAK8D,SAAS,CAAC8P,YAAa1R,EAAIlC,MAChC,EAAK6T,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK3K,SAAS,CAAC8P,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAEP3R,EAAI5C,OAAO4O,UAAUmO,OAAO,6BAC5B,EAAK7c,MAAMiE,OAAO8B,UAAUrD,EAAIlC,IAAKkC,GAChC0B,MAAK,WACF,EAAK4K,eAAetM,EAAIlC,KACxB,EAAK8D,SAAS,CAACmC,QAASvG,IAAKC,EAAE,uEAClC6F,OAAM,SAAAC,GAAG,OAAI,EAAK3B,SAAS,CAACmC,QAASR,YAE1C,EAAK3B,SAAS,CAACmC,QAASvG,IAAKC,EAAE,sBAM5C,O,+BAML,IAAD,OACL,OAAIM,KAAKkD,MAAM+J,QACH,kBAACwD,GAAA,EAAD,CAAmBrK,IAAI,kBAI/B,0BAAMA,IAAI,KAAKpF,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KACzC,kBAAC1F,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,MAAQ,kBAAC,QAAD,OAC/I,kBAAClH,EAAA,EAAD,CACAe,MAAQ,CAACkH,WAAW,QAAShI,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OACvG9F,QAAS,kBAAM,EAAK+R,QAAO,IAAOhM,SAAUzH,KAAKkD,MAAMuQ,QAASzT,KAAKkD,MAAMuQ,OAAU,kBAAChD,GAAA,EAAD,CAAkBnP,KAAM,KAAW,kBAAC,YAAD,OAG7HtB,KAAK6Q,gBACL7Q,KAAKuJ,oBACN,yBAAKnH,MAAO,CAACS,UAAU,OAAOR,QAAS,SACvC,yBAAKD,MAAO,CAAEoa,KAAM,QAAQ,yBAAKpa,MAAO,CAACwF,WAAW,SAAxB,cAC5B,yBAAKxF,MAAO,CAACS,UAAU,SAASD,YAAY,WAAanD,IAAKC,EAAE,0NAGhE,yBAAK0C,MAAO,CAAEoa,KAAM,QAAQ,yBAAKpa,MAAO,CAACwF,WAAW,SAAxB,gBAC5B,8BAAO9C,IAAMC,gBAAgBtF,IAAKC,EAAE,iJACpC,8BAAOoF,IAAMC,gBAAgBtF,IAAKC,EAAE,iaACpC,mCAASoF,IAAMC,gBAAgBtF,IAAKC,EAAE,oMAItC,6BACA,kBAAC,KAAD,CACA0C,MAAQ,CAACS,UAAU,OAAOR,QAAS,gBACnCR,MAAM,GACNwZ,QAASrb,KAAKkD,MAAMmY,QACpBoB,KAAMzc,KAAKkD,MAAMsQ,QACjBkJ,MAAO1C,GACP2C,UAAW3c,KAAKkD,MAAMuQ,OACtBjL,QAAS,CACLoU,oBAAqB,EACrBC,QAAQ,GAGZtB,SAAU,CAENuB,YAAa,SAAChB,EAASC,GAOvB,OANQE,MAAMC,QAAQJ,EAAQxc,KAAKyd,aAC3BjB,EAAQxc,KAAKyd,UAAYjB,EAAQxc,KAAKyd,UAAUhS,KAAK,MAEzD,EAAK8B,gBAAkBiP,EAAQxc,KAAKyd,UACpC,EAAKlZ,SAAS,CAAC+I,OAAQkP,EAAQ7V,KAE5B,IAAIb,SAAQ,SAAAC,GACf,EAAKxB,SAAS,CAAC4P,QAAO,IACtBjF,YAAW,WACHsN,EAAQ7X,MAAS6X,EAAQE,eACzB,EAAKnY,SAAS,CAACmC,QAASvG,IAAKC,EAAE,oEAGvC,EAAKsd,iBAAiBlB,EAASC,GAC/B1W,IACA,IAAMmO,EAAO,aAAO,EAAKtQ,MAAMsQ,SAC/BA,EAAQA,EAAQ3I,QAAQkR,IAAYD,EACpC,EAAKjY,SAAL,MAAmB,EAAKX,MAAxB,CAA+BsQ,eAC5B,SAEPyJ,YAAa,SAAClB,GAgBd,MAdyB,MAArBA,EAAQmB,UACR,EAAKrZ,SAAS,CAACyP,SAAUyI,EAAQ9V,KAEjC,EAAK1G,MAAMiE,OAAOC,UAAUsY,EAAQ9V,IACnCtC,MAAK,SAAA1B,GAOF,OANIA,EAAI5C,OAAJ,mBACO4C,EAAI5C,OAAJ,0BACA4C,EAAI5C,OAAJ,wBACA4C,EAAI5C,OAAJ,wBAGJ,EAAKE,MAAMiE,OAAO8B,UAAUyW,EAAQ9V,GAAIhE,MAGhD,IAAImD,SAAQ,SAAAC,GACfmJ,YAAW,WACH,EAAKtL,MAAMoQ,SACX,EAAK1H,WAGT,EAAK2C,eAAewN,EAAQ9V,IAE5BZ,IACA,IAAMmO,EAAO,aAAO,EAAKtQ,MAAMsQ,SAC/BA,EAAQ1I,OAAO0I,EAAQ3I,QAAQkR,GAAU,GACzC,EAAKlY,SAAL,MAAmB,EAAKX,MAAxB,CAA+BsQ,eAChC,kB,GAjhBI/Q,aAuiBhBC,gBAziBA,iBAAO,KAyiBPA,CAAmB0Y,I,+NCjlBlC,IAcM+B,G,YACF,WAAY5d,GAAQ,oBAChB,IAAM6d,E,2WAAa,IAAO7d,GADX,OAEf6d,EAAcC,gBAAkB,CAAC,QACjCD,EAAcE,aAAe,CACzB,GAAMC,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,QAASA,EAAQ,MAbN,0CAeTH,I,8EAIN,IAAMrW,EAAM/G,KAAKkD,MAAMsa,YACvB,OAAKzW,GAAe,YAARA,EAGA,UAARA,EACO,EAEC,UAARA,EACO,EAEC,WAARA,EAEO,GADS/G,KAAKkD,MAAM9D,OAAOqe,YAAc,EAAI,GAG5C,UAAR1W,EAEO,IADS/G,KAAKkD,MAAM9D,OAAOqe,YAAc,EAAI,IAAMzd,KAAKkD,MAAM9D,OAAOiI,WAAa,EAAI,IAGrF,aAARN,EAEO,IADS/G,KAAKkD,MAAM9D,OAAOqe,YAAc,EAAI,IAAMzd,KAAKkD,MAAM9D,OAAOiI,WAAa,EAAI,IAAMrH,KAAKkD,MAAM9D,OAAOse,YAAc,EAAI,IAG/H,aAAR3W,EAEO,IADS/G,KAAKkD,MAAM9D,OAAOqe,YAAc,EAAI,IAAMzd,KAAKkD,MAAM9D,OAAOiI,WAAa,EAAI,IAAMrH,KAAKkD,MAAM9D,OAAOse,YAAc,EAAI,SAD3I,EApBW,I,+BA0BL,IAAD,OACL,OAAK1d,KAAKkD,MAAMya,OAKZ,yBAAK3c,UAAU,OACX,kBAAC4c,EAAA,EAAD,CAAQ5M,SAAS,UACb,kBAAC6M,EAAA,EAAD,CAAMzZ,MAAOpE,KAAK8d,iBAAkBzZ,SAAU,SAACvF,EAAGif,GAAJ,OAAc,EAAKC,UAAUlf,EAAEN,OAAOyf,WAAWC,QAAQ5e,KAAMye,KACzG,kBAACI,EAAA,EAAD,CAAKha,MAAO1E,IAAKC,EAAE,WAAY0e,YAAU,YACzC,kBAACD,EAAA,EAAD,CAAKha,MAAO1E,IAAKC,EAAE,eAAgB0e,YAAU,UAC5Cpe,KAAKkD,MAAM9D,OAAOqe,aAAe,kBAACU,EAAA,EAAD,CAAKjV,SAAqC,UAA3BlJ,KAAKkD,MAAMsa,YAAyBrZ,MAAO1E,IAAKC,EAAE,iBAAkB0e,YAAU,UAC9Hpe,KAAKkD,MAAM9D,OAAOiI,YAAc,kBAAC8W,EAAA,EAAD,CAAKjV,SAAqC,WAA3BlJ,KAAKkD,MAAMsa,YAA0BrZ,MAAO1E,IAAKC,EAAE,kBAAmB0e,YAAU,WAC/Hpe,KAAKkD,MAAM9D,OAAOse,aAAe,kBAACS,EAAA,EAAD,CAAKjV,SAAqC,UAA3BlJ,KAAKkD,MAAMsa,YAAyBrZ,MAAO1E,IAAKC,EAAE,iBAAkB0e,YAAU,UAC/H,kBAACD,EAAA,EAAD,CAAKha,MAAO1E,IAAKC,EAAE,oBAAqB0e,YAAU,aAClD,kBAACD,EAAA,EAAD,CAAKha,MAAO1E,IAAKC,EAAE,sBAAuB0e,YAAU,eAI5D,yBAAKpd,UAAWhB,KAAKqe,SAAWre,KAAKT,MAAM0B,QAAQqd,iBAAmBte,KAAKT,MAAM0B,QAAQsd,aACxD,YAA3Bve,KAAKkD,MAAMsa,cAA8Bxd,KAAKkD,MAAMsa,cAAiB,kBAAC,EAAD,CACnEpX,IAAI,UACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3C3G,OAAQ,SAAAP,GAAM,OAAI,EAAKof,aAAapf,IACpCa,SAAUD,KAAKC,SACfyD,YAAa1D,KAAK0D,YAClBW,SAAU,SAACL,EAAMI,EAAOwQ,GAAd,OAAqB,EAAK6J,kBAAkBza,EAAMI,EAAOwQ,MAE3C,UAA3B5U,KAAKkD,MAAMsa,aAA4B,kBAAC,GAAD,CACpCpX,IAAI,QACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3CrG,SAAUD,KAAKC,SACfyD,YAAa1D,KAAK0D,cAEM,UAA3B1D,KAAKkD,MAAMsa,aAA4B,kBAAC,GAAD,CACpCpX,IAAI,QACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3C5C,YAAa1D,KAAK0D,YAClBzD,SAAUD,KAAKC,WAEa,WAA3BD,KAAKkD,MAAMsa,aAA6B,kBAAC,GAAD,CACzCpX,IAAI,SACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3C5C,YAAa1D,KAAK0D,YAClBzD,SAAUD,KAAKC,WAES,UAA3BD,KAAKkD,MAAMsa,aAA4B,kBAAC,GAAD,CACpCpX,IAAI,QACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3C5C,YAAa1D,KAAK0D,YAClBzD,SAAUD,KAAKC,WAES,aAA3BD,KAAKkD,MAAMsa,aAA+B,kBAAC,GAAD,CACvCpX,IAAI,WACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3CrG,SAAUD,KAAKC,SACfyD,YAAa1D,KAAK0D,YAClBW,SAAU,SAACL,EAAMI,GAAP,OAAiB,EAAKqa,kBAAkBza,EAAMI,MAEhC,aAA3BpE,KAAKkD,MAAMsa,aAA+B,kBAAC,GAAD,CACvCpX,IAAI,WACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3CrG,SAAUD,KAAKC,SACfyD,YAAa1D,KAAK0D,YAClBgb,YAAa,SAAAnC,GAAK,OAAI,EAAKhS,UAAUgS,IACrClY,SAAU,SAACL,EAAMI,GAAP,OAAiB,EAAKqa,kBAAkBza,EAAMI,OAG/DpE,KAAK2e,cACL3e,KAAK4e,0BAxFF,kBAAC,IAAD,CAAQjc,MAAO3C,KAAKkD,MAAM2b,gB,GAlD5BC,KAgJHpc,gBA9JA,SAAAC,GAAK,MAAK,CACrBoc,KAAM,GACNR,WAAY,CACRxb,QAAS,GACTqF,OAAQ,kCACR2I,SAAU,QAEduN,iBAAkB,CACdvb,QAAS,GACTqF,OAAQ,yCACR2I,SAAU,WAoJHrO,CAAmBya,ICnKd6B,QACW,cAA7BrgB,OAAOsgB,SAASC,UAEe,UAA7BvgB,OAAOsgB,SAASC,UAEhBvgB,OAAOsgB,SAASC,SAAS1R,MACvB,2D,yBCTF7K,GAAQ,SAEZ,SAASwc,IACL,OAAOC,IAASC,OAAO,kBAAC,IAAD,CAAkB1c,MAAO2c,KAAY3c,KACxD,kBAAC,GAAD,CAAK4c,cAAe,SAAAC,GAChB7c,GAAQ6c,EACRL,QAEa3e,SAASif,eAAe,SAIjDN,GD4GM,kBAAmBO,WACrBA,UAAUC,cAAcC,MAAMjc,MAAK,SAAAkc,GACjCA,EAAaC,kB","file":"static/js/main.6f08add8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from './Logo';\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            forceUserCreate: false,\n            showHint: false,\n            toast: '',\n            isInstanceAlive: false,\n        };\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts() {\n        this.setState({inAction: true});\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (this.state.forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    onForceUserCreate() {\n        this.setState({forceUserCreate: !this.state.forceUserCreate, showHint: !this.state.forceUserCreate});\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderHint() {\n        if (this.state.showHint) {\n            return (<Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Logo\n                    instance={this.props.instance}\n                    common={this.props.common}\n                    native={this.props.native}\n                    onError={text => this.setState({errorText: text})}\n                    onLoad={this.props.onLoad}\n                />\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnSettings}>\n                    {this.renderInput('ioBroker.pro Login', 'login')}<br/>\n                    {this.renderInput('ioBroker.pro Password', 'pass', 'password')}<br/>\n                    {this.renderCheckbox('Amazon Alexa', 'amazonAlexa', {marginTop: 10})}<br/>\n                    <FormControlLabel key=\"googleHome\" style={{paddingTop: 5}} className={this.props.classes.controlElement}\n                        control={\n                          <Checkbox\n                              checked={this.props.native.googleHome}\n                              onChange={() => {\n                                  // activate alexa if google home is on (temporary)\n                                  const newVal = !this.props.native.googleHome;\n                                  this.props.onChange('googleHome', newVal, () =>\n                                      newVal && this.props.onChange('amazonAlexa', true));\n                              }}\n                              color=\"primary\"\n                          />\n                        }\n                        label={I18n.t('Google Home')}\n                    />\n                    {/*this.renderCheckbox('Google Home', 'googleHome', {marginTop: 10})*/}<br/>\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa', {marginTop: 10})}<br/>\n                    <br/>\n                    <Button variant=\"outlined\"\n                            className={this.props.classes.button}\n                            disabled={this.state.inAction || !this.state.isInstanceAlive}\n                            title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                            onClick={() => this.resetCerts()}>\n                        <IconReload/>{I18n.t('Get new connection certificates')}\n                    </Button>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.forceUserCreate}\n                                onChange={() => this.onForceUserCreate()}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Request email with password one more time')}\n                    />\n                    <p style={{fontWeight: 'bold'}}>{Utils.renderTextWithA(I18n.t('help_tip'))}</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard()}</div>\n                {this.renderHint()}\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={this.props.native[attr]}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport CopyContentImg from '@iobroker/adapter-react/assets/copy-content.svg';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout api-secret')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.calcNightscoutSecret()}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />) : null}\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + state.val + '/' + state.ack);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        if (this.state.changed.indexOf(id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    }\n                }\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRGB = '#ff7ee3';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        minWidth: 100,\n        display: 'inline-block',\n        fontSize: 13,\n        paddingLeft: 70,\n        //width: 'calc(100% - 400px)'\n    },\n    devSubSubLine:  {\n        fontSize: 10,\n        fontStyle: 'italic',\n        display: 'inline-block',\n        marginLeft: 15\n    },\n    devSubLineSetId:  {\n        fontStyle: 'italic',\n        display: 'block',\n        color: '#999'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlisaDevices extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        console.log('Send BROWSE!');\n\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.iobID === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.name;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName:smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'OnOff') return -1;\n            if (b === 'OnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].name);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        const id = dev.main.getId;\n        const name = dev.func;\n        let background = DEFAULT_CHANNEL_COLOR;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n            background = LAST_CHANGED_COLOR;\n        }*/\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\n            <div className={classes.devSubSubLine}>\n                <div>{dev.main.getId}</div>\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\n            </div>\n\n        </div>));\n\n        dev.attributes.forEach(attr => {\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\n                <div className={classes.devSubSubLine}>\n                    <div>{attr.getId}</div>\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\n                </div>\n            </div>));\n        });\n\n        /*if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n        }*/\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (dev.iobID === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        //const isComplex = dev.\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {dev.attributes.length ?\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\n\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlisaDevices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlisaDevices);\n","import React, {Component, forwardRef} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\n\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n \nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nconst styles = () => ({})\n\nclass GoogleSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: '',\n            columns: [\n                { title: 'Id', field: 'id' , editable: 'never' ,   cellStyle: {\n                    maxWidth: \"12rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  }},\n                { title: 'Smartnames', field: 'name.nicknames' },\n                { title: 'Type', field: 'type' ,  lookup: { \n                    \"action.devices.types.AC_UNIT\": 'Air conditioning unit\t', \n                    \"action.devices.types.AIRFRESHENER\": 'Air Freshener' ,\n                    \"action.devices.types.AIRPURIFIER\": 'Air purifier' ,\n                    \"action.devices.types.AWNING\": 'Awning' ,\n                    \"action.devices.types.BLINDS\": 'Blinds' ,\n                    \"action.devices.types.BOILER\": 'Boiler' ,\n                    \"action.devices.types.CAMERA\": 'Camera' ,\n                    \"action.devices.types.COFFEE_MAKER\": 'Coffee maker' ,\n                    \"action.devices.types.CURTAIN\": 'Curtain' ,\n                    \"action.devices.types.DISHWASHER\": 'Dishwasher' ,\n                    \"action.devices.types.DOOR\": 'Door' ,\n                    \"action.devices.types.DRYER\": 'Dryer' ,\n                    \"action.devices.types.FAN\": 'Fan' ,\n                    \"action.devices.types.FIREPLACE\": 'Fireplace' ,\n                    \"action.devices.types.GARAGE\": 'Garage' ,\n                    \"action.devices.types.GATE\": 'Gate' ,\n                    \"action.devices.types.HEATER\": 'Heater' ,\n                    \"action.devices.types.HOOD\": 'Hood' ,\n                    \"action.devices.types.KETTLE\": 'Kettle' ,\n                    \"action.devices.types.LIGHT\": 'Light' ,\n                    \"action.devices.types.LOCK\": 'Lock' ,\n                    \"action.devices.types.MOP\": 'Mop' ,\n                    \"action.devices.types.MICROWAVE\": 'Microwave' ,\n                    \"action.devices.types.OUTLET\": 'Outlet' ,\n                    \"action.devices.types.OVEN\": 'Oven' ,\n                    \"action.devices.types.PERGOLA\": 'Pergola' ,\n                    \"action.devices.types.REFRIGERATOR\": 'Refrigerator' ,\n                    \"action.devices.types.SCENE\": 'Scene' ,\n                    \"action.devices.types.SECURITYSYSTEM\": 'Security System' ,\n                    \"action.devices.types.SENSOR\": 'Sensor' ,\n                    \"action.devices.types.SHUTTER\": 'Shutter' ,\n                    \"action.devices.types.SHOWER\": 'Shower' ,\n                    \"action.devices.types.SPEAKER\": 'Speaker' ,\n                    \"action.devices.types.SPRINKLER\": 'Sprinkler' ,\n                    \"action.devices.types.SWITCH\": 'Switch' ,\n                    \"action.devices.types.THERMOSTAT\": 'Thermostat' ,\n                    \"action.devices.types.VACUUM\": 'Vacuum' ,\n                    \"action.devices.types.VALVE\": 'Valve' ,\n                    \"action.devices.types.WASHER\": 'Washer' ,\n                    \"action.devices.types.WATERHEATER\": 'Water heater' ,\n                    \"action.devices.types.WINDOW\": 'Window' \n                }},\n                { title: 'Funktion/Trait', field: 'displayTraits' ,  lookup: { \n                    // \"action.devices.traits.ArmDisarm\":'ArmDisarm',\n                    \"action.devices.traits.Brightness\":'Brightness',\n                    // \"action.devices.traits.CameraStream\":'CameraStream',\n                    \"action.devices.traits.ColorSetting_temperature\":'ColorSetting_Temperature',\n                    \"action.devices.traits.ColorSetting_spectrumRGB\":'ColorSetting_RGB',\n                    // \"action.devices.traits.Dock\":'Dock',\n                    \"action.devices.traits.FanSpeed\":'FanSpeed',\n                    // \"action.devices.traits.LightEffects\":'LightEffects',\n                    // \"action.devices.traits.Locator\":'Locator',\n                    \"action.devices.traits.LockUnlock\":'LockUnlock',\n                    \"action.devices.traits.Modes\":'Modes',\n                    \"action.devices.traits.OnOff\":'OnOff',\n                    \"action.devices.traits.OpenClose\":'OpenClose',\n                    // \"action.devices.traits.RunCycle\":'RunCycle',\n                    \"action.devices.traits.Scene\":'Scene',\n                    // \"action.devices.traits.Sensor\":'Sensor',\n                    \"action.devices.traits.StartStop\":'StartStop',\n                    \"action.devices.traits.TemperatureControl_temperatureSetpointCelsius\":'Oven_SetTemp',\n                    \"action.devices.traits.TemperatureControl_temperatureAmbientCelsius\":'Oven_StatusTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatMode\":'Thermostat_Mode',\n                    \"action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint\":'Thermostat_SetTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient\":'Thermostat_StatusTemp',\n                    \"action.devices.traits.TemperatureSetting_thermostatHumidityAmbient\":'Thermostat_StatusHumidity',\n                    // \"action.devices.traits.Timer\":'Timer',\n                    \"action.devices.traits.Toggles\":'Toggles',\n                    \"action.devices.traits.Volume\":'Volume',\n                    }},\n\n                { title: 'Attributes', field: 'displayAttributes' ,   cellStyle: {\n                    maxWidth: \"12rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  },  \n                editComponent: props => (\n                    <textarea cols=\"40\" rows=\"20\"\n                      value={props.value}\n                      onChange={e => props.onChange(e.target.value)}\n                    />\n                  )},\n                { title: 'Room', field: 'roomHint', editable: 'never' },\n                { title: 'Automatisch', field: 'smartEnum', editable: 'never',cellStyle: {\n                    maxWidth: \"3rem\",\n                    overflow: \"hidden\",\n                    wordBreak: \"break-all\"\n                  } },\n              ]\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 10);\n        }\n    }\n\n    onResultUpdate(state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n     onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.common.smartName  ?  device.common.smartName  : device._id;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n\n   \n\n    renderSelectByOn(id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    \n    onGHParamsChange(newData, oldData) {\n        this.addChanged(newData.id, () => {\n            this.props.socket.getObject(newData.id)\n                .then(obj => {\n                  //  id, newData.type, newData.displayTraits, newData.displayAttributes\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\n                        if (!Array.isArray(newData.displayTraits)) {\n                            newData.displayTraits=[newData.displayTraits]\n                        }\n\n                        obj.common.smartName.ghTraits = newData.displayTraits;\n                    }\n                    if (newData.type !== oldData.type) {\n                        obj.common.smartName.ghType = newData.type;\n                    }\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\n                        obj.common.smartName.ghAttributes = newData.displayAttributes\n                        try {\n                            if(obj.common.smartName.ghAttributes) {\n                            JSON.parse(obj.common.smartName.ghAttributes)\n                        }\n                        } catch (error) {\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')})\n                        }\n                    }\n                    return this.props.socket.setObject(newData.id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(newData.id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n   \n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n                                obj.common.smartName.ghType=\"action.devices.types.LIGHT\"\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => {\n                                        this.informInstance(obj._id);\n                                        this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});})\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    \n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"gh\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab \n                style ={{marginLeft:\"1rem\"}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n            \n                {this.renderMessage()}\n                {this.getSelectIdDialog()}\n                <div style={{marginTop:\"4rem\",display: \"flex\"}}>\n                <div style={{ flex: \"50%\"}}><div style={{fontWeight:\"bold\"}}> Auto Mode</div>\n                <div style={{marginTop:\"0.8rem\",marginRight:\"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\n              \n                </div>\n                <div style={{ flex: \"50%\"}}><div style={{fontWeight:\"bold\"}}>Manuell Mode</div>\n                <span>{Utils.renderTextWithA(I18n.t(\"Please select a  <a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/guides/'>TYPE</a> and a\"))}</span>\n                <span>{Utils.renderTextWithA(I18n.t(\"<a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/traits/' > TRAIT</a> after adding a state.   To add multiple traits add a different id and trait but same smartname, type and room. Comma separated for mutiple smartnames.  To assign a room please use the ioBroker Enums/Aufzählungen.  With attributes you can for example set a range for the color temperature \"))}</span>\n                <span>  {Utils.renderTextWithA(I18n.t(\"<a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/traits/colorsetting'> Infos about Attributes you can find here.</a> Empty attribute is {}\"))}</span>\n                </div>\n                </div>\n                \n                <div>\n                <MaterialTable\n                style ={{marginTop:\"1rem\",display: \"inline-block\"}}\n                title=\"\"\n                columns={this.state.columns}\n                data={this.state.devices}\n                icons={tableIcons}\n                isLoading={this.state.browse }\n                options={{\n                    actionsColumnIndex: -1,\n                    paging: false\n                  }}\n               \n                editable={{\n                  \n                    onRowUpdate: (newData, oldData) => {\n                        if (Array.isArray(newData.name.nicknames)) {\n                            newData.name.nicknames = newData.name.nicknames.join(\",\");\n                        }\n                        this.editedSmartName = newData.name.nicknames\n                        this.setState({editId: newData.id});\n                       \n                    return new Promise(resolve => {\n                        this.setState({browse:true})\n                        setTimeout(() => {\n                            if(!newData.type || !newData.displayTraits) {\n                                this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});\n                            }\n                        \n                        this.onGHParamsChange(newData, oldData);\n                        resolve();\n                        const devices = [...this.state.devices];\n                        devices[devices.indexOf(oldData)] = newData;\n                        this.setState({ ...this.state, devices });\n                        }, 500);\n                    })},\n                    onRowDelete: (oldData) => {\n                    // if smartenum set smartname on false if not delete/reset smartname content\n                    if (oldData.smartEnum=== \"X\") {\n                        this.setState({deleteId: oldData.id});\n                    } else {\n                        this.props.socket.getObject(oldData.id)\n                        .then(obj => {\n                            if (obj.common[\"smartName\"]) {\n                                delete obj.common[\"smartName\"][\"ghTraits\"]\n                                delete obj.common[\"smartName\"][\"ghType\"]\n                                delete obj.common[\"smartName\"][\"ghAttributes\"]\n                            }\n                            \n                            return this.props.socket.setObject(oldData.id, obj);\n                        })\n                    }\n                    return new Promise(resolve => {\n                        setTimeout(() => {\n                            if (this.state.deleteId) {\n                                this.onDelete();\n                            } else {\n\n                            this.informInstance(oldData.id);\n                            }\n                            resolve();\n                            const devices = [...this.state.devices];\n                            devices.splice(devices.indexOf(oldData), 1);\n                            this.setState({ ...this.state, devices });\n                        }, 600);\n                    })\n                    }\n                }}\n                /></div>\n\n            </form>\n        );\n    }\n}\n\nGoogleSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GoogleSmartNames);\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport TabOptions from './Tabs/Options';\nimport TabExtended from './Tabs/Extended';\nimport TabServices from './Tabs/Services';\nimport TabEnums from './Tabs/Enums';\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = {...props};\n        extendedProps.encryptedFields = ['pass'];\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n        super(extendedProps);\n    }\n\n    getSelectedTab() {\n        const tab = this.state.selectedTab;\n        if (!tab || tab === 'options') {\n            return 0;\n        } else\n        if (tab === 'enums') {\n            return 1;\n        } else\n        if (tab === 'alexa') {\n            return 2;\n        } else\n        if (tab === 'google') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\n            return 2 + offset;\n        }\n        if (tab === 'alisa') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'extended') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'services') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 3 + offset;\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return (<Loader theme={this.state.themeType}/>);\n        }\n\n        return (\n            <div className=\"App\">\n                <AppBar position=\"static\">\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\n                    </Tabs>\n                </AppBar>\n\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\n                        key=\"options\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        onLoad={native => this.onLoadConfig(native)}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                    />)}\n                    {this.state.selectedTab === 'enums' && (<TabEnums\n                        key=\"enums\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                    />)}\n                    {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\n                        key=\"alexa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                        {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\n                        key=\"google\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\n                        key=\"alisa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'extended' && (<TabExtended\n                        key=\"extended\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                    {this.state.selectedTab === 'services' && (<TabServices\n                        key=\"services\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onShowError={error => this.showError(error)}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                </div>\n                {this.renderError()}\n                {this.renderSaveCloseButtons()}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createTheme from '@iobroker/adapter-react/createTheme';\n\nlet theme = 'light';\n\nfunction build() {\n    return ReactDOM.render(<MuiThemeProvider theme={createTheme(theme)}>\n        <App onThemeChange={_theme => {\n            theme = _theme;\n            build();\n        }}/>\n    </MuiThemeProvider>, document.getElementById('root'));\n}\n\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}