{"version":3,"sources":["Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Logo","evt","f","target","files","r","window","FileReader","onload","e","contents","result","json","JSON","parse","native","common","name","props","onError","I18n","t","onLoad","toString","readAsText","alert","_id","this","instance","stringify","news","titleLang","desc","generateFile","input","document","createElement","setAttribute","addEventListener","handleFileSelect","click","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","title","upload","download","filename","obj","el","encodeURIComponent","style","display","body","appendChild","removeChild","Component","withStyles","theme","marginRight","marginTop","float","padding","width","Options","state","inAction","forceUserCreate","showHint","toast","isInstanceAlive","socket","getObject","adapterName","then","getState","setState","enabled","val","attr","type","TextField","label","value","onChange","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","ack","Promise","resolve","setObject","catch","err","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","IconButton","key","close","text","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","errorText","column","columnSettings","renderInput","renderCheckbox","googleHome","newVal","variant","button","disabled","resetCerts","onForceUserCreate","fontWeight","columnLogo","renderCard","renderHint","renderToast","minHeight","minWidth","maxWidth","height","verticalAlign","ExtendedOptions","showSelectId","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","prefix","connection","selected","statesOnly","onOk","renderSelect","marginLeft","getSelectIdDialog","marginBottom","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","getAdapterInstances","list","nsList","replace","subscribeState","unsubscribeState","showError","chips","split","filter","a","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","readOnly","copyToClipboard","CopyContentImg","renderChips","text2command","nightscout","normalSize","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","changed","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","match","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","i","length","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","fontSize","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","helperText","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","fontStyle","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","actions","sort","b","Icon","actionIcon","lineNum","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","channels","names","types","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","nameModified","devModified","devCount","ch","error","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","placeholder","renderDevices","renderConfirmDialog","devLineEnabled","left","devSubLineEdit","OnOff","Brightness","RGB","AlisaDevices","iobID","main","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","GoogleSmartNames","myTableRef","React","createRef","columns","field","editable","cellStyle","wordBreak","lookup","editComponent","cols","rows","newData","oldData","displayTraits","Array","isArray","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","flex","tableRef","onRowClick","rowData","current","onTreeExpandChanged","tableData","path","parentChildData","row","element","parentId","data","icons","isLoading","actionsColumnIndex","paging","rowStyle","smartEnum","ioType","selectedRow","backgroundColor","onRowUpdate","nicknames","onGHParamsChange","onRowDelete","App","extendedProps","encryptedFields","translations","require","port","parseInt","location","isNaN","protocol","selectedTab","amazonAlexa","yandexAlisa","loaded","AppBar","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","themeType","GenericApp","root","Boolean","hostname","localStorage","getItem","version","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","createTheme","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"m3rIAuBMA,E,+KAeeC,GAAM,IAAD,OACZC,EAAID,EAAIE,OAAOC,MAAM,GAC3B,GAAIF,EAAG,CACH,IAAMG,EAAI,IAAIC,OAAOC,WACrBF,EAAEG,OAAS,SAAAC,GACP,IAAMC,EAAWD,EAAEN,OAAOQ,OAC1B,IACI,IAAMC,EAAOC,KAAKC,MAAMJ,GACpBE,EAAKG,QAAUH,EAAKI,OAChBJ,EAAKI,OAAOC,OAAS,EAAKC,MAAMF,OAAOC,KACvC,EAAKC,MAAMC,QAAQC,IAAKC,EAAE,cAAeT,EAAKI,OAAOC,OAErD,EAAKC,MAAMI,OAAOV,EAAKG,QAG3B,EAAKG,MAAMC,QAAQC,IAAKC,EAAE,kBAEhC,MAAOZ,GACL,EAAKS,MAAMC,QAAQV,EAAEc,cAG7BlB,EAAEmB,WAAWtB,QAEbuB,MAAM,8B,iCAKV,IAAMd,EAAS,CACXe,IAAK,kBAAoBC,KAAKT,MAAMF,OAAOC,KAAO,IAAMU,KAAKT,MAAMU,SACnEZ,OAAQH,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKT,MAAMF,SAC7CD,OAAQY,KAAKT,MAAMH,QAGnBJ,EAAOK,OAAOc,aACPnB,EAAOK,OAAOc,KAErBnB,EAAOK,OAAOe,kBACPpB,EAAOK,OAAOe,UAErBpB,EAAOK,OAAOgB,aACPrB,EAAOK,OAAOgB,KAIzBhC,EAAKiC,aAAatB,EAAOe,IAAM,QAASf,K,+BAGlC,IAAD,OACCuB,EAAQ5B,OAAO6B,SAASC,cAAc,SAC5CF,EAAMG,aAAa,OAAQ,QAC3BH,EAAMG,aAAa,KAAM,SACzBH,EAAMG,aAAa,UAAW,GAC9BH,EAAMI,iBAAiB,UAAU,SAAA7B,GAAC,OAAI,EAAK8B,iBAAiB9B,GAAG,kBAAW,GACzEyB,EAAMM,U,+BAGD,IAAD,OACL,OAAQ,6BACHb,KAAKT,MAAMF,OAAOyB,MAAS,yBAAKC,IAAKf,KAAKT,MAAMF,OAAOyB,KAAME,UAAWhB,KAAKT,MAAM0B,QAAQC,KAAMC,IAAI,SACrGnB,KAAKT,MAAMF,OAAO+B,QACd,kBAACC,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASC,QAAS,WACrF/C,OAAOgD,KAAK,EAAKpC,MAAMF,OAAO+B,OAAQ,UAC9CQ,UACL,kBAAC,gBAAD,OACP,kBAACP,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,cAAcR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASI,MAAOpC,IAAKC,EAAE,gCAAiCgC,QAAS,kBAAM,EAAKI,WAAU,kBAAC,eAAD,OAC/K,kBAACT,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,cAAcR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASI,MAAOpC,IAAKC,EAAE,8BAA+BgC,QAAS,kBAAM,EAAKK,aAAY,kBAAC,iBAAD,W,oCA/EnKC,EAAUC,GAC1B,IAAMC,EAAKvD,OAAO6B,SAASC,cAAc,KACzCyB,EAAGxB,aAAa,OAAQ,uCAAyCyB,mBAAmBjD,KAAKgB,UAAU+B,EAAK,KAAM,KAC9GC,EAAGxB,aAAa,WAAYsB,GAE5BE,EAAGE,MAAMC,QAAU,OACnB1D,OAAO6B,SAAS8B,KAAKC,YAAYL,GAEjCA,EAAGrB,QAEHlC,OAAO6B,SAAS8B,KAAKE,YAAYN,O,GAZtBO,aA8FJC,eA1GA,SAAAC,GAAK,MAAK,CACrBlB,QAAS,CACLmB,YAAa,EACbC,UAAW,EACXC,MAAO,SAEX5B,KAAM,CACF6B,QAAS,EACTC,MAAO,OAkGAN,CAAmBrE,G,kBC9D5B4E,E,kDACF,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IAED2D,MAAQ,CACTC,UAAU,EACVC,iBAAiB,EACjBC,UAAU,EACVC,MAAO,GACPC,iBAAiB,GAGrB,EAAKhE,MAAMiE,OAAOC,UAAlB,yBAA8C,EAAKlE,MAAMmE,YAAzD,YAAwE,EAAKnE,MAAMU,WAAY0D,MAAK,SAAA1B,GAAG,OACnG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAAK,OAC1G,EAAKW,SAAS,CAACN,gBAAiBtB,GAAOA,EAAI5C,QAAU4C,EAAI5C,OAAOyE,SAAWZ,GAASA,EAAMa,YAbnF,E,wDAiBPlC,EAAOmC,EAAMC,GAAO,IAAD,OAC3B,OAAQ,kBAACC,EAAA,EAAD,CACJC,MAAO1E,IAAKC,EAAEmC,GACdb,UAAWhB,KAAKT,MAAM0B,QAAQV,MAC9B6D,MAAOpE,KAAKT,MAAMH,OAAO4E,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAASL,EAAMlF,EAAEN,OAAO4F,QAClDE,OAAO,a,mCAKX,OAAQ,kBAACC,EAAA,EAAD,CAAMvD,UAAWhB,KAAKT,MAAM0B,QAAQuD,MACxC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI1D,UAAWhB,KAAKT,MAAM0B,QAAQ0D,MAC9BC,MAAM,gBACN/C,MAAM,eAEV,kBAACgD,EAAA,EAAD,KAAcC,IAAMC,gBAAgBtF,IAAKC,EAAE,kBAE/C,kBAACsF,EAAA,EAAD,CAAa5C,MAAO,CAAC6C,UAAW,WAC5B,kBAACC,EAAA,EAAD,CAAQ5D,KAAK,QAAQC,MAAM,UAAUa,MAAO,CAAC6C,UAAW,UAAWvD,QAAS,WAC5D/C,OAAOgD,KAAK,qEAAsE,UAC1FC,UACJnC,IAAKC,EAAE,e,mCAKT,IAAD,OACTM,KAAK6D,SAAS,CAACV,UAAU,IACzBnD,KAAKT,MAAMiE,OAAOK,SAAS,OAAS7D,KAAKT,MAAMU,SAAW,iBAAkB,CAAC8D,IAAK,GAAIoB,KAAK,IACtFxB,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOK,SAAS,OAAS,EAAKtE,MAAMU,SAAW,YAAa,CAAC8D,IAAK,GAAIoB,KAAK,OACjGxB,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOK,SAAS,OAAS,EAAKtE,MAAMU,SAAW,gBAAiB,CAAC8D,IAAK,GAAIoB,KAAK,OACrGxB,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOK,SAAS,OAAS,EAAKtE,MAAMU,SAAW,qBAAsB,CAAC8D,IAAK,GAAIoB,KAAK,OAC1GxB,MAAK,WACF,OAAI,EAAKT,MAAME,gBACJ,EAAK7D,MAAMiE,OAAOK,SAAS,OAAS,EAAKtE,MAAMU,SAAW,yBAA0B,CAAC8D,KAAK,EAAMoB,KAAK,IAErGC,QAAQC,aAItB1B,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOC,UAAU,sBAAwB,EAAKlE,MAAMU,aAC1E0D,MAAK,SAAA1B,GACF,OAAKA,GAAQA,EAAI5C,QAAW4C,EAAI5C,OAAOyE,QAK5B,EAAKvE,MAAMiE,OAAO8B,UAAU,sBAAwB,EAAK/F,MAAMU,SAAUgC,GAHzEmD,QAAQC,aAMtB1B,MAAK,kBAAM,EAAKE,SAAS,CAACP,MAAO7D,IAAKC,EAAE,iDACxC6F,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,MAChC7B,MAAK,kBAAM,EAAKE,SAAS,CAACV,UAAU,S,0CAIzCnD,KAAK6D,SAAS,CAACT,iBAAkBpD,KAAKkD,MAAME,gBAAiBC,UAAWrD,KAAKkD,MAAME,oB,oCAGxE,IAAD,OACV,OAAKpD,KAAKkD,MAAMI,MAEZ,kBAACmC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBjE,MAAM,EACNkE,iBAAkB,IAClBC,QAAS,kBAAM,EAAKjC,SAAS,CAACP,MAAO,MACrCyC,aAAc,CACV,mBAAoB,cAExBC,QAAS,0BAAMC,GAAG,cAAcjG,KAAKkD,MAAMI,OAC3C4C,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJ5E,aAAW,QACXD,MAAM,UACNP,UAAWhB,KAAKT,MAAM0B,QAAQoF,MAC9B3E,QAAS,kBAAM,EAAKmC,SAAS,CAACP,MAAO,OAErC,kBAAC,UAAD,UAtBc,O,mCA4BpB,IAAD,OACT,OAAItD,KAAKkD,MAAMG,SACH,kBAAC,IAAD,CAASiD,KAAM7G,IAAKC,EAAE,+EAAgFoG,QAAS,kBAAM,EAAKjC,SAAS,CAACR,UAAU,OAE/I,O,qCAIAxB,EAAOmC,EAAM5B,GAAQ,IAAD,OAC/B,OAAQ,kBAACmE,EAAA,EAAD,CAAkBH,IAAKpC,EAAM5B,MAAOoE,OAAOC,OAAO,CAACC,WAAY,GAAItE,GAAQpB,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eAC3GC,QACI,kBAACC,EAAA,EAAD,CACIC,QAAS9G,KAAKT,MAAMH,OAAO4E,GAC3BK,SAAU,kBAAM,EAAK9E,MAAM8E,SAASL,GAAO,EAAKzE,MAAMH,OAAO4E,KAC7DzC,MAAM,YAGd4C,MAAO1E,IAAKC,EAAEmC,O,+BAId,IAAD,OACL,OACI,0BAAMb,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAChC,kBAAC,EAAD,CACI9G,SAAUD,KAAKT,MAAMU,SACrBZ,OAAQW,KAAKT,MAAMF,OACnBD,OAAQY,KAAKT,MAAMH,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,UAAWV,KAC3C3G,OAAQK,KAAKT,MAAMI,SAEvB,yBAAKqB,UAAWhB,KAAKT,MAAM0B,QAAQgG,OAAS,IAAMjH,KAAKT,MAAM0B,QAAQiG,gBAChElH,KAAKmH,YAAY,qBAAsB,SAAS,6BAChDnH,KAAKmH,YAAY,wBAAyB,OAAQ,YAAY,6BAC9DnH,KAAKoH,eAAe,eAAgB,cAAe,CAACvE,UAAW,KAAK,6BACrE,kBAAC0D,EAAA,EAAD,CAAkBH,IAAI,aAAahE,MAAO,CAACsE,WAAY,GAAI1F,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eACrFC,QACE,kBAACC,EAAA,EAAD,CACIC,QAAS9G,KAAKT,MAAMH,OAAOiI,WAC3BhD,SAAU,WAEN,IAAMiD,GAAU,EAAK/H,MAAMH,OAAOiI,WAClC,EAAK9H,MAAM8E,SAAS,aAAciD,GAAQ,kBACtCA,GAAU,EAAK/H,MAAM8E,SAAS,eAAe,OAErD9C,MAAM,YAGZ4C,MAAO1E,IAAKC,EAAE,iBAEqD,6BACtEM,KAAKoH,eAAe,wCAAgB,cAAe,CAACvE,UAAW,KAAK,6BACrE,6BACA,kBAACqC,EAAA,EAAD,CAAQqC,QAAQ,WACRvG,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAC9BC,SAAUzH,KAAKkD,MAAMC,WAAanD,KAAKkD,MAAMK,gBAC7C1B,MAAQ7B,KAAKkD,MAAMK,gBAAuD,GAArC9D,IAAKC,EAAE,4BAC5CgC,QAAS,kBAAM,EAAKgG,eACxB,kBAAC,YAAD,MAAcjI,IAAKC,EAAE,oCAEzB,kBAAC6G,EAAA,EAAD,CACIK,QACI,kBAACC,EAAA,EAAD,CACIC,QAAS9G,KAAKkD,MAAME,gBACpBiB,SAAU,kBAAM,EAAKsD,qBACrBpG,MAAM,YAGd4C,MAAO1E,IAAKC,EAAE,+CAElB,uBAAG0C,MAAO,CAACwF,WAAY,SAAU9C,IAAMC,gBAAgBtF,IAAKC,EAAE,cAC9D,uBAAG0C,MAAO,CAACwF,WAAY,OAAQlB,WAAY,KAAM5B,IAAMC,gBAAgBtF,IAAKC,EAAE,oBAC9E,uBAAG0C,MAAO,CAACwF,WAAY,SAAU9C,IAAMC,gBAAgBtF,IAAKC,EAAE,oBAC9D,uBAAG0C,MAAO,CAACwF,WAAY,OAAQrG,MAAO,QAASuD,IAAMC,gBAAgBtF,IAAKC,EAAE,qBAEhF,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQgG,OAAS,IAAMjH,KAAKT,MAAM0B,QAAQ4G,YAAa7H,KAAK8H,cACtF9H,KAAK+H,aACL/H,KAAKgI,mB,GA3LAvF,aA4MPC,eA5OA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPiF,UAAW,QAEf1H,MAAO,CACH2H,SAAU,KAEdV,OAAQ,CACJ5E,YAAa,IAEjB4B,KAAM,CACF2D,SAAU,IACVlD,UAAW,UAEfN,MAAO,CACHyD,OAAQ,KAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,IAEjBiF,WAAY,CACR7E,MAAO,IACPJ,YAAa,GAEjBsE,eAAgB,CACZlE,MAAO,yBAgNAN,CAAmBO,G,+DC3M5BqF,G,kDACF,WAAY/I,GAAQ,IAAD,8BACf,cAAMA,IAED2D,MAAQ,CACTqF,cAAc,GAJH,E,wDASP1G,EAAOmC,EAAMC,GAAO,IAAD,OAC3B,OAAQ,kBAACC,EAAA,EAAD,CACJC,MAAO1E,IAAKC,EAAEmC,GACdb,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAC/DvC,MAAOpE,KAAKT,MAAMH,OAAO4E,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAASL,EAAMlF,EAAEN,OAAO4F,QAClDE,OAAO,a,mCAIFzC,EAAOmC,EAAMwE,EAASpG,GAAQ,IAAD,OACtC,OAAQ,kBAACqG,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAgBvE,MAAOoE,OAAOC,OAAO,CAACC,WAAY,GAAItE,IACtI,kBAACsG,EAAA,EAAD,CACItE,MAAOpE,KAAKT,MAAMH,OAAO4E,IAAS,IAClCK,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAASL,EAAyB,MAAnBlF,EAAEN,OAAO4F,MAAgB,GAAKtF,EAAEN,OAAO4F,QAChF7D,MAAO,kBAACoI,EAAA,EAAD,CAAOrJ,KAAM0E,EAAMiC,GAAIjC,EAAO,aAEpCwE,EAAQI,KAAI,SAAAC,GAAI,OAAK,kBAACC,EAAA,EAAD,CAAU1C,IAAK,OAASyC,EAAKzE,MAAOA,MAAOyE,EAAKzE,OAAS,KAAM3E,IAAKC,EAAEmJ,EAAKhH,YAErG,kBAACkH,EAAA,EAAD,KAAiBtJ,IAAKC,EAAEmC,O,qCAIjBA,EAAOmC,EAAM5B,GAAQ,IAAD,OAC/B,OAAQ,kBAACmE,EAAA,EAAD,CAAkBH,IAAKpC,EAAM5B,MAAOoE,OAAOC,OAAO,CAACC,WAAY,GAAItE,GAAQpB,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eAC7GC,QACI,kBAACC,EAAA,EAAD,CACIC,QAAS9G,KAAKT,MAAMH,OAAO4E,GAC3BK,SAAU,kBAAM,EAAK9E,MAAM8E,SAASL,GAAO,EAAKzE,MAAMH,OAAO4E,KAC7DzC,MAAM,YAGd4C,MAAO1E,IAAKC,EAAEmC,O,wCAIJmC,GAAO,IAAD,OACpB,OAAIhE,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAUlJ,KAAKT,MAAMH,OAAO4E,GAC5BmF,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAAAF,GACF,EAAKrF,SAAS,CAAC0E,cAAc,IAC7B,EAAKhJ,MAAM8E,SAASL,EAAMkF,MAI3B,O,+BAIL,IAAD,OACL,OACI,0BAAMlI,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAC/B/G,KAAKmH,YAAY,YAAa,YAAY,6BAC1CnH,KAAKqJ,aAAa,WAAY,WAAY,CACvC,CAACxH,MAAO,UAAWuC,MAAO,IAC1B,CAACvC,MAAO,UAAWuC,MAAO,MAC1B,CAACvC,MAAO,UAAWuC,MAAO,MAC1B,CAACvC,MAAO,6CAAWuC,MAAO,OAC3B,CAACvB,UAAW,KAAK,6BACnB7C,KAAKoH,eAAe,gCAAiC,gBAAiB,CAACvE,UAAW,KAAK,6BACvF7C,KAAKmH,YAAY,yBAA0B,cAAc,6BACzDnH,KAAKmH,YAAY,mBAAoB,YAAY,6BAClD,yBAAKnG,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eAAgBvE,MAAO,CAACS,UAAW,KACjE7C,KAAKmH,YAAY,8BAA+B,kBACjD,kBAAC4B,EAAA,EAAD,KAAiBtJ,IAAKC,EAAE,wCAE5B,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQ0F,gBAC9B3G,KAAKmH,YAAY,oBAAqB,eACvC,kBAAC9F,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYG,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,KAAQ/G,aAAW,MAAMY,MAAO,CAACkH,WAAY,EAAGzG,UAAW,KAAK,kBAAC,QAAD,OAAiB,8BAErK,yBAAK7B,UAAWhB,KAAKT,MAAM0B,QAAQ0F,gBAC9B3G,KAAKoH,eAAe,+BAAgC,YACrD,kBAAC2B,EAAA,EAAD,KAAiBjE,IAAMC,gBAAgBtF,IAAKC,EAAE,cAA8B,8BAE/EM,KAAKoH,eAAe,gBAAiB,SACrCpH,KAAKuJ,kBAAkB,oB,GA5FV9G,aA4GfC,gBAjJA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPiF,UAAW,QAEf1H,MAAO,CACHsC,UAAW,EACXqF,SAAU,KAEdV,OAAQ,CACJ5E,YAAa,IAEjB4B,KAAM,CACF2D,SAAU,IACVlD,UAAW,UAEfN,MAAO,CACHyD,OAAQ,KAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,IAEjBiF,WAAY,CACR7E,MAAO,IACPJ,YAAa,GAEjBsE,eAAgB,CACZlE,MAAO,sBAEX2D,eAAgB,CAEZ6C,aAAc,MAgHP9G,CAAmB4F,I,wCCjF5BmB,G,kDACF,WAAYlK,GAAQ,IAAD,8BACf,cAAMA,IAED2D,MAAQ,CACTwG,SAAS,EACTpG,MAAO,GACPiF,cAAc,EACdoB,iBAAkB,GAClBC,eAAgB,GAChBC,SAAU,GACVtG,iBAAiB,GAErB,EAAKuG,kBAAoB,EAAKC,aAAaC,KAAlB,iBAEzB,EAAKzK,MAAMiE,OAAOyG,oBAAoB,gBACjCtG,MAAK,SAAAuG,GAAI,OACN,EAAK3K,MAAMiE,OAAOyG,oBAAoB,cACjCtG,MAAK,SAAAwG,GAAM,OAAI,EAAKtG,SAAS,CAC1B+F,eAAgBO,EAAOvB,KAAI,SAAA3G,GAAG,OAAIA,EAAIlC,IAAIqK,QAAQ,6BAA8B,OAChFT,iBAAkBO,EAAKtB,KAAI,SAAA3G,GAAG,OAAIA,EAAIlC,IAAIqK,QAAQ,+BAAgC,eAnBnF,E,iEAuBG,IAAD,OACjBpK,KAAKT,MAAMiE,OAAO6G,eAAe,OAASrK,KAAKT,MAAMU,SAAW,gBAAiBD,KAAK8J,mBAEtF9J,KAAKT,MAAMiE,OAAOC,UAAlB,yBAA8CzD,KAAKT,MAAMmE,YAAzD,YAAwE1D,KAAKT,MAAMU,WAAY0D,MAAK,SAAA1B,GAAG,OACnG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAAK,OAC1G,EAAKW,SAAS,CAACN,gBAAiBtB,GAAOA,EAAI5C,QAAU4C,EAAI5C,OAAOyE,SAAWZ,GAASA,EAAMa,c,6CAIlG/D,KAAKT,MAAMiE,OAAO8G,iBAAiB,OAAStK,KAAKT,MAAMU,SAAW,gBAAiBD,KAAK8J,qB,mCAG/E7D,EAAI/C,GACbA,GAASlD,KAAK6D,SAAS,CAACuC,IAAKlD,EAAMa,Q,kCAG3BlC,EAAOmC,EAAMC,GAAO,IAAD,OAC3B,OAAQ,kBAACC,EAAA,EAAD,CACJC,MAAO1E,IAAKC,EAAEmC,GACdb,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAC/DvC,MAAOpE,KAAKT,MAAMH,OAAO4E,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAASL,EAAMlF,EAAEN,OAAO4F,QAClDE,OAAO,a,sCAIE,IAAD,OAEZ,OADAtE,KAAK6D,SAAS,CAAC6F,SAAS,IACjB1J,KAAKT,MAAMiE,OAAOK,SAAS,OAAS7D,KAAKT,MAAMU,SAAW,gBAAiB,CAAC8D,IAAK,GAAIoB,KAAK,IAC5FxB,MAAK,kBAAM,EAAKpE,MAAMiE,OAAOC,UAAU,sBAAwB,EAAKlE,MAAMU,aAC1E0D,MAAK,SAAA1B,GACF,GAAKA,GAAQA,EAAI5C,QAAW4C,EAAI5C,OAAOyE,QAGnC,OAAO,EAAKvE,MAAMiE,OAAO8B,UAAU,sBAAwB,EAAK/F,MAAMU,SAAUgC,GAFhF,EAAK4B,SAAS,CAAC6F,SAAS,EAAOpG,MAAO7D,IAAKC,EAAE,wCAKpDiE,MAAK,kBAAM,EAAKE,SAAS,CAAC6F,SAAS,EAAOpG,MAAO7D,IAAKC,EAAE,6DACxD6F,OAAM,SAAAC,GACH,EAAK3B,SAAS,CAAC6F,SAAS,IACxB,EAAKnK,MAAMgL,UAAU/E,Q,oCAIlB,IAAD,OACV,OAAKxF,KAAKkD,MAAMI,MAEZ,kBAACmC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBjE,MAAM,EACNkE,iBAAkB,IAClBC,QAAS,kBAAM,EAAKjC,SAAS,CAACP,MAAO,MACrCyC,aAAc,CACV,mBAAoB,cAExBC,QAAS,0BAAMC,GAAG,cAAcjG,KAAKkD,MAAMI,OAC3C4C,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJ5E,aAAW,QACXD,MAAM,UACNP,UAAWhB,KAAKT,MAAM0B,QAAQoF,MAC9B3E,QAAS,kBAAM,EAAKmC,SAAS,CAACP,MAAO,OAErC,kBAAC,UAAD,UAtBc,O,oCA4BpBU,EAAMI,GAChB,IAAMoG,GAASxK,KAAKT,MAAMH,OAAO4E,IAAS,IAAIyG,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,KACtEC,EAAMJ,EAAMK,QAAQzG,IACb,IAATwG,IACAJ,EAAMM,OAAOF,EAAK,GAClB5K,KAAKT,MAAM8E,SAASL,EAAMwG,EAAMO,KAAK,S,iCAIlC/G,GAAO,IAAD,OACPwG,GAASxK,KAAKT,MAAMH,OAAO4E,IAAS,IAAIyG,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,MAE/D,IADDH,EAAMK,QAAQ7K,KAAKkD,MAAM2G,YAEjCW,EAAMQ,KAAKhL,KAAKkD,MAAM2G,UACtB7J,KAAK6D,SAAS,CAACgG,SAAU,KAAK,kBAAM,EAAKtK,MAAM8E,SAASL,EAAMwG,EAAMO,KAAK,Y,6CAK7E,IAAME,EAAQjL,KAAKT,MAAMH,OAAO8L,MAAMd,QAAQ,aAAc,KACtDe,EAASnL,KAAKT,MAAMH,OAAOgM,eACjC,OAAOH,GAASE,EAAS,IAAMA,EAAS,M,wCAG1BnH,GAAO,IAAD,OACpB,OAAIhE,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAUlJ,KAAKT,MAAMH,OAAO4E,GAC5BmF,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAAAF,GACF,EAAKrF,SAAS,CAAC0E,cAAc,IAC7B,EAAKhJ,MAAM8E,SAASL,EAAMkF,MAI3B,O,kCAIH/E,EAAOH,GAAO,IAAD,OACrB,OAAQ,yBAAKhD,UAAWhB,KAAKT,MAAM0B,QAAQoK,UACvC,kBAACtC,EAAA,EAAD,KAAiBjE,IAAMC,gBAAgBtF,IAAKC,EAAEyE,KAC9C,kBAACD,EAAA,EAAD,CACIC,MAAO1E,IAAKC,EAAE,eACd0C,MAAO,CAACY,MAAO,KACfiB,KAAM,OACNG,MAAOpE,KAAKkD,MAAM2G,SAClByB,QAAS,SAAAxM,GAAC,OAAkB,KAAdA,EAAEyM,SAAkB,EAAKC,WAAWxH,IAClDK,SAAU,SAAAvF,GAAC,OAAI,EAAK+E,SAAS,CAACgG,SAAU/K,EAAEN,OAAO4F,MAAMqH,UACvDnH,OAAO,WAGX,kBAACjD,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYkG,UAAWzH,KAAKkD,MAAM2G,SAAUnI,QAAS,kBAAM,EAAK8J,WAAWxH,IAAO5B,MAAO,CAACkH,WAAY,EAAGzG,WAAY,KAAK,kBAAC,QAAD,OAElJ,yBAAK7B,UAAWhB,KAAKT,MAAM0B,QAAQuJ,QAC7BxK,KAAKT,MAAMH,OAAO4E,IAAS,IAAIyG,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,KAC9D/B,KAAI,SAAA8C,GAAI,OACJ,kBAACC,GAAA,EAAD,CACGvF,IAAKsF,EACLpK,KAAK,QACL6C,MAAOuH,EACPE,SAAU,kBAAM,EAAKC,cAAc7H,EAAM0H,IACzC1K,UAAW,EAAKzB,MAAM0B,QAAQ6K,c,+BAMxC,IAAD,OACL,OACI,0BAAM9K,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAChC,kBAAC7B,EAAA,EAAD,CACIqC,QAAQ,WACRE,UAAWzH,KAAKkD,MAAMK,iBAAmBvD,KAAKkD,MAAMwG,QACpDnI,MAAM,UACNM,MAAQ7B,KAAKkD,MAAMK,gBAAuD,GAArC9D,IAAKC,EAAE,4BAC5CgC,QAAS,kBAAM,EAAKqK,kBACpB,kBAAC,YAAD,MAAgBtM,IAAKC,EAAE,4BAClB,6BAERM,KAAKmH,YAAY,YAAa,YAAY,6BAE3C,kBAACjD,EAAA,EAAD,CACI9B,MAAO,CAACS,UAAW,IACnBsB,MAAO1E,IAAKC,EAAE,gCACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAiB,IAAM3G,KAAKT,MAAM0B,QAAQ+K,SACzG5H,MAAK,sEAAiEpE,KAAKkD,MAAMkD,IAA5E,iBAAwFjE,mBAAmBnC,KAAKT,MAAMH,OAAO8L,QAClIjH,KAAK,OACLgI,UAAU,EACV3H,OAAO,WAEX,kBAACjD,EAAA,EAAD,CAAKC,KAAK,QAAQc,MAAO,CAACS,UAAW,GAAIyG,WAAY,GAAI5H,QAAS,kBAAMoD,IAAMoH,gBAAN,sEAAqF,EAAKhJ,MAAMkD,IAAhG,iBAA4GjE,mBAAmB,EAAK5C,MAAMH,OAAO8L,WAAY,yBAAKnK,IAAKoL,KAAgBhL,IAAI,UAAe,6BAClR,6BAECnB,KAAKoM,YAAY,0BAA2B,mBAAmB,6BAEhE,kBAAClI,EAAA,EAAD,CACI9B,MAAO,CAACS,UAAW,IACnBsB,MAAO1E,IAAKC,EAAE,yCACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAiB,IAAM3G,KAAKT,MAAM0B,QAAQ+K,SACzG5H,MAAK,sFAAiFpE,KAAKkD,MAAMkD,IAA5F,iBAAwGjE,mBAAmBnC,KAAKT,MAAMH,OAAO8L,OAA7I,qBACLjH,KAAK,OACLgI,UAAU,EACV3H,OAAO,WAEX,kBAACjD,EAAA,EAAD,CAAKC,KAAK,QAAQc,MAAO,CAACS,UAAW,GAAIyG,WAAY,GAAI5H,QAAS,kBAAMoD,IAAMoH,gBAAN,sFAAqG,EAAKhJ,MAAMkD,IAAhH,iBAA4HjE,mBAAmB,EAAK5C,MAAMH,OAAO8L,OAAjK,wBAA6L,yBAAKnK,IAAKoL,KAAgBhL,IAAI,UAAe,6BAElT,kBAACsH,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAgBvE,MAAO,CAACsE,WAAY,KAC5G,kBAACgC,EAAA,EAAD,CACItE,MAAOpE,KAAKT,MAAMH,OAAOiN,cAAgB,IACzChI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAAS,eAAmC,MAAnBvF,EAAEN,OAAO4F,MAAgB,GAAKtF,EAAEN,OAAO4F,QAC1F7D,MAAO,kBAACoI,EAAA,EAAD,CAAOrJ,KAAK,eAAe2G,GAAG,yBAErC,kBAAC6C,EAAA,EAAD,CAAU1C,IAAI,cAAchC,MAAO,KAAM3E,IAAKC,EAAE,aAC/CM,KAAKkD,MAAMyG,iBAAiBf,KAAI,SAAAC,GAAI,OAAK,kBAACC,EAAA,EAAD,CAAU1C,IAAK,OAASyC,EAAMzE,MAAOyE,GAArC,gBAAyDA,OAEvG,kBAACE,EAAA,EAAD,KAAiBtJ,IAAKC,EAAE,+BAE5B,6BACA,kBAAC+I,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAgBvE,MAAO,CAACsE,WAAY,KAC5G,kBAACgC,EAAA,EAAD,CACItE,MAAOpE,KAAKT,MAAMH,OAAOkN,YAAc,IACvCjI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAAS,aAAiC,MAAnBvF,EAAEN,OAAO4F,MAAgB,GAAKtF,EAAEN,OAAO4F,QACxF7D,MAAO,kBAACoI,EAAA,EAAD,CAAOrJ,KAAK,aAAa2G,GAAG,uBAEnC,kBAAC6C,EAAA,EAAD,CAAU1C,IAAI,cAAchC,MAAO,KAAM3E,IAAKC,EAAE,aAC/CM,KAAKkD,MAAM0G,eAAehB,KAAI,SAAAC,GAAI,OAAK,kBAACC,EAAA,EAAD,CAAU1C,IAAK,OAASyC,EAAMzE,MAAOyE,GAArC,cAAuDA,OAEnG,kBAACE,EAAA,EAAD,KAAiBtJ,IAAKC,EAAE,6BAE3BM,KAAKT,MAAMH,OAAOkN,WAAc,kBAACpI,EAAA,EAAD,CAC7B9B,MAAO,CAACS,UAAW,KACnBsB,MAAO1E,IAAKC,EAAE,uBACd2E,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAAS,iBAAkBvF,EAAEN,OAAO4F,MAAMgG,QAAQ,aAAc,OAC1FpJ,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAAiB,IAAM3G,KAAKT,MAAM0B,QAAQsL,WACzGnI,MAAOpE,KAAKT,MAAMH,OAAOgM,eACzBnH,KAAK,OACLK,OAAO,WACL,KACN,6BACA,6BACA,yBAAKtD,UAAWhB,KAAKT,MAAM0B,QAAQ0F,gBAC/B,kBAACzC,EAAA,EAAD,CACIC,MAAO1E,IAAKC,EAAE,yBACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQ0F,eAC/DvC,MAAOpE,KAAKT,MAAMH,OAAOoN,kBAAoB,GAC7CvI,KAAK,OACLI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAAS,mBAAoBvF,EAAEN,OAAO4F,QAChEE,OAAO,WAEX,kBAACjD,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYG,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,KAAQ/G,aAAW,MAAMY,MAAO,CAACkH,WAAY,EAAGzG,UAAW,KAAK,kBAAC,QAAD,OAChJ,kBAAC0D,EAAA,EAAD,CAAmBvF,UAAWhB,KAAKT,MAAM0B,QAAQ0F,eAC7CC,QACI,kBAACC,EAAA,EAAD,CACIzE,MAAO,CAACqK,YAAa,IACrB3F,QAAS9G,KAAKT,MAAMH,OAAOsN,8BAA+B,EAC1DrI,SAAU,SAAAvF,GAAC,OAAI,EAAKS,MAAM8E,SAAS,8BAA+BvF,EAAEN,OAAOsI,UAC3EvF,MAAM,YAGd4C,MAAO1E,IAAKC,EAAE,mCAGtB,6BACCM,KAAKgI,cACLhI,KAAKuJ,kBAAkB,yB,GA3QjB9G,aA6RRC,gBAtVA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPiF,UAAW,QAEf1H,MAAO,CACHsC,UAAW,EACXqF,SAAU,KAEd8D,SAAU,CACNhJ,MAAO,qBAEXuJ,WAAY,CACRvJ,MAAO,mBACPsG,WAAY,IAEhB9B,OAAQ,CACJ5E,YAAa,IAEjB4B,KAAM,CACF2D,SAAU,IACVlD,UAAW,UAEfN,MAAO,CACHyD,OAAQ,KAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,IAEjBiF,WAAY,CACR7E,MAAO,IACPJ,YAAa,GAEjBsE,eAAgB,CACZlE,MAAO,sBAEX2D,eAAgB,CAEZ6C,aAAc,GAElBgB,MAAO,CACHmC,OAAQ,iBACRC,aAAc,EACd5J,MAAO,qBACPX,QAAS,eACTU,QAAS,EACTkF,UAAW,GACXqB,WAAY,GACZzG,UAAW,IAEfiJ,KAAM,CACFlJ,YAAa,MAiSNF,CAAmB+G,I,4DCtS5BoD,G,kDACF,WAAYtN,GAAQ,IAAD,8BACf,cAAMA,IAED2D,MAAQ,CACTC,UAAU,EACV2J,OAAQ,GACRC,gBAAiB,GACjBC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTlH,QAAS,GACTmH,SAAS,GAGb,EAAKC,kBAAoB,EAAKC,aAAarD,KAAlB,iBAEzB,EAAKzK,MAAMiE,OAAO8J,WACb3J,MAAK,SAAA4J,GACF,IAAMP,EAAQ,GACRC,EAAQ,GAWd,OAVAzG,OAAOgH,KAAKD,GAAKE,SAAQ,SAAAxH,GACjBA,EAAGyH,MAAM,kBACTT,EAAMjC,KAAKuC,EAAItH,IAEfA,EAAGyH,MAAM,uBACTV,EAAMhC,KAAKuC,EAAItH,OAIvB,EAAKpC,SAAS,CAACmJ,QAAOC,QAAOE,SAAS,IAC/B,EAAK5N,MAAMiE,OAAOmK,gBAAgB,SAAU,EAAKP,sBA9BjD,E,mEAmCfpN,KAAKT,MAAMiE,OAAOoK,kBAAkB,SAAU5N,KAAKoN,mBAAmBzJ,MAAK,iB,mCAGlEsC,EAAIhE,GACbjC,KAAK6N,cAAc5H,GACnBjG,KAAK8N,iBAAiB7H,EAAIhE,K,qCAGfgE,GACXjG,KAAKT,MAAMiE,OAAOuK,OAAO/N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAUgG,K,iCAGhFA,GACP,IAAMiH,EAAUhO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMgK,WACxB,IAAzBA,EAAQrC,QAAQ5E,KAChBiH,EAAQlC,KAAK/E,GACbjG,KAAK6D,SAAS,CAACqJ,e,oCAITjH,GACV,IAAMiH,EAAUhO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMgK,UAC/CtC,EAAMsC,EAAQrC,QAAQ5E,IAEf,IAAT2E,IACAsC,EAAQpC,OAAOF,EAAK,GACpB5K,KAAK6D,SAAS,CAACqJ,e,uCAINjH,EAAIhE,GAEjB,GAAIgE,EAAGyH,MAAM,uBACT,IAAK,IAAIM,EAAIhO,KAAKkD,MAAM8J,MAAMiB,OAAS,EAAGD,GAAK,EAAIA,IAC/C,GAAIhO,KAAKkD,MAAM8J,MAAMgB,GAAGjO,MAAQkG,EAAI,CAChC,IAAM+G,EAAQ9N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM8J,QAC/C/K,EACA+K,EAAMgB,GAAK/L,EAEX+K,EAAMlC,OAAOkD,EAAG,GAEpBhO,KAAK6D,SAAS,CAACmJ,UACf,YAIZ,GAAI/G,EAAGyH,MAAM,kBACT,IAAK,IAAIM,EAAIhO,KAAKkD,MAAM+J,MAAMgB,OAAS,EAAGD,GAAK,EAAGA,IAC9C,GAAIhO,KAAKkD,MAAM+J,MAAMe,GAAGjO,MAAQkG,EAAI,CAChC,IAAMgH,EAAQ/N,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM+J,QAC/ChL,EACAgL,EAAMe,GAAK/L,EAEXgL,EAAMnC,OAAOkD,EAAG,GAEpBhO,KAAK6D,SAAS,CAACoJ,UACf,S,mCAMHhH,GAAK,IAAD,OACThE,EAAMjC,KAAKkD,MAAM8J,MAAMkB,MAAK,SAAApP,GAAC,OAAIA,EAAEiB,MAAQkG,MAAOjG,KAAKkD,MAAM+J,MAAMiB,MAAK,SAAApP,GAAC,OAAIA,EAAEiB,MAAQkG,KAEvFkI,EAAYrJ,IAAMsJ,oBAAoBnM,GAC1CA,EAAM/C,KAAKC,MAAMD,KAAKgB,UAAU+B,KACd,IAAdkM,EACArJ,IAAMuJ,iBAAiBpM,EAAKjC,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOkP,UAElGxJ,IAAMyJ,gBAAgBtM,EAAKjC,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOkP,UAGrGtO,KAAKwO,WAAWvI,GAEhBjG,KAAKT,MAAMiE,OAAO8B,UAAUW,EAAIhE,GAC3B0B,MAAK,WAEF,EAAKmK,iBAAiB7H,EAAIhE,GAC1B,EAAKwM,eAAexI,GAEpByI,YAAW,kBAAM,EAAKb,cAAc5H,KAAK,U,6BAI9CA,GACH,IAAMhE,EAAMjC,KAAKkD,MAAM8J,MAAMkB,MAAK,SAAApP,GAAC,OAAIA,EAAEiB,MAAQkG,MAAOjG,KAAKkD,MAAM+J,MAAMiB,MAAK,SAAApP,GAAC,OAAIA,EAAEiB,MAAQkG,KACzFkI,EAAYrJ,IAAMsJ,oBAAoBnM,EAAKjC,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOkP,UAC5F,kBAAdH,GAA0BA,IACjCA,EAAYA,EAAU1O,IAAKkP,gBAAkBR,EAAUS,IAE3DT,EAAYA,GAAarJ,IAAM+J,qBAAqB5M,EAAK,KAAM,CAAC6M,SAAUrP,IAAKkP,gBAC/E3O,KAAK6D,SAAS,CAACiJ,OAAQ7G,EAAI8G,gBAAiBoB,M,iCAGrClM,GAAM,IAAD,OACRkM,EAAYrJ,IAAMsJ,oBAAoBnM,EAAKjC,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOkP,UAEjHH,GAAkC,kBAAdA,IACpBA,EAAYA,EAAU1O,IAAKkP,gBAAkBR,EAAUS,IAAM,IAEjE,IAAItP,EAAOwF,IAAM+J,qBAAqB5M,GAEtC,OAAQ,yBAAKmE,IAAKnE,EAAIlC,IAAKiB,UAAWhB,KAAKT,MAAM0B,QAAQ8N,SAAU3M,MAAO,CAAC4M,YAAqD,IAAzChP,KAAKkD,MAAMgK,QAAQrC,QAAQ5I,EAAIlC,KAnMxG,YAmMsI,YAChJ,0BAAMiB,UAAWhB,KAAKT,MAAM0B,QAAQgO,aAAc7M,MAAO,CAAC8M,SAAuB,IAAdf,EAAsB,GAAK,IAAKA,GAAa,KAAMA,EAAa,0BAAMnN,UAAWhB,KAAKT,MAAM0B,QAAQkO,iBAApC,KAAwD7P,EAAxD,KAAyEA,GAC5M,0BAAM0B,UAAWhB,KAAKT,MAAM0B,QAAQmO,WAAYhN,MAAO,CAAC8M,SAAuB,IAAdf,EAAsB,GAAK,IAAKlM,EAAIlC,KACrG,kBAACsP,GAAA,EAAD,CACIrO,UAAWhB,KAAKT,MAAM0B,QAAQqO,gBAC9BxI,SAAuB,IAAdqH,EACT9J,SAAU,kBAAM,EAAKkL,aAAatN,EAAIlC,QAE1C,kBAACoG,EAAA,EAAD,CAAY3E,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQuO,aAAc9N,QAAS,kBAAM,EAAK+N,OAAOxN,EAAIlC,OACrG,kBAAC,SAAD,CAAU2P,SAAS,c,kCAMnBpQ,GAAO,IAAD,OACd,OAAOU,KAAKkD,MAAM5D,GAAMsJ,KAAI,SAAA9J,GAAC,OAAI,EAAK6Q,WAAW7Q,Q,sCAGpC,IAAD,OACZ,OAAIkB,KAAKkD,MAAM8C,QACH,kBAAC,IAAD,CAAeM,KAAMtG,KAAKkD,MAAM8C,QAASF,QAAS,kBAAM,EAAKjC,SAAS,CAACmC,QAAS,QAEjF,O,wCAII,IAAD,OAGd,IADYhG,KAAKkD,MAAM4J,OAAO8C,WAAW,mBAAqB5P,KAAKkD,MAAM8J,MAAQhN,KAAKkD,MAAM+J,OAClFiB,MAAK,SAAAjM,GAAG,OACd,EAAKiB,MAAM4J,SAAW7K,EAAIlC,MAC1B,EAAKmD,MAAM6J,kBAAoBjI,IAAM+J,qBAAqB5M,EAAK,KAAM,CAAC6M,SAAUrP,IAAKkP,iBACrF,EAAKzL,MAAM6J,kBAAoBjI,IAAMsJ,oBAAoBnM,EAAK,EAAK1C,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,cACpItO,KAAK6D,SAAS,CAACmC,QAASvG,IAAKC,EAAE,wBAC5B,CACHM,KAAKwO,WAAWxO,KAAKkD,MAAM4J,QAC3B4B,YAAW,kBAAM,EAAKb,cAAc,EAAK3K,MAAM4J,UAAS,KACxD,IAEI+C,EAFE5J,EAAKjG,KAAKkD,MAAM4J,OACtB9M,KAAK6D,SAAS,CAACiJ,OAAQ,KAEvB9M,KAAKT,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAGF,OAFA6C,IAAMgL,gBAAgB7N,EAAK,EAAKiB,MAAM6J,qBAAiBgD,OAAWA,EAAW,EAAKxQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UACnJuB,EAAS5N,EACF,EAAK1C,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAKmK,iBAAiB7H,EAAI4J,GAC1B,EAAKpB,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,S,yCAIzB,IAAD,OACf,GAAIxF,KAAKkD,MAAM4J,OAAQ,CACnB,IAAM7K,EAAMjC,KAAKkD,MAAM8J,MAAMkB,MAAK,SAAApP,GAAC,OAAIA,EAAEiB,MAAQ,EAAKmD,MAAM4J,WAAW9M,KAAKkD,MAAM+J,MAAMiB,MAAK,SAAApP,GAAC,OAAIA,EAAEiB,MAAQ,EAAKmD,MAAM4J,UAEvH,OAAQ,kBAACkD,GAAA,EAAD,CACJrO,MAAM,EACNwG,SAAS,KACT8H,WAAW,EACXnK,QAAS,kBAAM,EAAKjC,SAAS,CAACiJ,OAAQ,MACtCoD,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,GAAA,EAAD,CAAanK,GAAG,wBAAwBjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqBoF,IAAM+J,qBAAqB5M,EAAK,KAAM,CAAC6M,SAAUrP,IAAKkP,kBAC9I,kBAAC0B,GAAA,EAAD,KACI,kBAACnM,EAAA,EAAD,CACI9B,MAAO,CAACY,MAAO,QACfmB,MAAO1E,IAAKC,EAAE,cACd2E,SAAU,SAAAvF,GAAC,OAAI,EAAK+E,SAAS,CAACkJ,gBAAiBjO,EAAEN,OAAO4F,SACxDA,MAAOpE,KAAKkD,MAAM6J,gBAClBuD,WAAY7Q,IAAKC,EAAE,gDACnB4E,OAAO,YAGf,kBAACiM,GAAA,EAAD,KACI,kBAACrL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAK8O,mBAAmBjP,MAAM,UAAUkP,WAAS,GAAEhR,IAAKC,EAAE,OACjF,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKmC,SAAS,CAACiJ,OAAQ,OAAOrN,IAAKC,EAAE,aAIpE,OAAO,O,+BAKX,OAAIM,KAAKkD,MAAMiK,QACH,kBAACuD,GAAA,EAAD,MAGR,0BAAM1P,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAChC,yBAAK/F,UAAWhB,KAAKT,MAAM0B,QAAQgG,QAC/B,wBAAIjG,UAAWhB,KAAKT,MAAM0B,QAAQ0P,cAAelR,IAAKC,EAAE,UACxD,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQ2P,WAAY5Q,KAAK6Q,YAAY,WAEpE,yBAAK7P,UAAWhB,KAAKT,MAAM0B,QAAQgG,QAC/B,wBAAIjG,UAAWhB,KAAKT,MAAM0B,QAAQ0P,cAAelR,IAAKC,EAAE,cACxD,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQ2P,WAAY5Q,KAAK6Q,YAAY,WAEnE7Q,KAAK8Q,gBACL9Q,KAAK+Q,wB,GAnPFtO,aAoQLC,gBA1TA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPoF,OAAQ,QAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,GACbwF,OAAQ,OACR4I,SAAU,SACVhO,MAAO,mBACPkF,SAAU,IACVC,SAAU,KAEdyI,UAAW,CACPxI,OAAQ,oBACR4I,SAAU,OACV9I,SAAU,KAEdoH,gBAAiB,CACb2B,SAAU,WACVC,MAAO,EACPC,IAAK,GAET3B,aAAc,CAEVyB,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXjC,aAAc,GAGdE,gBAAgB,CACZiC,UAAW,UAEfrC,SAAU,CACN3G,OAAQ,GACRpF,MAAO,OACPiO,SAAU,YAEd7B,WAAY,CACR/M,QAAS,QACT+O,UAAW,SACX1B,SAAU,IAEdiB,aAAc,CACV3B,WAAYrM,EAAM0O,QAAQC,QAAQC,MAClCxO,QAAS,GACTxB,MAAOoB,EAAM0O,QAAQC,QAAQE,iBAwQtB9O,CAAmBmK,I,UC5R5B4E,GAAiB,CACnBC,OAAQ,CAACnQ,MATG,UASaT,KAAM6Q,aAAQtR,KAAM,WAC7CuR,QAAS,CAACrQ,MATG,OAScT,KAAM6Q,aAAQtR,KAAM,YAE/CwR,qBAAsB,CAACtQ,MAVV,UAU2BT,KAAMgR,oBAAiBzR,KAAM,0BACrE0R,2BAA4B,CAACxQ,MAbjB,UAaiCT,KAAMkR,mBAAQ3R,KAAM,gCACjE4R,2BAA4B,CAAC1Q,MAbhB,OAaiCT,KAAMoR,qBAAU7R,KAAM,gCAEpE8R,cAAe,CAAC5Q,MAdH,UAcoBT,KAAMsR,eAAgB/R,KAAM,kBAC7DgS,oBAAqB,CAAC9Q,MAjBV,UAiB0BT,KAAMkR,mBAAQ3R,KAAM,wBAC1DiS,oBAAqB,CAAC/Q,MAjBT,OAiB0BT,KAAMoR,qBAAU7R,KAAM,wBAE7DkS,SAAU,CAAChR,MAlBE,UAkBeT,KAAM0R,YAAWnS,KAAM,aAEnDoS,oBAAqB,CAAClR,MApBT,UAoB0BT,KAAM4R,cAAUrS,KAAM,yBAC7DsS,0BAA2B,CAACpR,MAvBhB,UAuBgCT,KAAMkR,mBAAQ3R,KAAM,+BAChEuS,0BAA2B,CAACrR,MAvBf,OAuBgCT,KAAMoR,qBAAU7R,KAAM,+BAEnEwS,qBAAsB,CAACtR,MAvBT,UAuB2BT,KAAMgS,gBAAiBzS,KAAM,0BACtE0S,sBAAuB,CAACxR,MAxBV,UAwB4BT,KAAMgS,gBAAiBzS,KAAM,0BAEvE2S,aAAc,CAACzR,MA3BF,UA2BmBT,KAAMmS,aAAU5S,KAAM,kBACtD6S,aAAc,CAAC3R,MA3BD,UA2BmBT,KAAMmS,aAAU5S,KAAM,oBAGrD8S,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,UAqI9GC,G,kDACF,WAAY7T,GAAQ,IAAD,6BACf,cAAMA,GAEDkS,GAAe4B,aAChB7M,OAAOgH,KAAKiE,IAAgBhE,SAAQ,SAAA9C,GAAC,OAAI8G,GAAe9G,GAAGtK,KAAOZ,IAAKC,EAAE+R,GAAe9G,GAAGtK,SAC3FoR,GAAe4B,YAAa,GAGhC,EAAKnQ,MAAQ,CACT6J,gBAAiB,GACjBD,OAAQ,GACRwG,gBAAiB,KACjBC,eAAgB,GAChBC,SAAU,GAEVjL,cAAc,EACdkL,iBAAkB,GAClBvG,QAAS,GACTwG,QAAS,GACT1N,QAAS,GACT0E,OAAQ,GACRyC,SAAS,EACTwG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjB,EAAKC,aAAe,KACpB,EAAKC,YAAc,KACnB,EAAKC,iBAAmB,EACxB,EAAKjH,gBAAkB,GAEvB,EAAKkH,gBAAkB,KACvB,EAAKC,mBAAqB,EAAKC,cAAcnK,KAAnB,iBAC1B,EAAKoK,oBAAsB,EAAKC,eAAerK,KAApB,iBAE3B,EAAKzK,MAAMiE,OAAOC,UAAlB,yBAA8C,EAAKlE,MAAMmE,YAAzD,YAAwE,EAAKnE,MAAMU,WAAY0D,MAAK,SAAA1B,GAChG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAChGjB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOyE,SAAaZ,GAAUA,EAAMa,KAGjE,EAAK4P,SAFL,EAAK9P,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAA6ByN,SAAS,EAAOuG,QAAS,WAvClF,E,mDA+CZY,GAAa,IAAD,OACXC,KAAKC,MAAQxU,KAAKyU,WAAa,MACnCzU,KAAKyU,WAAaF,KAAKC,MACnBF,EACAtU,KAAK6D,SAAS,CAACsJ,SAAS,EAAMwG,QAAQ,IAEtC3T,KAAK6D,SAAS,CAAC8P,QAAQ,IAE3Be,QAAQC,IAAI,gBACZ3U,KAAK+T,YAAcrF,YAAW,WAC1BgG,QAAQC,IAAI,mBACZ,EAAKZ,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKzQ,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMiE,OAAOuK,OAAO/N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAU,MAAM,SAAAiK,GACzF,EAAK6J,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KACf,EAAKE,kBACA,EAAKxE,OAAO,EAAKwE,gBAAiB/J,IACnC,EAAKrG,SAAS,CAACmC,QAASvG,IAAKC,EAAE,0BAA2B,EAAKuU,mBAEnE,EAAKA,gBAAkB,MAE3BS,QAAQC,IAAI,oBAEZ,EAAK9Q,SAAS,CAAC6P,QAASxJ,EAAMiD,SAAS,EAAOD,QAAS,GAAIyG,QAAQ,U,oCAI7D1N,EAAI/C,GAAQ,IAAD,OACrBwR,QAAQC,IAAI,UAAY1O,EAAK,KAAO/C,EAAQA,EAAMa,IAAM,IAAMb,EAAMiC,IAAM,SACtEjC,IAAuB,IAAdA,EAAMiC,MAA8B,IAAdjC,EAAMa,MACrC/D,KAAK6U,UAAYD,aAAa5U,KAAK6U,UACnC7U,KAAK6U,SAAWnG,YAAW,WACvB,EAAKmG,SAAW,KAChB,EAAKlB,WACN,Q,qCAII1N,EAAI/C,GACfA,IAAuB,IAAdA,EAAMiC,KAAgBjC,EAAMa,KAAO/D,KAAK6D,SAAS,CAACmC,QAAS9C,EAAMa,Q,2CAI1E/D,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,kBAAmGD,KAAKkU,oBACxGlU,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKoU,uB,6CAI9GpU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,kBAAqGD,KAAKkU,oBAC1GlU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKoU,qBAC5GpU,KAAK8T,eACLc,aAAa5U,KAAK8T,cAClB9T,KAAK8T,aAAe,Q,qCAIb7N,GACXjG,KAAKT,MAAMiE,OAAOuK,OAAO/N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAUgG,K,iCAGhFA,EAAI6O,GACX,IAAM5H,EAAUhO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMgK,WACxB,IAAzBA,EAAQrC,QAAQ5E,IAChBiH,EAAQlC,KAAK/E,GACbjG,KAAK6D,SAAS,CAACqJ,YAAU,kBAAM4H,GAAMA,QAErCA,GAAMA,M,oCAIA7O,GACV,IAAMiH,EAAUhO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMgK,UAC/CtC,EAAMsC,EAAQrC,QAAQ5E,IAEf,IAAT2E,IACAsC,EAAQpC,OAAOF,EAAK,GACpB5K,KAAK6D,SAAS,CAACqJ,e,6BAIhBjH,EAAIyN,GAAU,IAAD,OAEVqB,GADNrB,EAAUA,GAAW1T,KAAKkD,MAAMwQ,SACTxF,MAAK,SAAA8G,GAAG,OAAIA,EAAIC,2BAA2BhP,KAAOA,KACzE,QAAI8O,IACA/U,KAAKT,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GACF,IAAIkM,EAAY4G,EAAOE,2BAA2BC,cAAgBH,EAAOE,2BAA2BC,cAAgBH,EAAOI,aAClG,kBAAdhH,GAA0BA,IACjCA,EAAYA,EAAU1O,IAAKkP,gBAAkBR,EAAUS,IAE3D,EAAK7B,gBAAkBoB,EACvB,IAAImF,EAAkB,KACjByB,EAAOE,2BAA2BG,QACnC9B,EAAkByB,EAAOE,2BAA2BI,WAGxD,EAAKxR,SAAS,CAACiJ,OAAQ7G,EAAIqN,kBAAiBvG,gBAAiBoB,EAAWoF,eAAgBzO,IAAM+J,qBAAqB5M,EAAK,KAAM,CAAC6M,SAAUrP,IAAKkP,sBAE/I,K,kCAMH6E,GACRxT,KAAK6D,SAAS,CAAC2P,WAAUC,kBAAkB,M,iCAGnC,IAAD,OACHxN,EAAKjG,KAAKkD,MAAMsQ,SAEpBxT,KAAKwO,WAAWvI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAMuJ,iBAAiBpM,EAAK,EAAK1C,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAC3F,EAAK/O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WACF,EAAKE,SAAS,CAAC2P,SAAU,GAAIC,kBAAkB,EAAOI,YAAa5N,IAEnE,EAAK6N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKrF,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,oCAI/BwP,GAAM,IAAD,OAETM,EAAU,GAChB,IAAKN,EAAIM,QAEL,OADAZ,QAAQC,IAAI,wBACL,KAEXK,EAAIM,QAAQC,MAAK,SAAC5K,EAAG6K,GACjB,OAAI7K,IAAM6K,EAAU,EACV,WAAN7K,GAAwB,EAClB,WAAN6K,EAAuB,EAEjB,YAAN7K,GAAyB,EACnB,YAAN6K,EAAwB,EACrB,KAGXhP,OAAOgH,KAAKiE,IAAgBhE,SAAQ,SAAAvH,GAChC,IAAqC,IAAjC8O,EAAIM,QAAQzK,QAAQ3E,GAAgB,CACpC,IAAMuP,EAAOhE,GAAevL,GAAQpF,KACpCwU,EAAQtK,KAAM,0BAAM5E,IAAKF,EAAQrE,MAAO4P,GAAevL,GAAQ7F,MAAM,kBAACoV,EAAD,CAAMzU,UAAW,EAAKzB,MAAM0B,QAAQyU,WAAYtT,MAAO,CAACb,MAAOkQ,GAAevL,GAAQ3E,eAInK,IAAK,IAAIoJ,EAAI,EAAGA,EAAIqK,EAAIM,QAAQrH,OAAQtD,IAC/B8G,GAAeuD,EAAIM,QAAQ3K,KAC5B2K,EAAQtK,KAAM,0BAAM5E,IAAK4O,EAAIM,QAAQ3K,IAAKqK,EAAIM,QAAQ3K,KAG9D,OAAO2K,I,+BAGFK,GACL,IAAM/B,EAAW1U,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM0Q,WAChDhJ,EAAMgJ,EAAS/I,QAAQ7K,KAAKkD,MAAMwQ,QAAQiC,GAASR,eAC5C,IAATvK,EACAgJ,EAAS5I,KAAKhL,KAAKkD,MAAMwQ,QAAQiC,GAASR,cAE1CvB,EAAS9I,OAAOF,EAAK,GAEzB5K,KAAK6D,SAAS,CAAC+P,e,uCAGFoB,EAAKW,EAAS1P,EAAIhC,GAAO,IAAD,OAErC,IAAa,IAATA,EAAgB,CAKhB,IAJA,IAAM2R,EAAQ,CACT,kBAAC9M,EAAA,EAAD,CAAU1C,IAAI,IAAIhC,MAAM,IAAG,4BAAK3E,IAAKC,EAAE,aACvC,kBAACoJ,EAAA,EAAD,CAAU1C,IAAI,OAAOhC,MAAM,UAAU3E,IAAKC,EAAE,gBAExCsO,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3B4H,EAAM5K,KAAM,kBAAClC,EAAA,EAAD,CAAW1C,IAAK4H,EAAEpO,WAAYwE,MAAO4J,EAAEpO,YAAaoO,EAApD,MAEhB,OAAQ,kBAACvF,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQ4U,gBAC/C,kBAACnN,EAAA,EAAD,CAAQ1H,UAAWhB,KAAKT,MAAM0B,QAAQ6U,qBAAsB1R,OAAQH,GAAQ,IAAIrE,WAAYyE,SAAU,SAAAvF,GAAC,OAAI,EAAKiX,eAAe9P,EAAInH,EAAEN,OAAO4F,SAASwR,GACrJ,kBAAC7M,EAAA,EAAD,CAAgB/H,UAAWhB,KAAKT,MAAM0B,QAAQ+U,qBAAsBvW,IAAKC,EAAE,WAG/E,OAAO,O,qCAIAuG,EAAIgQ,EAAMhS,GAAO,IAAD,OAC3BjE,KAAKwO,WAAWvI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAYF,OAXA6C,IAAMgL,gBAAgB7N,OAAK8N,EAAWkG,EAAMhS,EAAM,EAAK1E,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAEpH,EAAKpL,MAAM2Q,cAAgB5N,IAC3B,EAAKpC,SAAS,CAACgQ,YAAa5N,IAC5B,EAAK6N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKvU,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK8K,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,+CAIpBvB,EAAMI,GAC3B,IAAa,IAATJ,EAAgB,CAIhB,IAHA,IAAM2R,EAAQ,CACT,kBAAC9M,EAAA,EAAD,CAAU1C,IAAI,IAAIhC,MAAM,KAAI,4BAAK3E,IAAKC,EAAE,cAEpCsO,EAAI,EAAGA,EAAImF,GAAWlF,OAAQD,IACnC4H,EAAM5K,KAAM,kBAAClC,EAAA,EAAD,CAAW1C,IAAK+M,GAAWnF,GAAI5J,MAAO+O,GAAWnF,IAAI,4BAAKvO,IAAKC,EAAEyT,GAAWnF,OAE5F,OACI,kBAACvF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQtE,MAAOH,GAAQ,IAAKI,SAAU,SAAAvF,GAAC,OAAIuF,EAA4B,MAAnBvF,EAAEN,OAAO4F,MAAgB,GAAKtF,EAAEN,OAAO4F,SAASwR,GACpG,kBAAC7M,EAAA,EAAD,CAAgB/H,UAAWhB,KAAKT,MAAM0B,QAAQ+U,qBAAsBvW,IAAKC,EAAE,WAGnF,MAAO,K,uCAIEsV,EAAKW,EAAS1P,EAAIhC,GAAO,IAAD,OACrC,OAAOjE,KAAKkW,yBAAyBjS,GAAM,SAAAG,GAAK,OAAI,EAAK2R,eAAe9P,OAAI8J,EAAW3L,Q,qCAG5E4Q,EAAKW,GAAU,IAAD,OACnB3W,EAAS,GACTiC,EAAUjB,KAAKT,MAAM0B,QAE3B,GAAI+T,EAAIC,2BAA2BG,MAAO,CACtC,IAAMe,EAAanB,EAAIC,2BAA2BkB,SAC5CC,EAAapB,EAAIC,2BAA2BmB,MAC5CC,EAAarB,EAAIC,2BAA2BqB,MAC5CC,EAAavB,EAAIC,2BAA2BuB,WAE9CC,EAAI,EACR,IAAK,IAAMC,KAAQP,EACf,GAAIA,EAASQ,eAAeD,GACxB,IADgC,IAAD,WACtB1I,GACL,IAAM/H,EAAKkQ,EAASO,GAAM1I,GAAG/H,GACzB+I,GAAiD,IAApC,EAAK9L,MAAMgK,QAAQrC,QAAQ5E,GA5d9C,YACQ,UA4dF,EAAK/C,MAAM2Q,cAAgB5N,GA5dzB,YA4d+B+I,IACjCA,EA5dD,WA8dHhQ,EAAOgM,KAAM,yBAAK5E,IAAK,MAAQH,EAAIjF,UAAWC,EAAQ2V,WAAYxU,MAAQqU,EAAI,EAAK,GAAK,CAACzH,eACrF,yBAAKhO,UAAW,EAAKzB,MAAM0B,QAAQ4V,eAAiB,IAAM,EAAKtX,MAAM0B,QAAQ6V,oBAAqB,EAAKC,cAAcZ,EAASO,GAAM1I,KACpI,yBAAKhN,UAAWC,EAAQ+V,eAAgBnV,MAAOoE,GAAMmQ,EAAMnQ,IAAOA,EAC7DA,IAAOmQ,EAAMnQ,GAAO,0BAAMjF,UAAWC,EAAQgW,mBAAoBhR,GAAc,MAEnF,EAAKiR,iBAAiBlC,EAAKW,EAAS1P,EAAIsQ,EAAWtQ,IACnD,EAAKkR,iBAAiBnC,EAAKW,EAAS1P,EAAIoQ,EAAMpQ,IAC/C,kBAACE,EAAA,EAAD,CAAY3E,aAAW,SAASR,UAAW,EAAKzB,MAAM0B,QAAQmW,iBAAkB1V,QAAS,kBAAM,EAAK2V,YAAYpR,EAAI0P,KAAU,kBAAC,WAAD,CAAYjG,SAAS,cAEvJ+G,KAfKzI,EAAI,EAAGA,EAAImI,EAASO,GAAMzI,OAAQD,IAAM,EAAxCA,OAmBd,CACH,IAAM/H,EAAK+O,EAAIC,2BAA2BhP,GACpC3G,EAAO0V,EAAIC,2BAA2B3V,MAAQ2G,EAChD+I,GAAiD,IAApChP,KAAKkD,MAAMgK,QAAQrC,QAAQ5E,GAhflC,YACQ,UAgfdjG,KAAKkD,MAAM2Q,cAAgB5N,GAhfb,YAgfmB+I,IACjCA,EAhfW,WAkffhQ,EAAOgM,KAAM,yBAAK5E,IAAK,MAAQH,EAAIjF,UAAWC,EAAQ2V,WAAYxU,MAAO,CAAC4M,eACtE,yBAAKhO,UAAWhB,KAAKT,MAAM0B,QAAQ4V,eAAiB,IAAM7W,KAAKT,MAAM0B,QAAQ6V,mBAAoB1U,MAAO,CAACY,MAAO,KAAMhD,KAAK+W,cAAc/B,IACzI,yBAAKhU,UAAWC,EAAQ+V,eAAgBnV,MAAQoE,GAAM,IAAM3G,GAC3DU,KAAKkX,iBAAiBlC,EAAKW,EAAS1P,EAAI+O,EAAIC,2BAA2BI,WACvErV,KAAKmX,iBAAiBnC,EAAKW,EAAS1P,EAAI+O,EAAIC,2BAA2BgB,QAGhF,OAAOjX,I,mCAGEgW,EAAKW,GAAU,IAEpB9T,EAFmB,OACnBsT,EAAeH,EAAIG,aAGnBtT,GADCmT,EAAIC,2BAA2BG,OAASJ,EAAIC,2BAA2BqC,aAChEnC,EAEC,0BAAMnU,UAAWhB,KAAKT,MAAM0B,QAAQsW,YAAa1V,MAAOpC,IAAKC,EAAE,aAAcyV,GAG1F,IAAIqC,EAAW,EACf,IAAK,IAAMC,KAAMzC,EAAIC,2BAA2BkB,SACxCnB,EAAIC,2BAA2BkB,SAASQ,eAAec,KACvDD,GAAYxC,EAAIC,2BAA2BkB,SAASsB,GAAIxJ,QAGhEuJ,EAAWA,GAAY,EACvB,IAAM5D,GAA0D,IAA/C5T,KAAKkD,MAAM0Q,SAAS/I,QAAQsK,GACvClP,EAAK+O,EAAIC,2BAA2BhP,GAEtC+I,EAAc2G,EAAU,EAAK,UAAY,UACvCzI,GAA8C,IAApClN,KAAKkD,MAAMgK,QAAQrC,QAAQ5E,GAQ3C,GAPIiH,EACA8B,EAphBU,YAqhBH/I,IAAOjG,KAAKkD,MAAM2Q,cACzB7E,EAphBe,WAwhBfgG,EAAIC,2BAA2BG,QAAUlI,GAAWjH,IAAOjG,KAAKkD,MAAM2Q,YAAa,CACnF,IAAMsC,EAAWnB,EAAIC,2BAA2BkB,SAChD,IACIA,GAAY3P,OAAOgH,KAAK2I,GAAU1I,SAAQ,SAAAiJ,GAAI,OAC1CA,GAAQP,EAASO,GAAMjJ,SAAQ,SAAAvL,IACgB,IAAvC,EAAKgB,MAAMgK,QAAQrC,QAAQ3I,EAAG+D,IAC9B+I,EAhiBN,YAiiBa,EAAK9L,MAAM2Q,cAAgB3R,EAAG+D,KACrC+I,EAhiBD,iBAoiBb,MAAO0I,GACLhD,QAAQC,IAAI+C,IAIpB,MAAO,CACF,yBAAKtR,IAAK,OAASuP,EAAS3U,UAAWhB,KAAKT,MAAM0B,QAAQ0W,QAASvV,MAAO,CAAC4M,eACxE,yBAAKhO,UAAWhB,KAAKT,MAAM0B,QAAQ2W,eAAgBjC,EAAU,EAA7D,KACA,kBAACxP,EAAA,EAAD,CAAYnF,UAAWhB,KAAKT,MAAM0B,QAAQ4W,cAAenW,QAAS,kBAAM,EAAKoW,SAASnC,KACjF6B,EAAW,EACP,kBAACO,GAAA,EAAD,CAAOC,aAAcR,EAAUjW,MAAM,WACjCqS,EAAY,kBAAC,eAAD,MAAoB,kBAAC,uBAAD,OAEpCA,EAAY,kBAAC,eAAD,MAAoB,kBAAC,uBAAD,OAEzC,yBAAK5S,UAAWhB,KAAKT,MAAM0B,QAAQgX,iBAAkB7V,MAAO,CAACC,QAAS,eAAgB4O,SAAU,aAC5F,0BAAMjQ,UAAWhB,KAAKT,MAAM0B,QAAQiX,aAAcrW,GAClD,0BAAMb,UAAWhB,KAAKT,MAAM0B,QAAQkX,oBAAqBnD,EAAIoD,qBAC5DlL,EAAW,kBAACwD,GAAA,EAAD,CAAkB1P,UAAWhB,KAAKT,MAAM0B,QAAQoX,gBAAiB/W,KAAM,KAAS,MAEhG,0BAAMN,UAAWhB,KAAKT,MAAM0B,QAAQ4V,gBAAiB7W,KAAK+W,cAAc/B,IACtEA,EAAIC,2BAA2BG,MAC4H,KAAxJ,kBAACjP,EAAA,EAAD,CAAY3E,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQqX,YAAa5W,QAAS,kBAAM,EAAK+N,OAAOxJ,KAAK,kBAAC,SAAD,CAAUyJ,SAAS,YAC/HsF,EAAIC,2BAA2BG,MACuI,KAAnK,kBAACjP,EAAA,EAAD,CAAY3E,aAAW,SAASR,UAAWhB,KAAKT,MAAM0B,QAAQsX,cAAe7W,QAAS,kBAAM,EAAK2V,YAAYpR,KAAK,kBAAC,WAAD,CAAYyJ,SAAS,aAEhJkE,EAAW5T,KAAKwY,eAAexD,EAAKW,GAAW,Q,sCAItC,IAAD,OACZ,OAAI3V,KAAKkD,MAAM8C,QACH,kBAAC,IAAD,CAAeM,KAAMtG,KAAKkD,MAAM8C,QAASF,QAAS,kBAAM,EAAKjC,SAAS,CAACmC,QAAS,QAEjF,O,sCAIClH,GAAI,IAAD,OACfA,GAAKA,EAAE2Z,iBAEPzY,KAAKwO,WAAWxO,KAAKkD,MAAM4J,QAAQ,WAC/B,IAAM7G,EAAK,EAAK/C,MAAM4J,OAChBwG,EAAkB,EAAKpQ,MAAMoQ,gBAEnC,EAAKzP,SAAS,CAACiJ,OAAQ,GAAIyG,eAAgB,GAAIM,YAAa5N,EAAIqN,gBAAiB,OAEjF,EAAKQ,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKvU,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAGF,OAFA6C,IAAMgL,gBAAgB7N,EAAK,EAAK8K,qBAAiBgD,EAA+B,OAApBuD,OAA2BvD,EAAYuD,EAAiB,EAAK/T,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAEnL,EAAK/O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK8K,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,yCAIzB,IAAD,OACf,OAAIxF,KAAKkD,MAAM4J,OACH,kBAACkD,GAAA,EAAD,CACJrO,MAAM,EACNwG,SAAS,KACT8H,WAAW,EACXnK,QAAS,WACL,EAAKiH,gBAAkB,KACvB,EAAKlJ,SAAS,CAACiJ,OAAQ,GAAIC,gBAAiB,MAEhDmD,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,GAAA,EAAD,CAAanK,GAAG,wBAAwBjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqBM,KAAKkD,MAAMqQ,iBACnG,kBAAClD,GAAA,EAAD,KACI,2BAAG,qCAAH,IAAoB,0BAAMrP,UAAWhB,KAAKT,MAAM0B,QAAQyX,UAAW1Y,KAAKkD,MAAM4J,SAC9E,kBAAC5I,EAAA,EAAD,CACI9B,MAAO,CAACY,MAAO,QACfmB,MAAO1E,IAAKC,EAAE,cACdiZ,UAAW,SAAA7Z,GAAC,OACM,KAAdA,EAAEyM,SAAkB,EAAKiF,gBAAgB1R,IAC7CuF,SAAU,SAAAvF,GAAC,OAAI,EAAKiO,gBAAkBjO,EAAEN,OAAO4F,OAC/CwU,aAAc5Y,KAAKkD,MAAM6J,gBACzBuD,WAAY7Q,IAAKC,EAAE,gDACnB4E,OAAO,WAEqB,OAA/BtE,KAAKkD,MAAMoQ,gBAA2BtT,KAAKkW,yBAAyBlW,KAAKkD,MAAMoQ,iBAAiB,SAAAlP,GAAK,OAAI,EAAKP,SAAS,CAACyP,gBAAiBlP,OAAW,MAEzJ,kBAACmM,GAAA,EAAD,KACI,kBAACrL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAK8O,mBAAmBjP,MAAM,UAAUkP,WAAS,GAAEhR,IAAKC,EAAE,OACjF,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,WACb,EAAKqL,gBAAkB,KACvB,EAAKlJ,SAAS,CAACiJ,OAAQ,GAAIC,gBAAiB,OAC5CtN,IAAKC,EAAE,aAIZ,O,4CAIQ,IAAD,OAClB,OAAIM,KAAKkD,MAAMuQ,iBACH,kBAACzD,GAAA,EAAD,CACJrO,MAAM,EACNwG,SAAS,KACT8H,WAAW,EACXnK,QAAS,kBAAM,EAAKjC,SAAS,CAAC4P,iBAAkB,MAChDvD,kBAAgB,4BAChBC,mBAAiB,mCAEjB,kBAACC,GAAA,EAAD,CAAanK,GAAG,6BAA6BjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,6BACxE,kBAAC2Q,GAAA,EAAD,KACI,2BAAI5Q,IAAKC,EAAE,mBAEf,kBAAC6Q,GAAA,EAAD,KACI,kBAACrL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKkK,YAAYrK,MAAM,UAAUkP,WAAS,GAAEhR,IAAKC,EAAE,OAC1E,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKmC,SAAS,CAAC4P,iBAAkB,OAAOhU,IAAKC,EAAE,aAIvE,O,0CAIM,IAAD,OAChB,OAAIM,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAU,GACVC,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAACF,EAAU5J,GACb,EAAKuE,SAAS,CAAC0E,cAAc,IAE7B,EAAKhJ,MAAMiE,OAAOC,UAAUyF,GACvBvF,MAAK,SAAA1B,GACF,GAAIA,EAAK,CACL,IAAM3C,EAAOwF,IAAM+J,qBAAqB5M,EAAK,KAAM,CAAC6M,SAAUrP,IAAKkP,gBACnE7J,IAAMgL,gBAAgB7N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgB0K,QAAQ,UAAW,UAAM2F,OAAWA,EAAW,EAAKxQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAChL,EAAKE,WAAWvM,EAAIlC,KACpB,EAAKkU,gBAAkBhS,EAAIlC,IAEvB,EAAKmD,MAAM2Q,cAAgB5R,EAAIlC,MAC/B,EAAK8D,SAAS,CAACgQ,YAAa5R,EAAIlC,MAChC,EAAK+T,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGP,EAAKvU,MAAMiE,OAAO8B,UAAUrD,EAAIlC,IAAKkC,GAChC0B,MAAK,kBAAM,EAAK8K,eAAexM,EAAIlC,QACnCwF,OAAM,SAAAC,GAAG,OAAI,EAAK3B,SAAS,CAACmC,QAASR,YAE1C,EAAK3B,SAAS,CAACmC,QAASvG,IAAKC,EAAE,sBAM5C,O,sCAOX,IAFA,IAAMgL,EAAS1K,KAAKkD,MAAMwH,OAAOmO,cAC3B7Z,EAAS,GACNgP,EAAI,EAAGA,EAAIhO,KAAKkD,MAAMwQ,QAAQzF,OAAQD,IACvChO,KAAKkD,MAAMwH,SAAgF,IAAtE1K,KAAKkD,MAAMwQ,QAAQ1F,GAAGmH,aAAa0D,cAAchO,QAAQH,IAClF1L,EAAOgM,KAAKhL,KAAK8Y,aAAa9Y,KAAKkD,MAAMwQ,QAAQ1F,GAAIA,IAEzD,OAAQ,yBAAK5H,IAAI,cAAcpF,UAAWhB,KAAKT,MAAM0B,QAAQ2P,WAAY5R,K,+BAGnE,IAAD,OACL,OAAIgB,KAAKkD,MAAMiK,QACH,kBAACuD,GAAA,EAAD,CAAmBtK,IAAI,kBAI/B,0BAAMA,IAAI,QAAQpF,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAC5C,kBAAC1F,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,MAAQ,kBAAC,QAAD,OAC/I,kBAAClH,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAC/E9F,QAAS,kBAAM,EAAKiS,QAAO,IAAOlM,SAAUzH,KAAKkD,MAAMyQ,QAAS3T,KAAKkD,MAAMyQ,OAAU,kBAACjD,GAAA,EAAD,CAAkBpP,KAAM,KAAW,kBAAC,YAAD,OAE9H,kBAACqH,EAAA,EAAD,CACIoQ,YAAatZ,IAAKC,EAAE,UACpBsB,UAAWhB,KAAKkD,MAAMwH,OACtBtG,MAAOpE,KAAKkD,MAAMwH,OAClBrG,SAAU,SAAAvF,GAAC,OAAI,EAAK+E,SAAS,CAAC6G,OAAQ5L,EAAEN,OAAO4F,WAEnD,kBAAC+B,EAAA,EAAD,CAAY3E,aAAW,QAAQR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC6G,OAAQ,OAAM,kBAAC,UAAD,CAAWgF,SAAS,WACpI1P,KAAKgZ,gBACLhZ,KAAK8Q,gBACL9Q,KAAK+Q,mBACL/Q,KAAKuJ,oBACLvJ,KAAKiZ,2B,GAnlBQxW,aAomBfC,gBAvuBA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPoF,OAAQ,QAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,GACbwF,OAAQ,OACR4I,SAAU,UAEdJ,UAAW,CACPxI,OAAQ,oBACR4I,SAAU,OACV9I,SAAU,KAEdwC,OAAQ,CACJpG,OAAQ,GAEZkD,OAAQ,CACJ5E,YAAa,IAEjBiV,cAAe,CACXjV,YAAa,IAEjBsW,eAAgB,CACZjI,SAAU,WACVC,MAAO,EACPC,IAAK,GAETmH,YAAa,CACTrH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXqH,cAAe,CACXtH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEXgH,YAAa,GAGbN,cAAc,CACVvV,QAAS,eACTgG,cAAe,SACfrF,MAAO,IAEX0V,SAAU,CACNtH,UAAW,UAEfjC,gBAAgB,CACZiC,UAAW,UAEfuG,QAAS,CACLvP,OAAQ,GACRpF,MAAO,OACPiO,SAAU,YAEdkH,mBAAoB,CAChB9V,QAAS,QACT+O,UAAW,SACX1B,SAAU,IAEdmH,eAAgB,CACZzF,UAAW,SACX1B,SAAU,GACVjD,YAAa,GACbpK,QAAS,gBAEbgW,gBAAiB,CACbpH,SAAU,WACVE,IAAK,EACLgI,KAAM,GAEVrC,mBAAoB,CAChB9T,MAAO,IAEXiV,iBAAkB,CACd5V,QAAS,eACTW,MAAO,sBAEX2N,aAAc,CACV3B,WAAYrM,EAAM0O,QAAQC,QAAQC,MAClCxO,QAAS,GACTxB,MAAOoB,EAAM0O,QAAQC,QAAQE,cAEjC+F,YAAa,CACTnG,UAAW,UAEfsE,WAAY,CACR1S,MAAO,IAGX4T,WAAY,CACR3F,SAAU,WACV7I,OAAQ,IAEZ4O,eAAgB,CACZ1N,WAAY,EACZzG,UAAW,GACXR,QAAS,eACTqN,SAAU,GACV1M,MAAO,sBAEXiU,kBAAoB,CAChBvH,SAAU,EACV0B,UAAW,SACX/O,QAAS,SAEbwT,eAAgB,CACZvM,WAAY,GAEhB8N,iBAAkB,CACdnG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPnO,QAAS,GAEbqW,eAAgB,CACZnI,SAAU,WACVE,IAAK,GACLD,MAAO,GACPnO,QAAS,GAEbiT,oBAAqB,CACjBnT,UAAW,MAwmBJH,CAAmB0Q,IClwB5B3B,GAAiB,CACnB4H,MAAO,CAAC9X,MAVI,UAUYT,KAAM6Q,aAAQtR,KAAM,UAC5CiZ,WAAY,CAAC/X,MATA,UASiBT,KAAM4R,cAAUrS,KAAM,UACpDkZ,IAAK,CAAChY,MATO,UASUT,KAAM4R,cAAUrS,KAAM,aAE7CwR,qBAAsB,CAACtQ,MAZV,UAY2BT,KAAMgR,oBAAiBzR,KAAM,0BACrE0R,2BAA4B,CAACxQ,MAfjB,UAeiCT,KAAMkR,mBAAQ3R,KAAM,gCACjE4R,2BAA4B,CAAC1Q,MAfhB,OAeiCT,KAAMoR,qBAAU7R,KAAM,gCAEpEgS,oBAAqB,CAAC9Q,MAlBV,UAkB0BT,KAAMkR,mBAAQ3R,KAAM,wBAC1DiS,oBAAqB,CAAC/Q,MAlBT,OAkB0BT,KAAMoR,qBAAU7R,KAAM,wBAE7DkS,SAAU,CAAChR,MAnBE,UAmBeT,KAAM0R,YAAWnS,KAAM,aAEnDsS,0BAA2B,CAACpR,MAvBhB,UAuBgCT,KAAMkR,mBAAQ3R,KAAM,+BAChEuS,0BAA2B,CAACrR,MAvBf,OAuBgCT,KAAMoR,qBAAU7R,KAAM,+BAEnEwS,qBAAsB,CAACtR,MAtBT,UAsB2BT,KAAMgS,gBAAiBzS,KAAM,0BACtE0S,sBAAuB,CAACxR,MAvBV,UAuB4BT,KAAMgS,gBAAiBzS,KAAM,0BAEvE2S,aAAc,CAACzR,MA3BF,UA2BmBT,KAAMmS,aAAU5S,KAAM,kBACtD6S,aAAc,CAAC3R,MA1BD,UA0BmBT,KAAMmS,aAAU5S,KAAM,oBAGrD8S,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,UA6I9GqG,G,kDACF,WAAYja,GAAQ,IAAD,6BACf,cAAMA,GAEDkS,GAAe4B,aAChB7M,OAAOgH,KAAKiE,IAAgBhE,SAAQ,SAAA9C,GAAC,OAAI8G,GAAe9G,GAAGtK,KAAOZ,IAAKC,EAAE+R,GAAe9G,GAAGtK,SAC3FoR,GAAe4B,YAAa,GAGhC,EAAKnQ,MAAQ,CACT6J,gBAAiB,GACjBD,OAAQ,GACRyG,eAAgB,GAChBC,SAAU,GAEVjL,cAAc,EACdkL,iBAAkB,GAClBvG,QAAS,GACTwG,QAAS,GACT1N,QAAS,GACT0E,OAAQ,GACRyC,SAAS,EACTwG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjB,EAAKC,aAAe,KACpB,EAAKC,YAAc,KACnB,EAAKC,iBAAmB,EACxB,EAAKjH,gBAAkB,GAEvB,EAAKkH,gBAAkB,KACvB,EAAKC,mBAAqB,EAAKC,cAAcnK,KAAnB,iBAC1B,EAAKoK,oBAAsB,EAAKC,eAAerK,KAApB,iBAE3B,EAAKzK,MAAMiE,OAAOC,UAAlB,yBAA8C,EAAKlE,MAAMmE,YAAzD,YAAwE,EAAKnE,MAAMU,WAAY0D,MAAK,SAAA1B,GAChG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAChGjB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOyE,SAAaZ,GAAUA,EAAMa,KAGjE,EAAK4P,SAFL,EAAK9P,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAA6ByN,SAAS,EAAOuG,QAAS,WAtClF,E,mDA8CZY,GAAa,IAAD,OACXC,KAAKC,MAAQxU,KAAKyU,WAAa,MAInCzU,KAAKyU,WAAaF,KAAKC,MAEnBF,EACAtU,KAAK6D,SAAS,CAACsJ,SAAS,EAAMwG,QAAQ,IAEtC3T,KAAK6D,SAAS,CAAC8P,QAAQ,IAG3B3T,KAAK+T,YAAcrF,YAAW,WAC1B,EAAKqF,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKzQ,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMiE,OAAOuK,OAAO/N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,cAAe,MAAM,SAAAiK,GAC9F,EAAK6J,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KAEf,EAAKE,kBACA,EAAKxE,OAAO,EAAKwE,gBAAiB/J,IACnC,EAAKrG,SAAS,CAACmC,QAASvG,IAAKC,EAAE,0BAA2B,EAAKuU,mBAEnE,EAAKA,gBAAkB,MAG3B,EAAKpQ,SAAS,CAAC6P,QAASxJ,EAAMiD,SAAS,EAAOD,QAAS,GAAIyG,QAAQ,U,oCAI7D1N,EAAI/C,GAAQ,IAAD,OACjBA,IAAuB,IAAdA,EAAMiC,MAA8B,IAAdjC,EAAMa,MACjC/D,KAAK6U,UAAUD,aAAa5U,KAAK6U,UACrC7U,KAAK6U,SAAWnG,YAAW,WACvB,EAAKmG,SAAW,KAChB,EAAKlB,WACN,Q,qCAII1N,EAAI/C,GACfA,IAAuB,IAAdA,EAAMiC,KAAgBjC,EAAMa,KAAO/D,KAAK6D,SAAS,CAACmC,QAAS9C,EAAMa,Q,2CAI1E/D,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,kBAAmGD,KAAKkU,oBACxGlU,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKoU,uB,6CAI9GpU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,kBAAqGD,KAAKkU,oBAC1GlU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKoU,qBAC5GpU,KAAK8T,eACLc,aAAa5U,KAAK8T,cAClB9T,KAAK8T,aAAe,Q,qCAIb7N,GACXjG,KAAKT,MAAMiE,OAAOuK,OAAO/N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAUgG,K,iCAGhFA,EAAI6O,GACX,IAAM5H,EAAUhO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMgK,WACxB,IAAzBA,EAAQrC,QAAQ5E,IAChBiH,EAAQlC,KAAK/E,GACbjG,KAAK6D,SAAS,CAACqJ,YAAU,kBAAM4H,GAAMA,QAErCA,GAAMA,M,oCAIA7O,GACV,IAAMiH,EAAUhO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMgK,UAC/CtC,EAAMsC,EAAQrC,QAAQ5E,IAEf,IAAT2E,IACAsC,EAAQpC,OAAOF,EAAK,GACpB5K,KAAK6D,SAAS,CAACqJ,e,6BAIhBjH,EAAIyN,GAAU,IAAD,OAEVqB,GADNrB,EAAUA,GAAW1T,KAAKkD,MAAMwQ,SACTxF,MAAK,SAAA8G,GAAG,OAAIA,EAAIyE,QAAUxT,KACjD,QAAI8O,IACA/U,KAAKT,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GACF,IAAIkM,EAAY4G,EAAOzV,KACE,kBAAd6O,GAA0BA,IACjCA,EAAYA,EAAU1O,IAAKkP,gBAAkBR,EAAUS,IAE3D,EAAK7B,gBAAkBoB,EACvB,EAAKtK,SAAS,CAACiJ,OAAQ7G,EAAI8G,gBAAiBoB,EAAWoF,eAAepF,QAEvE,K,kCAMHqF,GACRxT,KAAK6D,SAAS,CAAC2P,WAAUC,kBAAkB,M,iCAGnC,IAAD,OACHxN,EAAKjG,KAAKkD,MAAMsQ,SAEpBxT,KAAKwO,WAAWvI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAMuJ,iBAAiBpM,EAAK,EAAK1C,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAC3F,EAAK/O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WACF,EAAKE,SAAS,CAAC2P,SAAU,GAAIC,kBAAkB,EAAOI,YAAa5N,IAEnE,EAAK6N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKrF,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,oCAI/BwP,GAAM,IAAD,OAETM,EAAU,GAChB,IAAKN,EAAIM,QAEL,OADAZ,QAAQC,IAAI,wBACL,KAGXK,EAAIM,QAAQC,MAAK,SAAC5K,EAAG6K,GACjB,OAAI7K,IAAM6K,EAAU,EACV,UAAN7K,GAAuB,EACjB,UAAN6K,EAAsB,EACnB,KAGXhP,OAAOgH,KAAKiE,IAAgBhE,SAAQ,SAAAvH,GAChC,IAAqC,IAAjC8O,EAAIM,QAAQzK,QAAQ3E,GAAgB,CACpC,IAAMuP,EAAOhE,GAAevL,GAAQpF,KACpCwU,EAAQtK,KAAM,0BAAM5E,IAAKF,EAAQrE,MAAO4P,GAAevL,GAAQ7F,MAAM,kBAACoV,EAAD,CAAMzU,UAAW,EAAKzB,MAAM0B,QAAQyU,WAAYtT,MAAO,CAACb,MAAOkQ,GAAevL,GAAQ3E,eAInK,IAAK,IAAIoJ,EAAI,EAAGA,EAAIqK,EAAIM,QAAQrH,OAAQtD,IAC/B8G,GAAeuD,EAAIM,QAAQ3K,KAC5B2K,EAAQtK,KAAM,0BAAM5E,IAAK4O,EAAIM,QAAQ3K,IAAKqK,EAAIM,QAAQ3K,KAG9D,OAAO2K,I,+BAGFK,GACL,IAAM/B,EAAW1U,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAM0Q,WAChDhJ,EAAMgJ,EAAS/I,QAAQ7K,KAAKkD,MAAMwQ,QAAQiC,GAASrW,OAC5C,IAATsL,EACAgJ,EAAS5I,KAAKhL,KAAKkD,MAAMwQ,QAAQiC,GAASrW,MAE1CsU,EAAS9I,OAAOF,EAAK,GAEzB5K,KAAK6D,SAAS,CAAC+P,e,qCAGJ3N,EAAIgQ,EAAMhS,GAAO,IAAD,OAC3BjE,KAAKwO,WAAWvI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAYF,OAXA6C,IAAMgL,gBAAgB7N,OAAK8N,EAAWkG,EAAMhS,EAAM,EAAK1E,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAEpH,EAAKpL,MAAM2Q,cAAgB5N,IAC3B,EAAKpC,SAAS,CAACgQ,YAAa5N,IAC5B,EAAK6N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKvU,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK8K,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,uCAI5BwP,EAAKW,EAAS1P,EAAIhC,GAAO,IAAD,OACrC,IAAa,IAATA,EAAgB,CAIhB,IAHA,IAAM2R,EAAQ,CACT,kBAAC9M,EAAA,EAAD,CAAU1C,IAAI,IAAIhC,MAAM,KAAI,4BAAK3E,IAAKC,EAAE,cAEpCsO,EAAI,EAAGA,EAAImF,GAAWlF,OAAQD,IACnC4H,EAAM5K,KAAM,kBAAClC,EAAA,EAAD,CAAW1C,IAAK+M,GAAWnF,GAAI5J,MAAO+O,GAAWnF,IAAI,4BAAKvO,IAAKC,EAAEyT,GAAWnF,OAE5F,OACI,kBAACvF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQtE,MAAOH,GAAQ,IAAKI,SAAU,SAAAvF,GAAC,OAAI,EAAKiX,eAAe9P,OAAI8J,EAAWjR,EAAEN,OAAO4F,SAASwR,GAChG,kBAAC7M,EAAA,EAAD,CAAgB/H,UAAWhB,KAAKT,MAAM0B,QAAQ+U,qBAAsBvW,IAAKC,EAAE,WAGnF,MAAO,K,qCAIAsV,EAAKW,GAChB,IAAM3W,EAAS,GACTiC,EAAUjB,KAAKT,MAAM0B,QAErBgF,EAAK+O,EAAI0E,KAAKC,MACdra,EAAO0V,EAAI4E,KAsDjB,OAjDA5a,EAAOgM,KAAM,yBAAK5E,IAAK,MAAQH,EAAIjF,UAAWC,EAAQ2V,WAAYxU,MAAO,CAAC4M,WAhcpD,YAiclB,yBAAKhO,UAAWC,EAAQ+V,gBAAiB1X,EAAKua,eAC9C,yBAAK7Y,UAAWC,EAAQ6Y,eACpB,6BAAM9E,EAAI0E,KAAKC,OACd3E,EAAI0E,KAAKK,OAAS/E,EAAI0E,KAAKK,QAAU/E,EAAI0E,KAAKC,MAAS,yBAAK3Y,UAAWC,EAAQ+Y,iBAAkBhF,EAAI0E,KAAKK,OAAgB,QAKnI/E,EAAIiF,WAAWxM,SAAQ,SAAAzJ,GACnBhF,EAAOgM,KAAM,yBAAK5E,IAAK,MAAQpC,EAAK2V,MAAO3Y,UAAWC,EAAQ2V,WAAYxU,MAAO,CAAC4M,WA1chE,YA2cd,yBAAKhO,UAAWC,EAAQ+V,gBAAiBhT,EAAK1E,KAAKua,eACnD,yBAAK7Y,UAAWC,EAAQ6Y,eACpB,6BAAM9V,EAAK2V,OACV3V,EAAK+V,OAAS/V,EAAK+V,QAAU/V,EAAK2V,MAAS,yBAAK3Y,UAAWC,EAAQ+Y,iBAAkBhW,EAAK+V,OAAgB,WAmChH/a,I,mCAGEgW,EAAKW,GAAU,IAAD,OAEjB/B,GAAsD,IAA3C5T,KAAKkD,MAAM0Q,SAAS/I,QAAQmK,EAAI1V,MAC7C0P,EAAc2G,EAAU,EAAK,UAAY,UACvCzI,GAAqD,IAA3ClN,KAAKkD,MAAMgK,QAAQrC,QAAQmK,EAAIyE,OAS/C,OARIvM,EACA8B,EA3fU,YA4fHgG,EAAIyE,QAAUzZ,KAAKkD,MAAM2Q,cAChC7E,EA3fe,WAggBZ,CACF,yBAAK5I,IAAK,OAASuP,EAAS3U,UAAWhB,KAAKT,MAAM0B,QAAQ0W,QAASvV,MAAO,CAAC4M,eACxE,yBAAKhO,UAAWhB,KAAKT,MAAM0B,QAAQ2W,eAAgBjC,EAAU,EAA7D,KACA,kBAACxP,EAAA,EAAD,CAAYnF,UAAWhB,KAAKT,MAAM0B,QAAQ4W,cAAenW,QAAS,kBAAM,EAAKoW,SAASnC,KACjFX,EAAIiF,WAAWhM,OACX,kBAAC8J,GAAA,EAAD,CAAOC,aAAchD,EAAIiF,WAAWhM,OAAQ1M,MAAM,WAAWqS,EAAY,kBAAC,eAAD,MAAoB,kBAAC,uBAAD,OAC7FA,EAAY,kBAAC,eAAD,MAAoB,kBAAC,uBAAD,OAEzC,yBAAK5S,UAAWhB,KAAKT,MAAM0B,QAAQgX,iBAAkB7V,MAAO,CAACC,QAAS,eAAgB4O,SAAU,aAC5F,0BAAMjQ,UAAWhB,KAAKT,MAAM0B,QAAQiX,aAAclD,EAAI1V,MACtD,0BAAM0B,UAAWhB,KAAKT,MAAM0B,QAAQkX,oBAAqBnD,EAAIkF,aAC5DhN,EAAW,kBAACwD,GAAA,EAAD,CAAkB1P,UAAWhB,KAAKT,MAAM0B,QAAQoX,gBAAiB/W,KAAM,KAAS,MAEhG,0BAAMN,UAAWhB,KAAKT,MAAM0B,QAAQ4V,gBAAiB7W,KAAK+W,cAAc/B,IACxE,kBAAC7O,EAAA,EAAD,CAAY3E,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQqX,YAAa5W,QAAS,kBAAM,EAAK+N,OAAOuF,EAAIyE,SAAQ,kBAAC,SAAD,CAAU/J,SAAS,YACnI,kBAACvJ,EAAA,EAAD,CAAY3E,aAAW,SAASR,UAAWhB,KAAKT,MAAM0B,QAAQsX,cAAe7W,QAAS,kBAAM,EAAK2V,YAAYrC,EAAIyE,SAAQ,kBAAC,WAAD,CAAY/J,SAAS,aAGlJkE,EAAW5T,KAAKwY,eAAexD,EAAKW,GAAW,Q,sCAItC,IAAD,OACZ,OAAI3V,KAAKkD,MAAM8C,QACH,kBAAC,IAAD,CAAeM,KAAMtG,KAAKkD,MAAM8C,QAASF,QAAS,kBAAM,EAAKjC,SAAS,CAACmC,QAAS,QAEjF,O,sCAIClH,GAAI,IAAD,OACfA,GAAKA,EAAE2Z,iBAEPzY,KAAKwO,WAAWxO,KAAKkD,MAAM4J,QAAQ,WAC/B,IAAM7G,EAAK,EAAK/C,MAAM4J,OACtB,EAAKjJ,SAAS,CAACiJ,OAAQ,GAAIyG,eAAgB,GAAIM,YAAa5N,IAE5D,EAAK6N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKvU,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAMgL,gBAAgB7N,EAAK,EAAK8K,qBAAiBgD,OAAWA,EAAW,EAAKxQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UACtI,EAAK/O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK8K,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,yCAIzB,IAAD,OACf,OAAIxF,KAAKkD,MAAM4J,OACH,kBAACkD,GAAA,EAAD,CACJrO,MAAM,EACNwG,SAAS,KACT8H,WAAW,EACXnK,QAAS,WACL,EAAKiH,gBAAkB,KACvB,EAAKlJ,SAAS,CAACiJ,OAAQ,GAAIC,gBAAiB,MAEhDmD,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,GAAA,EAAD,CAAanK,GAAG,wBAAwBjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqBM,KAAKkD,MAAMqQ,iBACnG,kBAAClD,GAAA,EAAD,KACI,2BAAG,qCAAH,IAAoB,0BAAMrP,UAAWhB,KAAKT,MAAM0B,QAAQyX,UAAW1Y,KAAKkD,MAAM4J,SAC9E,kBAAC5I,EAAA,EAAD,CACI9B,MAAO,CAACY,MAAO,QACfmB,MAAO1E,IAAKC,EAAE,cACdiZ,UAAW,SAAA7Z,GAAC,OACM,KAAdA,EAAEyM,SAAkB,EAAKiF,gBAAgB1R,IAC7CuF,SAAU,SAAAvF,GAAC,OAAI,EAAKiO,gBAAkBjO,EAAEN,OAAO4F,OAC/CwU,aAAc5Y,KAAKkD,MAAM6J,gBACzBuD,WAAY7Q,IAAKC,EAAE,gDACnB4E,OAAO,YAGf,kBAACiM,GAAA,EAAD,KACI,kBAACrL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAK8O,mBAAmBjP,MAAM,UAAUkP,WAAS,GAAEhR,IAAKC,EAAE,OACjF,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,WACb,EAAKqL,gBAAkB,KACvB,EAAKlJ,SAAS,CAACiJ,OAAQ,GAAIC,gBAAiB,OAC5CtN,IAAKC,EAAE,aAIZ,O,4CAIQ,IAAD,OAClB,OAAIM,KAAKkD,MAAMuQ,iBACH,kBAACzD,GAAA,EAAD,CACJrO,MAAM,EACNwG,SAAS,KACT8H,WAAW,EACXnK,QAAS,kBAAM,EAAKjC,SAAS,CAAC4P,iBAAkB,MAChDvD,kBAAgB,4BAChBC,mBAAiB,mCAEjB,kBAACC,GAAA,EAAD,CAAanK,GAAG,6BAA6BjG,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,6BACxE,kBAAC2Q,GAAA,EAAD,KACI,2BAAI5Q,IAAKC,EAAE,mBAEf,kBAAC6Q,GAAA,EAAD,KACI,kBAACrL,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKkK,YAAYrK,MAAM,UAAUkP,WAAS,GAAEhR,IAAKC,EAAE,OAC1E,kBAACwF,EAAA,EAAD,CAAQxD,QAAS,kBAAM,EAAKmC,SAAS,CAAC4P,iBAAkB,OAAOhU,IAAKC,EAAE,aAIvE,O,0CAIM,IAAD,OAChB,OAAIM,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAU,GACVC,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAACF,EAAU5J,GACb,EAAKuE,SAAS,CAAC0E,cAAc,IAE7B,EAAKhJ,MAAMiE,OAAOC,UAAUyF,GACvBvF,MAAK,SAAA1B,GACF,GAAIA,EAAK,CACL,IAAM3C,EAAOwF,IAAM+J,qBAAqB5M,EAAK,KAAM,CAAC6M,SAAUrP,IAAKkP,gBACnE7J,IAAMgL,gBAAgB7N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgB0K,QAAQ,UAAW,UAAM2F,OAAWA,EAAW,EAAKxQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAChL,EAAKE,WAAWvM,EAAIlC,KACpB,EAAKkU,gBAAkBhS,EAAIlC,IAEvB,EAAKmD,MAAM2Q,cAAgB5R,EAAIlC,MAC/B,EAAK8D,SAAS,CAACgQ,YAAa5R,EAAIlC,MAChC,EAAK+T,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGP,EAAKvU,MAAMiE,OAAO8B,UAAUrD,EAAIlC,IAAKkC,GAChC0B,MAAK,kBAAM,EAAK8K,eAAexM,EAAIlC,QACnCwF,OAAM,SAAAC,GAAG,OAAI,EAAK3B,SAAS,CAACmC,QAASR,YAE1C,EAAK3B,SAAS,CAACmC,QAASvG,IAAKC,EAAE,sBAM5C,O,sCAOX,IAFA,IAAMgL,EAAS1K,KAAKkD,MAAMwH,OAAOmO,cAC3B7Z,EAAS,GACNgP,EAAI,EAAGA,EAAIhO,KAAKkD,MAAMwQ,QAAQzF,OAAQD,IACvChO,KAAKkD,MAAMwH,SAAwE,IAA9D1K,KAAKkD,MAAMwQ,QAAQ1F,GAAG1O,KAAKuZ,cAAchO,QAAQH,IAC1E1L,EAAOgM,KAAKhL,KAAK8Y,aAAa9Y,KAAKkD,MAAMwQ,QAAQ1F,GAAIA,IAEzD,OAAQ,yBAAK5H,IAAI,cAAcpF,UAAWhB,KAAKT,MAAM0B,QAAQ2P,WAAY5R,K,+BAGnE,IAAD,OACL,OAAIgB,KAAKkD,MAAMiK,QACH,kBAACuD,GAAA,EAAD,CAAmBtK,IAAI,kBAI/B,0BAAMA,IAAI,QAAQpF,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KAC5C,kBAAC1F,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,MAAQ,kBAAC,QAAD,OAC/I,kBAAClH,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAC/E9F,QAAS,kBAAM,EAAKiS,QAAO,IAAOlM,SAAUzH,KAAKkD,MAAMyQ,QAAS3T,KAAKkD,MAAMyQ,OAAU,kBAACjD,GAAA,EAAD,CAAkBpP,KAAM,KAAW,kBAAC,YAAD,OAE9H,kBAACqH,EAAA,EAAD,CACIoQ,YAAatZ,IAAKC,EAAE,UACpBsB,UAAWhB,KAAKkD,MAAMwH,OACtBtG,MAAOpE,KAAKkD,MAAMwH,OAClBrG,SAAU,SAAAvF,GAAC,OAAI,EAAK+E,SAAS,CAAC6G,OAAQ5L,EAAEN,OAAO4F,WAEnD,kBAAC+B,EAAA,EAAD,CAAY3E,aAAW,QAAQR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC6G,OAAQ,OAAM,kBAAC,UAAD,CAAWgF,SAAS,WACpI1P,KAAKgZ,gBACLhZ,KAAK8Q,gBACL9Q,KAAK+Q,mBACL/Q,KAAKuJ,oBACLvJ,KAAKiZ,2B,GA5hBKxW,aA6iBZC,gBAxrBA,SAAAC,GAAK,MAAK,CACrBoE,IAAK,CACD/D,MAAO,OACPoF,OAAQ,QAEZnB,OAAQ,CACJ5E,QAAS,eACTgG,cAAe,MACfzF,YAAa,GACbwF,OAAQ,OACR4I,SAAU,UAEdJ,UAAW,CACPxI,OAAQ,oBACR4I,SAAU,OACV9I,SAAU,KAEdwC,OAAQ,CACJpG,OAAQ,GAEZkD,OAAQ,CACJ5E,YAAa,IAEjBiV,cAAe,CACXjV,YAAa,IAEjBsW,eAAgB,CACZjI,SAAU,WACVC,MAAO,EACPC,IAAK,GAETmH,YAAa,CACTrH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXqH,cAAe,CACXtH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEXgH,YAAa,GAGbN,cAAc,CACVvV,QAAS,eACTgG,cAAe,SACfrF,MAAO,IAEX0V,SAAU,CACNtH,UAAW,UAEfjC,gBAAgB,CACZiC,UAAW,UAEfuG,QAAS,CACLvP,OAAQ,GACRpF,MAAO,OACPiO,SAAU,YAEdkH,mBAAoB,CAChB9V,QAAS,QACT+O,UAAW,SACX1B,SAAU,IAEdmH,eAAgB,CACZzF,UAAW,SACX1B,SAAU,GACVjD,YAAa,GACbpK,QAAS,gBAEbgW,gBAAiB,CACbpH,SAAU,WACVE,IAAK,EACLgI,KAAM,GAEVrC,mBAAoB,CAChB9T,MAAO,IAEXiV,iBAAkB,CACd5V,QAAS,eACTW,MAAO,sBAEX2N,aAAc,CACV3B,WAAYrM,EAAM0O,QAAQC,QAAQC,MAClCxO,QAAS,GACTxB,MAAOoB,EAAM0O,QAAQC,QAAQE,cAEjC+F,YAAa,CACTnG,UAAW,UAEfsE,WAAY,CACR1S,MAAO,IAGX4T,WAAY,CACR3F,SAAU,WACV7I,OAAQ,IAEZ4O,eAAgB,CACZ1N,WAAY,EACZzG,UAAW,GACXqF,SAAU,IACV7F,QAAS,eACTqN,SAAU,GACVjD,YAAa,IAGjBqN,cAAgB,CACZpK,SAAU,GACV0B,UAAW,SACX/O,QAAS,eACTiH,WAAY,IAEhB0Q,gBAAkB,CACd5I,UAAW,SACX/O,QAAS,QACTd,MAAO,QAEXsU,eAAgB,CACZvM,WAAY,GAEhB8N,iBAAkB,CACdnG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPnO,QAAS,GAEbqW,eAAgB,CACZnI,SAAU,WACVE,IAAK,GACLD,MAAO,GACPnO,QAAS,GAEbiT,oBAAqB,CACjBnT,UAAW,MAijBJH,CAAmB8W,I,0VCjuB5BW,GAAa,CACfC,IAAKC,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAY/a,EAAZ,CAAmB+a,IAAKA,QACxDC,MAAOF,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAW/a,EAAX,CAAkB+a,IAAKA,QACzDE,MAAOH,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAW/a,EAAX,CAAkB+a,IAAKA,QACzDG,OAAQJ,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAmB/a,EAAnB,CAA0B+a,IAAKA,QAClEI,YAAaL,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAkB/a,EAAlB,CAAyB+a,IAAKA,QACtEK,KAAMN,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAU/a,EAAV,CAAiB+a,IAAKA,QACvDM,OAAQP,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAa/a,EAAb,CAAoB+a,IAAKA,QAC5DO,OAAQR,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAgB/a,EAAhB,CAAuB+a,IAAKA,QAC/DQ,UAAWT,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAe/a,EAAf,CAAsB+a,IAAKA,QACjES,SAAUV,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAc/a,EAAd,CAAqB+a,IAAKA,QAC/DU,SAAUX,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAkB/a,EAAlB,CAAyB+a,IAAKA,QACnEW,aAAcZ,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAiB/a,EAAjB,CAAwB+a,IAAKA,QACtEY,YAAab,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAW/a,EAAX,CAAkB+a,IAAKA,QAC/Da,OAAQd,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAY/a,EAAZ,CAAmB+a,IAAKA,QAC3Dc,UAAWf,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAiB/a,EAAjB,CAAwB+a,IAAKA,QACnEe,gBAAiBhB,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAY/a,EAAZ,CAAmB+a,IAAKA,QACpEgB,WAAYjB,sBAAW,SAAC9a,EAAO+a,GAAR,OAAgB,kBAAC,KAAD,iBAAgB/a,EAAhB,CAAuB+a,IAAKA,SAKjEiB,G,kDACF,WAAYhc,GAAQ,IAAD,8BACf,cAAMA,IACDic,WAAcC,IAAMC,YACzB,EAAKxY,MAAQ,CACT6J,gBAAiB,GACjBD,OAAQ,GACRyG,eAAgB,GAChBC,SAAU,GAEVjL,cAAc,EACdkL,iBAAkB,GAClBvG,QAAS,GACTwG,QAAS,GACT1N,QAAS,GACT0E,OAAQ,GACRyC,SAAS,EACTwG,QAAQ,EACRC,SAAU,GACVC,YAAa,GACb8H,QAAS,CACL,CAAC9Z,MAAO,KAAM+Z,MAAO,KAAMC,SAAU,QAASC,UAAW,CACrD3T,SAAU,QACV6I,SAAU,SACV+K,UAAW,cAEf,CAACla,MAAO,aAAc+Z,MAAO,kBAC7B,CAAC/Z,MAAO,UAAW+Z,MAAO,SAASC,SAAU,QAASC,UAAW,CAC7D3T,SAAU,OACV6I,SAAU,SACV+K,UAAW,cAEf,CAACla,MAAO,OAAQ+Z,MAAO,OAASI,OAAQ,CACpC,+BAAwC,wBACxC,oCAAwC,gBACxC,mCAAwC,eACxC,8BAAwC,SACxC,8BAAwC,SACxC,8BAAwC,SACxC,8BAAwC,SACxC,oCAAwC,eACxC,+BAAwC,UACxC,kCAAwC,aACxC,4BAAwC,OACxC,6BAAwC,QACxC,2BAAwC,MACxC,iCAAwC,YACxC,8BAAwC,SACxC,4BAAwC,OACxC,8BAAwC,SACxC,4BAAwC,OACxC,8BAAwC,SACxC,6BAAwC,QACxC,4BAAwC,OACxC,2BAAwC,MACxC,iCAAwC,YACxC,8BAAwC,SACxC,4BAAwC,OACxC,+BAAwC,UACxC,oCAAwC,eACxC,6BAAwC,QACxC,sCAAwC,kBACxC,8BAAwC,SACxC,+BAAwC,UACxC,8BAAwC,SACxC,+BAAwC,UACxC,iCAAwC,YACxC,8BAAwC,SACxC,kCAAwC,aACxC,8BAAwC,SACxC,6BAAwC,QACxC,8BAAwC,SACxC,mCAAwC,eACxC,8BAAwC,WAE5C,CAAEna,MAAO,iBAAkB+Z,MAAO,gBAAkBI,OAAQ,CAExD,mCAAwC,aAExC,iDAAkD,2BAClD,iDAAkD,mBAElD,iCAAwC,WAGxC,mCAAwC,aACxC,8BAAwC,QACxC,8BAAwC,QACxC,kCAAwC,YAExC,8BAAwC,QAExC,kCAAwC,YACxC,sEAA4E,eAC5E,qEAA4E,kBAC5E,0DAA4E,kBAC5E,yEAA4E,qBAC5E,wEAA4E,wBAC5E,qEAA4E,4BAE5E,gCAAwC,UACxC,+BAAwC,WAG5C,CAACna,MAAO,aAAc+Z,MAAO,oBAAuBE,UAAW,CACvD3T,SAAU,QACV6I,SAAU,SACV+K,UAAW,aAEfE,cAAe,SAAA1c,GAAK,OAAK,8BAAU2c,KAAK,KAAKC,KAAK,KAC5C/X,MAAO7E,EAAM6E,MACbC,SAAU,SAAAvF,GAAC,OAAIS,EAAM8E,SAASvF,EAAEN,OAAO4F,YAGjD,CAACvC,MAAO,OAAQ+Z,MAAO,WAAYC,SAAU,SAC7C,CAACha,MAAO,cAAe+Z,MAAO,YAAaC,SAAU,QAAQC,UAAW,CACpE3T,SAAU,OACV6I,SAAU,SACV+K,UAAW,cAEf,CAACla,MAAO,qBAAsB+Z,MAAO,iBAAmBE,UAAW,CAC3D3T,SAAU,OACV6I,SAAU,SACV+K,UAAW,aAEfE,cAAe,SAAA1c,GAAK,OAChB,+EAAyD,6BACrD,8BAAU2c,KAAK,KAAKC,KAAK,KACrB/X,MAAO7E,EAAM6E,MACbC,SAAU,SAAAvF,GAAC,OAAIS,EAAM8E,SAASvF,EAAEN,OAAO4F,UAH/C,OASR,CAAEvC,MAAO,sBAAuB+Z,MAAO,kBAAmBE,UAAW,CACjE3T,SAAU,OACV6I,SAAU,SACV+K,UAAW,aAEXE,cAAe,SAAA1c,GAAK,OAChB,4EAAsD,6BAClD,8BAAU2c,KAAK,KAAKC,KAAK,KACrB/X,MAAO7E,EAAM6E,MACbC,SAAU,SAAAvF,GAAC,OAAIS,EAAM8E,SAASvF,EAAEN,OAAO4F,UAH/C,SAWhB,EAAK0P,aAAsB,KAC3B,EAAKC,YAAsB,KAC3B,EAAKC,iBAAsB,EAC3B,EAAKjH,gBAAsB,GAE3B,EAAKkH,gBAAsB,KAC3B,EAAKC,mBAAsB,EAAKC,cAAcnK,KAAnB,iBAC3B,EAAKoK,oBAAsB,EAAKC,eAAerK,KAApB,iBAE3B,EAAKzK,MAAMiE,OAAOC,UAAlB,yBAA8C,EAAKlE,MAAMmE,YAAzD,YAAwE,EAAKnE,MAAMU,WAAY0D,MAAK,SAAA1B,GAChG,EAAK1C,MAAMiE,OAAOI,SAAlB,yBAA6C,EAAKrE,MAAMmE,YAAxD,YAAuE,EAAKnE,MAAMU,SAAlF,WAAoG0D,MAAK,SAAAT,GAChGjB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOyE,SAAaZ,GAAUA,EAAMa,KAGjE,EAAK4P,SAFL,EAAK9P,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAA6ByN,SAAS,EAAOuG,QAAS,WAnKlF,E,mDA2KZY,GAAa,IAAD,OACXC,KAAKC,MAAQxU,KAAKyU,WAAa,MACnCzU,KAAKyU,WAAaF,KAAKC,MACnBF,EACAtU,KAAK6D,SAAS,CAACsJ,SAAS,EAAMwG,QAAQ,IAEtC3T,KAAK6D,SAAS,CAAC8P,QAAQ,IAE3Be,QAAQC,IAAI,gBACZ3U,KAAK+T,YAAcrF,YAAW,WAC1BgG,QAAQC,IAAI,mBACZ,EAAKZ,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKzQ,SAAS,CAACmC,QAASvG,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMiE,OAAOuK,OAAO/N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,WAAY,MAAM,SAAAiK,GAC3F,EAAK6J,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KACf,EAAKE,kBACA,EAAKxE,OAAO,EAAKwE,gBAAiB/J,IACnC,EAAKrG,SAAS,CAACmC,QAASvG,IAAKC,EAAE,0BAA2B,EAAKuU,mBAEnE,EAAKA,gBAAkB,MAE3BS,QAAQC,IAAI,oBAEZ,EAAK9Q,SAAS,CAAC6P,QAASxJ,EAAMiD,SAAS,EAAOD,QAAS,GAAIyG,QAAQ,U,oCAI7D1N,EAAI/C,GAAQ,IAAD,OACrBwR,QAAQC,IAAR,iBAAsB1O,EAAtB,YAA4B/C,EAAQA,EAAMa,IAAM,IAAMb,EAAMiC,IAAM,SAC9DjC,IAAuB,IAAdA,EAAMiC,MAA8B,IAAdjC,EAAMa,MACjC/D,KAAK6U,UAAUD,aAAa5U,KAAK6U,UACrC7U,KAAK6U,SAAWnG,YAAW,WACvB,EAAKmG,SAAW,KAChB,EAAKlB,WACN,O,qCAIIzQ,GACXA,IAAuB,IAAdA,EAAMiC,KAAgBjC,EAAMa,KAAO/D,KAAK6D,SAAS,CAACmC,QAAS9C,EAAMa,Q,2CAI1E/D,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,oBAAqGD,KAAKkU,oBAC1GlU,KAAKT,MAAMiE,OAAO6G,eAAlB,UAAoCrK,KAAKT,MAAMmE,YAA/C,YAA8D1D,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKoU,uB,6CAI9GpU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,oBAAuGD,KAAKkU,oBAC5GlU,KAAKT,MAAMiE,OAAO8G,iBAAlB,UAAsCtK,KAAKT,MAAMmE,YAAjD,YAAgE1D,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKoU,qBAC5GpU,KAAK8T,eACLc,aAAa5U,KAAK8T,cAClB9T,KAAK8T,aAAe,Q,qCAIb7N,GACXjG,KAAKT,MAAMiE,OAAOuK,OAAO/N,KAAKT,MAAMmE,YAAc,IAAM1D,KAAKT,MAAMU,SAAU,SAAUgG,K,iCAGhFA,EAAI6O,GACX,IAAM5H,EAAUhO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMgK,WACxB,IAAzBA,EAAQrC,QAAQ5E,IAChBiH,EAAQlC,KAAK/E,GACbjG,KAAK6D,SAAS,CAACqJ,YAAU,kBAAM4H,GAAMA,QAErCA,GAAMA,M,oCAIA7O,GACV,IAAMiH,EAAUhO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKkD,MAAMgK,UAC/CtC,EAAMsC,EAAQrC,QAAQ5E,IAEf,IAAT2E,IACAsC,EAAQpC,OAAOF,EAAK,GACpB5K,KAAK6D,SAAS,CAACqJ,e,6BAIhBjH,EAAIyN,GAAU,IAAD,OAEVqB,GADNrB,EAAUA,GAAW1T,KAAKkD,MAAMwQ,SACTxF,MAAK,SAAA8G,GAAG,OAAIA,EAAI/O,KAAOA,KAC9C,QAAI8O,IACA/U,KAAKT,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GACF,IAAIkM,EAAY4G,EAAO1V,QAAU0V,EAAO1V,OAAO8O,UAAY4G,EAAO1V,OAAO8O,UAAY4G,EAAOhV,IACnE,kBAAdoO,GAA0BA,IACjCA,EAAYA,EAAU1O,IAAKkP,gBAAkBR,EAAUS,IAE3D,EAAK7B,gBAAkBoB,EACvB,EAAKtK,SAAS,CAACiJ,OAAQ7G,EAAI8G,gBAAiBoB,EAAWoF,eAAgBzO,IAAM+J,qBAAqB5M,EAAK,KAAM,CAAC6M,SAAUrP,IAAKkP,sBAE9H,K,iCAMH,IAAD,OACH1I,EAAKjG,KAAKkD,MAAMsQ,SAEpBxT,KAAKwO,WAAWvI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAMuJ,iBAAiBpM,EAAK,EAAK1C,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAC3F,EAAK/O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WACF,EAAKE,SAAS,CAAC2P,SAAU,GAAIC,kBAAkB,EAAOI,YAAa5N,IAEnE,EAAK6N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKrF,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,uCAI5BS,EAAIhC,GAAO,IAAD,OAEvB,IAAa,IAATA,EAAgB,CAKhB,IAJA,IAAM2R,EAAQ,CACT,kBAAC9M,EAAA,EAAD,CAAU1C,IAAI,IAAIhC,MAAM,IAAG,4BAAK3E,IAAKC,EAAE,aACvC,kBAACoJ,EAAA,EAAD,CAAU1C,IAAI,OAAOhC,MAAM,UAAU3E,IAAKC,EAAE,gBAExCsO,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3B4H,EAAM5K,KAAM,kBAAClC,EAAA,EAAD,CAAW1C,IAAK4H,EAAEpO,WAAYwE,MAAO4J,EAAEpO,YAAaoO,EAApD,MAEhB,OAAQ,kBAACvF,EAAA,EAAD,CAAazH,UAAWhB,KAAKT,MAAM0B,QAAQ4U,gBAC/C,kBAACnN,EAAA,EAAD,CAAQ1H,UAAWhB,KAAKT,MAAM0B,QAAQ6U,qBAAsB1R,OAAQH,GAAQ,IAAIrE,WAAYyE,SAAU,SAAAvF,GAAC,OAAI,EAAKiX,eAAe9P,EAAInH,EAAEN,OAAO4F,SAASwR,GACrJ,kBAAC7M,EAAA,EAAD,CAAgB/H,UAAWhB,KAAKT,MAAM0B,QAAQ+U,qBAAsBvW,IAAKC,EAAE,WAG/E,OAAO,O,qCAIAuG,EAAIgQ,EAAMhS,GAAO,IAAD,OAC3BjE,KAAKwO,WAAWvI,GAAI,WAChB,EAAK1G,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAYF,OAXA6C,IAAMgL,gBAAgB7N,OAAK8N,EAAWkG,EAAMhS,EAAM,EAAK1E,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAEpH,EAAKpL,MAAM2Q,cAAgB5N,IAC3B,EAAKpC,SAAS,CAACgQ,YAAa5N,IAC5B,EAAK6N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKvU,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK8K,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,uCAI5B4W,EAASC,GAAU,IAAD,OAC/Brc,KAAKwO,WAAW4N,EAAQnW,IAAI,WACxB,EAAK1G,MAAMiE,OAAOC,UAAU2Y,EAAQnW,IAC/BtC,MAAK,SAAA1B,GACF,IAAKA,IAAQA,EAAI5C,OACb,OAAO,EAAKwE,SAAS,CAACmC,QAASvG,IAAKC,EAAL,yCAAiD0c,EAAQnW,MAe5F,GAZAnB,IAAMgL,gBAAgB7N,EAAK,EAAK8K,qBAAiBgD,OAAWA,EAAW,EAAKxQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAEzIpP,KAAKgB,UAAUkc,EAAQE,iBAAmBpd,KAAKgB,UAAUmc,EAAQC,iBAC5DC,MAAMC,QAAQJ,EAAQE,iBACvBF,EAAQE,cAAc,CAACF,EAAQE,gBAGnCra,EAAI5C,OAAO8O,UAAUsO,SAAWL,EAAQE,eAExCF,EAAQnY,OAASoY,EAAQpY,OACzBhC,EAAI5C,OAAO8O,UAAUuO,OAASN,EAAQnY,MAEtCmY,EAAQO,oBAAsBN,EAAQM,kBAAoB,CAC1D1a,EAAI5C,OAAO8O,UAAUyO,aAAeR,EAAQO,kBAC5C,IACQ1a,EAAI5C,OAAO8O,UAAUyO,cACrB1d,KAAKC,MAAM8C,EAAI5C,OAAO8O,UAAUyO,cAEtC,MAAOlF,GACL,EAAK7T,SAAS,CAACmC,QAASvG,IAAKC,EAAE,8CASvC,OANI0c,EAAQS,UACR5a,EAAI5C,OAAO8O,UAAU2O,UAAYV,EAAQW,gBAEzCX,EAAQY,WACR/a,EAAI5C,OAAO8O,UAAU8O,WAAab,EAAQc,iBAEvC,EAAK3d,MAAMiE,OAAO8B,UAAU8W,EAAQnW,GAAIhE,MAElD0B,MAAK,WAEF,EAAK8K,eAAe2N,EAAQnW,OAE/BV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,sCAI5B,IAAD,OACZ,OAAIxF,KAAKkD,MAAM8C,QACH,kBAAC,IAAD,CAAeM,KAAMtG,KAAKkD,MAAM8C,QAASF,QAAS,kBAAM,EAAKjC,SAAS,CAACmC,QAAS,QAEjF,O,sCAIClH,GAAI,IAAD,OACfA,GAAKA,EAAE2Z,iBAEPzY,KAAKwO,WAAWxO,KAAKkD,MAAM4J,QAAQ,WAC/B,IAAM7G,EAAK,EAAK/C,MAAM4J,OACtB,EAAKjJ,SAAS,CAACiJ,OAAQ,GAAIyG,eAAgB,GAAIM,YAAa5N,IAE5D,EAAK6N,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKvU,MAAMiE,OAAOC,UAAUwC,GACvBtC,MAAK,SAAA1B,GAEF,OADA6C,IAAMgL,gBAAgB7N,EAAK,EAAK8K,qBAAiBgD,OAAWA,EAAW,EAAKxQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UACtI,EAAK/O,MAAMiE,OAAO8B,UAAUW,EAAIhE,MAE1C0B,MAAK,WAEF,EAAK8K,eAAexI,MAEvBV,OAAM,SAAAC,GAAG,OAAI,EAAKjG,MAAMC,QAAQgG,W,0CAIxB,IAAD,OAChB,OAAIxF,KAAKkD,MAAMqF,aACH,kBAAC,IAAD,CACJnC,IAAI,kBACJ4C,OAAQ,QACRC,WAAYjJ,KAAKT,MAAMiE,OACvB0F,SAAU,GACVC,YAAY,EACZrD,QAAS,kBAAM,EAAKjC,SAAS,CAAC0E,cAAc,KAC5Ca,KAAM,SAACF,GACH,EAAKrF,SAAS,CAAC0E,cAAc,IAE7B,EAAKhJ,MAAMiE,OAAOC,UAAUyF,GACvBvF,MAAK,SAAA1B,GACF,GAAIA,EAAK,CACL,IAAKA,EAAI5C,OACL,OAAO,EAAKwE,SAAS,CAACmC,QAASvG,IAAKC,EAAL,yCAAiDwJ,KAGpF,IAAM5J,EAAOwF,IAAM+J,qBAAqB5M,EAAK,KAAM,CAAC6M,SAAUrP,IAAKkP,gBACnE7J,IAAMgL,gBAAgB7N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgB0K,QAAQ,UAAW,UAAM2F,OAAWA,EAAW,EAAKxQ,MAAMmE,YAAc,IAAM,EAAKnE,MAAMU,SAAU,EAAKV,MAAMH,OAAOkP,UAChL,EAAKE,WAAWvM,EAAIlC,KACpB,EAAKkU,gBAAkBhS,EAAIlC,IAEvB,EAAKmD,MAAM2Q,cAAgB5R,EAAIlC,MAC/B,EAAK8D,SAAS,CAACgQ,YAAa5R,EAAIlC,MAChC,EAAK+T,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAepF,YAAW,WAC3B,EAAK7K,SAAS,CAACgQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGF7R,EAAI5C,OAAO8O,WAIZlM,EAAI5C,OAAO8O,UAAUuO,OAAS,6BAC9Bza,EAAI5C,OAAO8O,UAAUsO,SAAW,CAAC,iCAJjCxa,EAAI5C,OAAO8O,UAAY,CAACuO,OAAQ,8BAChCza,EAAI5C,OAAO8O,UAAY,CAACsO,SAAU,CAAC,iCAMvC,EAAKld,MAAMiE,OAAO8B,UAAUrD,EAAIlC,IAAKkC,GAChC0B,MAAK,WACF,EAAK8K,eAAexM,EAAIlC,KACxB,EAAK8D,SAAS,CAACmC,QAASvG,IAAKC,EAAE,qEAElC6F,OAAM,SAAAC,GAAG,OAAI,EAAK3B,SAAS,CAACmC,QAASR,YAE1C,EAAK3B,SAAS,CAACmC,QAASvG,IAAKC,EAAE,sBAM5C,O,+BAIL,IAAD,OACL,OAAIM,KAAKkD,MAAMiK,QACH,kBAACuD,GAAA,EAAD,CAAmBtK,IAAI,kBAI/B,0BAAMA,IAAI,KAAKpF,UAAWhB,KAAKT,MAAM0B,QAAQ8F,KACzC,kBAAC1F,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAQ9F,QAAS,kBAAM,EAAKmC,SAAS,CAAC0E,cAAc,MAAQ,kBAAC,QAAD,OAC/I,kBAAClH,EAAA,EAAD,CACAe,MAAQ,CAACkH,WAAW,QAAShI,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQuG,OACvG9F,QAAS,kBAAM,EAAKiS,QAAO,IAAOlM,SAAUzH,KAAKkD,MAAMyQ,QAAS3T,KAAKkD,MAAMyQ,OAAU,kBAACjD,GAAA,EAAD,CAAkBpP,KAAM,KAAW,kBAAC,YAAD,OAE7HtB,KAAK8Q,gBACL9Q,KAAKuJ,oBACN,yBAAKnH,MAAO,CAACS,UAAW,OAAQR,QAAS,SACrC,yBAAKD,MAAO,CAAC+a,KAAM,QACf,yBAAK/a,MAAO,CAACwF,WAAW,SAAxB,IAAmCnI,IAAKC,EAAE,cAC1C,yBAAK0C,MAAO,CAACS,UAAW,SAAUD,YAAa,WAAanD,IAAKC,EAAE,0NAEvE,yBAAK0C,MAAO,CAAC+a,KAAM,QAAQ,yBAAK/a,MAAO,CAACwF,WAAY,SAAzB,IAAoCnI,IAAKC,EAAE,gBAClE,8BAAOoF,IAAMC,gBAAgBtF,IAAKC,EAAE,gJACpC,8BAAOoF,IAAMC,gBAAgBtF,IAAKC,EAAE,iaACpC,mCAASoF,IAAMC,gBAAgBtF,IAAKC,EAAE,mMAG9C,6BACA,yBAAK0C,MAAO,CAAC+a,KAAM,SACf,yBAAK/a,MAAO,CAACwF,WAAY,SAAU9C,IAAMC,gBAAgBtF,IAAKC,EAAE,sLAEpE,6BACI,kBAAC,KAAD,CACI0C,MAAQ,CAACS,UAAW,OAAQR,QAAS,gBACrCR,MAAM,GACNub,SAAUpd,KAAKwb,WACf6B,WAAY,SAACve,EAAGwe,GACZ,EAAK9B,WAAW+B,QAAQC,oBAAoBF,EAAQG,UAAUC,KAAMJ,IAExE3B,QAAS3b,KAAKkD,MAAMyY,QACpBgC,gBAAiB,SAACC,EAAKzB,GACnB,IAAMnd,EAASmd,EAAKjO,MAAK,SAAC2P,GACtB,SAAIA,EAAQ5X,KAAM2X,EAAIE,UAAYD,EAAQ5X,KAAO2X,EAAIE,YACjDpJ,QAAQC,IAAIiJ,EAAIE,WACT,MAMf,OADApJ,QAAQC,IAAI3V,GACLA,GAEX+e,KAAM/d,KAAKkD,MAAMwQ,QACjBsK,MAAO7D,GACP8D,UAAWje,KAAKkD,MAAMyQ,OACtBnL,QAAS,CACL0V,oBAAqB,EACrBC,QAAQ,EACRC,SAAU,SAACd,GACP,IAAItO,EAAa,OAgBjB,OAfIsO,EAAQe,YACRrP,EAAa,WAEM,YAAnBsO,EAAQgB,QAA2C,WAAnBhB,EAAQgB,SAEpCtP,EADAsO,EAAQe,UACK,UAEA,WAIhB,EAAKnb,MAAMqb,aAAe,EAAKrb,MAAMqb,YAAYd,UAAUxX,KAAOqX,EAAQG,UAAUxX,KACrF+I,EAAa,QAGV,CAACwP,gBAAkBxP,KAIlC6M,SAAU,CACN4C,YAAa,SAACrC,EAASC,GAOnB,OANID,EAAQ9c,KAAKof,WAAanC,MAAMC,QAAQJ,EAAQ9c,KAAKof,aACrDtC,EAAQ9c,KAAKof,UAAYtC,EAAQ9c,KAAKof,UAAU3T,KAAK,MAEzD,EAAKgC,gBAAkBqP,EAAQ9c,KAAKof,UACpC,EAAK7a,SAAS,CAACiJ,OAAQsP,EAAQnW,KAExB,IAAIb,SAAQ,SAAAC,GACf,EAAKxB,SAAS,CAAC8P,QAAQ,IAEvBjF,YAAW,WACF0N,EAAQnY,MAASmY,EAAQE,eAC1B,EAAKzY,SAAS,CAACmC,QAASvG,IAAKC,EAAE,oEAGnC,EAAKif,iBAAiBvC,EAASC,GAC/BhX,IACA,IAAMqO,EAAO,aAAO,EAAKxQ,MAAMwQ,SAC/BA,EAAQA,EAAQ7I,QAAQwR,IAAYD,EACpC,EAAKvY,SAAL,eAAmB,EAAKX,MAAxB,CAA+BwQ,eAChC,SAGXkL,YAAa,SAACvC,GAgBV,MAdyB,MAArBA,EAAQgC,UACR,EAAKxa,SAAS,CAAC2P,SAAU6I,EAAQpW,KAEjC,EAAK1G,MAAMiE,OAAOC,UAAU4Y,EAAQpW,IAC/BtC,MAAK,SAAA1B,GAMF,OALIA,GAAOA,EAAI5C,QAAU4C,EAAI5C,OAAJ,mBACd4C,EAAI5C,OAAJ,0BACA4C,EAAI5C,OAAJ,wBACA4C,EAAI5C,OAAJ,wBAEJ,EAAKE,MAAMiE,OAAO8B,UAAU+W,EAAQpW,GAAIhE,MAIpD,IAAImD,SAAQ,SAAAC,GACfqJ,YAAW,WACH,EAAKxL,MAAMsQ,SACX,EAAK5H,WAEL,EAAK6C,eAAe4N,EAAQpW,IAEhCZ,IACA,IAAMqO,EAAO,aAAO,EAAKxQ,MAAMwQ,SAC/BA,EAAQ5I,OAAO4I,EAAQ7I,QAAQwR,GAAU,GACzC,EAAKxY,SAAL,eAAmB,EAAKX,MAAxB,CAA+BwQ,eAChC,kB,GAvmBRjR,aA6nBhBC,gBA/nBA,iBAAO,KA+nBPA,CAAmB6Y,ICvpB5BsD,G,kDACF,WAAYtf,GAAQ,oBAChB,IAAMuf,EAAa,eAAOvf,GAiB1B,GAhBAuf,EAAcC,gBAAkB,CAAC,QACjCD,EAAcE,aAAe,CACzB,GAAMC,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,QAASA,EAAQ,MAGrBH,EAActb,OAASsb,EAActb,QAAU,GAC/Csb,EAActb,OAAO0b,KAAOC,SAASxgB,OAAOygB,SAASF,KAAM,IACvDG,MAAMP,EAActb,OAAO0b,MAC3B,OAAQvgB,OAAOygB,SAASE,UACpB,IAAK,SACDR,EAActb,OAAO0b,KAAO,IAC5B,MACJ,IAAK,QACDJ,EAActb,OAAO0b,KAAO,GAxBzB,OAgCVJ,EAActb,OAAO0b,MAAsC,MAA9BJ,EAActb,OAAO0b,OACnDJ,EAActb,OAAO0b,KAAO,MAjCjB,YAoCTJ,G,6DAIN,IAAM/X,EAAM/G,KAAKkD,MAAMqc,YACvB,OAAKxY,GAAe,YAARA,EAGA,UAARA,EACO,EAEC,UAARA,EACO,EAEC,WAARA,EAEO,GADS/G,KAAKkD,MAAM9D,OAAOogB,YAAc,EAAI,GAG5C,UAARzY,EAEO,IADS/G,KAAKkD,MAAM9D,OAAOogB,YAAc,EAAI,IAAMxf,KAAKkD,MAAM9D,OAAOiI,WAAa,EAAI,IAGrF,aAARN,EAEO,IADS/G,KAAKkD,MAAM9D,OAAOogB,YAAc,EAAI,IAAMxf,KAAKkD,MAAM9D,OAAOiI,WAAa,EAAI,IAAMrH,KAAKkD,MAAM9D,OAAOqgB,YAAc,EAAI,IAG/H,aAAR1Y,EAEO,IADS/G,KAAKkD,MAAM9D,OAAOogB,YAAc,EAAI,IAAMxf,KAAKkD,MAAM9D,OAAOiI,WAAa,EAAI,IAAMrH,KAAKkD,MAAM9D,OAAOqgB,YAAc,EAAI,SAD3I,EApBW,I,+BA0BL,IAAD,OACL,OAAKzf,KAAKkD,MAAMwc,OAKZ,yBAAK1e,UAAU,OACX,kBAAC2e,EAAA,EAAD,CAAQ1O,SAAS,UACb,kBAAC2O,EAAA,EAAD,CAAMxb,MAAOpE,KAAK6f,iBAAkBxb,SAAU,SAACvF,EAAGghB,GAAJ,OAAc,EAAKC,UAAUjhB,EAAEN,OAAOwhB,WAAWC,QAAQ3gB,KAAMwgB,KACzG,kBAACI,EAAA,EAAD,CAAK/b,MAAO1E,IAAKC,EAAE,WAAYygB,YAAU,YACzC,kBAACD,EAAA,EAAD,CAAK/b,MAAO1E,IAAKC,EAAE,eAAgBygB,YAAU,UAC5CngB,KAAKkD,MAAM9D,OAAOogB,aAAe,kBAACU,EAAA,EAAD,CAAKhX,SAAqC,UAA3BlJ,KAAKkD,MAAMqc,YAAyBpb,MAAO1E,IAAKC,EAAE,iBAAkBygB,YAAU,UAC9HngB,KAAKkD,MAAM9D,OAAOiI,YAAc,kBAAC6Y,EAAA,EAAD,CAAKhX,SAAqC,WAA3BlJ,KAAKkD,MAAMqc,YAA0Bpb,MAAO1E,IAAKC,EAAE,kBAAmBygB,YAAU,WAC/HngB,KAAKkD,MAAM9D,OAAOqgB,aAAe,kBAACS,EAAA,EAAD,CAAKhX,SAAqC,UAA3BlJ,KAAKkD,MAAMqc,YAAyBpb,MAAO1E,IAAKC,EAAE,iBAAkBygB,YAAU,UAC/H,kBAACD,EAAA,EAAD,CAAK/b,MAAO1E,IAAKC,EAAE,oBAAqBygB,YAAU,aAClD,kBAACD,EAAA,EAAD,CAAK/b,MAAO1E,IAAKC,EAAE,sBAAuBygB,YAAU,eAI5D,yBAAKnf,UAAWhB,KAAKogB,SAAWpgB,KAAKT,MAAM0B,QAAQof,iBAAmBrgB,KAAKT,MAAM0B,QAAQqf,aACxD,YAA3BtgB,KAAKkD,MAAMqc,cAA8Bvf,KAAKkD,MAAMqc,cAAiB,kBAAC,EAAD,CACnEnZ,IAAI,UACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,WAAYV,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1G,cACnGD,OAAQ,SAAAP,GAAM,OAAI,EAAKmhB,aAAanhB,IACpCa,SAAUD,KAAKC,SACfyD,YAAa1D,KAAK0D,YAClBW,SAAU,SAACL,EAAMI,EAAO0Q,GAAd,OAAqB,EAAK0L,kBAAkBxc,EAAMI,EAAO0Q,MAE3C,UAA3B9U,KAAKkD,MAAMqc,aAA4B,kBAAC,GAAD,CACpCnZ,IAAI,QACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,WAAYV,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1G,cACnGK,SAAUD,KAAKC,SACfyD,YAAa1D,KAAK0D,cAEM,UAA3B1D,KAAKkD,MAAMqc,aAA4B,kBAAC,GAAD,CACpCnZ,IAAI,QACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,WAAYV,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1G,cACnG8D,YAAa1D,KAAK0D,YAClBzD,SAAUD,KAAKC,WAEa,WAA3BD,KAAKkD,MAAMqc,aAA6B,kBAAC,GAAD,CACzCnZ,IAAI,SACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,WAAYV,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1G,cACnG8D,YAAa1D,KAAK0D,YAClBzD,SAAUD,KAAKC,WAES,UAA3BD,KAAKkD,MAAMqc,aAA4B,kBAAC,GAAD,CACpCnZ,IAAI,QACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,WAAYV,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1G,cACnG8D,YAAa1D,KAAK0D,YAClBzD,SAAUD,KAAKC,WAES,aAA3BD,KAAKkD,MAAMqc,aAA+B,kBAAC,GAAD,CACvCnZ,IAAI,WACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,WAAYV,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1G,cACnGK,SAAUD,KAAKC,SACfyD,YAAa1D,KAAK0D,YAClBW,SAAU,SAACL,EAAMI,GAAP,OAAiB,EAAKoc,kBAAkBxc,EAAMI,MAEhC,aAA3BpE,KAAKkD,MAAMqc,aAA+B,kBAAC,GAAD,CACvCnZ,IAAI,WACJ/G,OAAQW,KAAKX,OACbmE,OAAQxD,KAAKwD,OACbpE,OAAQY,KAAKkD,MAAM9D,OACnBI,QAAS,SAAA8G,GAAI,OAAI,EAAKzC,SAAS,CAACmD,WAAYV,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1G,cACnGK,SAAUD,KAAKC,SACfyD,YAAa1D,KAAK0D,YAClB+c,YAAa,SAAA/I,GAAK,OAAI,EAAKnN,UAAUmN,IACrCrT,SAAU,SAACL,EAAMI,GAAP,OAAiB,EAAKoc,kBAAkBxc,EAAMI,OAG/DpE,KAAK0gB,cACL1gB,KAAK2gB,0BAxFF,kBAAC,IAAD,CAAQhe,MAAO3C,KAAKkD,MAAM0d,gB,GAvE5BC,KAqKHne,gBAnLA,SAAAC,GAAK,MAAK,CACrBme,KAAM,GACNR,WAAY,CACRvd,QAAS,GACTqF,OAAQ,kCACR4I,SAAU,QAEdqP,iBAAkB,CACdtd,QAAS,GACTqF,OAAQ,yCACR4I,SAAU,WAyKHtO,CAAmBmc,ICxLdkC,QACW,cAA7BpiB,OAAOygB,SAAS4B,UAEe,UAA7BriB,OAAOygB,SAAS4B,UAEhBriB,OAAOygB,SAAS4B,SAAStT,MACvB,2D,mCCNF/K,GAAQhE,OAAOsiB,cAAetiB,OAAOsiB,aAAaC,QAAQ,cAA0B,QAExFxM,QAAQC,IAAI,gBAAkBwM,MAW9BC,IAAY,CACRC,IAAK,kEACLC,QAAS,gBAAkBH,KAC3BI,aAAc,CACV,IAAIC,OAbZ,SAASC,IACL,OAAOC,IAASC,OAAO,kBAAC,IAAD,CAAkBhf,MAAOif,KAAYjf,KACxD,kBAAC,GAAD,CAAKkf,cAAe,SAAAC,GAChBnf,GAAQmf,EACRL,QAEajhB,SAASuhB,eAAe,SAYjDN,GD+FM,kBAAmBO,WACrBA,UAAUC,cAAcC,MAAMve,MAAK,SAAAwe,GACjCA,EAAaC,kB","file":"static/js/main.08a029db.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from './Logo';\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            forceUserCreate: false,\n            showHint: false,\n            toast: '',\n            isInstanceAlive: false,\n        };\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts() {\n        this.setState({inAction: true});\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (this.state.forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    onForceUserCreate() {\n        this.setState({forceUserCreate: !this.state.forceUserCreate, showHint: !this.state.forceUserCreate});\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderHint() {\n        if (this.state.showHint) {\n            return (<Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Logo\n                    instance={this.props.instance}\n                    common={this.props.common}\n                    native={this.props.native}\n                    onError={text => this.setState({errorText: text})}\n                    onLoad={this.props.onLoad}\n                />\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnSettings}>\n                    {this.renderInput('ioBroker.pro Login', 'login')}<br/>\n                    {this.renderInput('ioBroker.pro Password', 'pass', 'password')}<br/>\n                    {this.renderCheckbox('Amazon Alexa', 'amazonAlexa', {marginTop: 10})}<br/>\n                    <FormControlLabel key=\"googleHome\" style={{paddingTop: 5}} className={this.props.classes.controlElement}\n                        control={\n                          <Checkbox\n                              checked={this.props.native.googleHome}\n                              onChange={() => {\n                                  // activate alexa if google home is on (temporary)\n                                  const newVal = !this.props.native.googleHome;\n                                  this.props.onChange('googleHome', newVal, () =>\n                                      newVal && this.props.onChange('amazonAlexa', true));\n                              }}\n                              color=\"primary\"\n                          />\n                        }\n                        label={I18n.t('Google Home')}\n                    />\n                    {/*this.renderCheckbox('Google Home', 'googleHome', {marginTop: 10})*/}<br/>\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa', {marginTop: 10})}<br/>\n                    <br/>\n                    <Button variant=\"outlined\"\n                            className={this.props.classes.button}\n                            disabled={this.state.inAction || !this.state.isInstanceAlive}\n                            title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                            onClick={() => this.resetCerts()}>\n                        <IconReload/>{I18n.t('Get new connection certificates')}\n                    </Button>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.forceUserCreate}\n                                onChange={() => this.onForceUserCreate()}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Request email with password one more time')}\n                    />\n                    <p style={{fontWeight: 'bold'}}>{Utils.renderTextWithA(I18n.t('help_tip'))}</p>\n                    <p style={{fontWeight: 'bold', paddingTop: 20}}>{Utils.renderTextWithA(I18n.t('help_link_tip1'))}</p>\n                    <p style={{fontWeight: 'bold'}}>{Utils.renderTextWithA(I18n.t('help_link_tip2'))}</p>\n                    <p style={{fontWeight: 'bold', color: 'red'}}>{Utils.renderTextWithA(I18n.t('help_link_tip3'))}</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard()}</div>\n                {this.renderHint()}\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={this.props.native[attr]}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport CopyContentImg from '@iobroker/adapter-react/assets/copy-content.svg';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from \"@iobroker/adapter-react/Dialogs/SelectID\";\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID3\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={this.props.native[attr]}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                <br/>\n                <br/>\n                <div className={this.props.classes.controlElement}>\n                    <TextField\n                        label={I18n.t('Read blood sugar from')}\n                        className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n                        value={this.props.native.amazonAlexaBlood || ''}\n                        type=\"text\"\n                        onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                        margin=\"normal\"\n                    />\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                    <FormControlLabel  className={this.props.classes.controlElement}\n                        control={\n                            <Checkbox\n                                style={{paddingLeft: 30}}\n                                checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                                onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Short answer for blood sugar')}\n                    />\n                </div>\n                <br/>\n                {this.renderToast()}\n                {this.getSelectIdDialog('amazonAlexaBlood')}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({editId: ''})}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editedSmartType: null,\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\n        if (state && state.ack === true && state.val === true) {\n            this.devTimer && clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    let editedSmartType = null;\n                    if (!device.additionalApplianceDetails.group) {\n                        editedSmartType = device.additionalApplianceDetails.smartType;\n                    }\n\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectTypeSelector(type, onChange) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            try {\n                channels && Object.keys(channels).forEach(chan =>\n                    chan && channels[chan].forEach(el => {\n                        if (this.state.changed.indexOf(el.id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === el.id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    })\n                );\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            const editedSmartType = this.state.editedSmartType;\n\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => {\n                    this.editedSmartName = null;\n                    this.setState({editId: '', editedSmartName: ''});\n                }}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({showConfirmation: ''})}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRGB = '#ff7ee3';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        minWidth: 100,\n        display: 'inline-block',\n        fontSize: 13,\n        paddingLeft: 70,\n        //width: 'calc(100% - 400px)'\n    },\n    devSubSubLine:  {\n        fontSize: 10,\n        fontStyle: 'italic',\n        display: 'inline-block',\n        marginLeft: 15\n    },\n    devSubLineSetId:  {\n        fontStyle: 'italic',\n        display: 'block',\n        color: '#999'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlisaDevices extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) {\n            return;\n        }\n\n        this.lastBrowse = Date.now();\n\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        this.browseTimer = setTimeout(() => {\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.iobID === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.name;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName:smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'OnOff') return -1;\n            if (b === 'OnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].name);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        const id = dev.main.getId;\n        const name = dev.func;\n        let background = DEFAULT_CHANNEL_COLOR;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n            background = LAST_CHANGED_COLOR;\n        }*/\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\n            <div className={classes.devSubSubLine}>\n                <div>{dev.main.getId}</div>\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\n            </div>\n\n        </div>));\n\n        dev.attributes.forEach(attr => {\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\n                <div className={classes.devSubSubLine}>\n                    <div>{attr.getId}</div>\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\n                </div>\n            </div>));\n        });\n\n        /*if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n        }*/\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (dev.iobID === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        //const isComplex = dev.\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {dev.attributes.length ?\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\n\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => {\n                    this.editedSmartName = null;\n                    this.setState({editId: '', editedSmartName: ''});\n                }}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({showConfirmation: ''})}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlisaDevices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlisaDevices);\n","import React, {Component, forwardRef} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst styles = () => ({});\n\nclass GoogleSmartNames extends Component {\n    constructor(props) {\n        super(props);\n        this.myTableRef =  React.createRef();\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: '',\n            columns: [\n                {title: 'Id', field: 'id', editable: 'never', cellStyle: {\n                    maxWidth: '12rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-all'\n                }},\n                {title: 'Smartnames', field: 'name.nicknames'},\n                {title: 'ioBType', field: 'ioType',editable: 'never', cellStyle: {\n                    maxWidth: '4rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-all'\n                }},\n                {title: 'Type', field: 'type',  lookup: {\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\n                    'action.devices.types.AWNING':          'Awning',\n                    'action.devices.types.BLINDS':          'Blinds',\n                    'action.devices.types.BOILER':          'Boiler',\n                    'action.devices.types.CAMERA':          'Camera',\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\n                    'action.devices.types.CURTAIN':         'Curtain',\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\n                    'action.devices.types.DOOR':            'Door',\n                    'action.devices.types.DRYER':           'Dryer',\n                    'action.devices.types.FAN':             'Fan',\n                    'action.devices.types.FIREPLACE':       'Fireplace',\n                    'action.devices.types.GARAGE':          'Garage',\n                    'action.devices.types.GATE':            'Gate',\n                    'action.devices.types.HEATER':          'Heater',\n                    'action.devices.types.HOOD':            'Hood',\n                    'action.devices.types.KETTLE':          'Kettle',\n                    'action.devices.types.LIGHT':           'Light',\n                    'action.devices.types.LOCK':            'Lock',\n                    'action.devices.types.MOP':             'Mop',\n                    'action.devices.types.MICROWAVE':       'Microwave',\n                    'action.devices.types.OUTLET':          'Outlet',\n                    'action.devices.types.OVEN':            'Oven',\n                    'action.devices.types.PERGOLA':         'Pergola',\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\n                    'action.devices.types.SCENE':           'Scene',\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\n                    'action.devices.types.SENSOR':          'Sensor',\n                    'action.devices.types.SHUTTER':         'Shutter',\n                    'action.devices.types.SHOWER':          'Shower',\n                    'action.devices.types.SPEAKER':         'Speaker',\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\n                    'action.devices.types.SWITCH':          'Switch',\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\n                    'action.devices.types.VACUUM':          'Vacuum',\n                    'action.devices.types.VALVE':           'Valve',\n                    'action.devices.types.WASHER':          'Washer',\n                    'action.devices.types.WATERHEATER':     'Water heater',\n                    'action.devices.types.WINDOW':          'Window'\n                }},\n                { title: 'Funktion/Trait', field: 'displayTraits',  lookup: {\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\n                    'action.devices.traits.Brightness':     'Brightness',\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\n                    // 'action.devices.traits.Dock':        'Dock',\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\n                    // 'action.devices.traits.Locator':     'Locator',\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\n                    'action.devices.traits.Modes':          'Modes',\n                    'action.devices.traits.OnOff':          'OnOff',\n                    'action.devices.traits.OpenClose':      'OpenClose',\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\n                    'action.devices.traits.Scene':          'Scene',\n                    // 'action.devices.traits.Sensor':      'Sensor',\n                    'action.devices.traits.StartStop':      'StartStop',\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\n                    // 'action.devices.traits.Timer':       'Timer',\n                    'action.devices.traits.Toggles':        'Toggles',\n                    'action.devices.traits.Volume':         'Volume',\n                    }},\n\n                {title: 'Attributes', field: 'displayAttributes',   cellStyle: {\n                        maxWidth: '12rem',\n                        overflow: 'hidden',\n                        wordBreak: 'break-all'\n                    },\n                    editComponent: props => (<textarea cols=\"40\" rows=\"20\"\n                          value={props.value}\n                          onChange={e => props.onChange(e.target.value)}\n                        />)\n                },\n                {title: 'Room', field: 'roomHint', editable: 'never'},\n                {title: 'Automatisch', field: 'smartEnum', editable: 'never',cellStyle: {\n                    maxWidth: '3rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-all'\n                }},\n                {title: 'Conversation to GH', field: 'displayConv2GH',  cellStyle: {\n                        maxWidth: '4rem',\n                        overflow: 'hidden',\n                        wordBreak: 'break-all'\n                    },\n                    editComponent: props => (\n                        <div>Conversation to Google Home = function(value)&#123; <br/>\n                            <textarea cols=\"40\" rows=\"20\"\n                                value={props.value}\n                                onChange={e => props.onChange(e.target.value)}\n                            />\n                            &#125;\n                        </div>\n                    )\n                },\n                { title: 'Conversation to ioB', field: 'displayConv2iob', cellStyle: {\n                    maxWidth: '4rem',\n                    overflow: 'hidden',\n                    wordBreak: 'break-all'\n                    },  \n                    editComponent: props => (\n                        <div>Conversation to ioBroker = function(value)&#123; <br/>\n                            <textarea cols=\"40\" rows=\"20\"\n                                value={props.value}\n                                onChange={e => props.onChange(e.target.value)}\n                            />\n                            &#125;\n                        </div>\n                    )},\n              ]\n        };\n\n        this.timerChanged        = null;\n        this.browseTimer         = null;\n        this.browseTimerCount    = 0;\n        this.editedSmartName     = '';\n\n        this.waitForUpdateID     = null;\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 10);\n        }\n    }\n\n    onResultUpdate(state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectByOn(id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    onGHParamsChange(newData, oldData) {\n        this.addChanged(newData.id, () => {\n            this.props.socket.getObject(newData.id)\n                .then(obj => {\n                    if (!obj || !obj.common) {\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\n                    }\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\n                        if (!Array.isArray(newData.displayTraits)) {\n                            newData.displayTraits=[newData.displayTraits]\n                        }\n\n                        obj.common.smartName.ghTraits = newData.displayTraits;\n                    }\n                    if (newData.type !== oldData.type) {\n                        obj.common.smartName.ghType = newData.type;\n                    }\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\n                        try {\n                            if (obj.common.smartName.ghAttributes) {\n                                JSON.parse(obj.common.smartName.ghAttributes)\n                            }\n                        } catch (error) {\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')})\n                        }\n                    }\n                    if (newData.conv2GH) {\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\n                    }\n                    if (newData.conv2iob) {\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\n                    }\n                    return this.props.socket.setObject(newData.id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(newData.id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                if (!obj.common) {\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\n                                }\n\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n                                \n                                if (!obj.common.smartName) {\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\n                                } else {\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\n                                }\n                                \n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => {\n                                        this.informInstance(obj._id);\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\n                                    })\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"gh\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab \n                style ={{marginLeft:\"1rem\"}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                {this.renderMessage()}\n                {this.getSelectIdDialog()}\n                <div style={{marginTop: \"4rem\", display: \"flex\"}}>\n                    <div style={{flex: \"50%\"}}>\n                        <div style={{fontWeight:\"bold\"}}>${I18n.t('Auto Mode')}</div>\n                        <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\n                    </div>\n                    <div style={{flex: \"50%\"}}><div style={{fontWeight: \"bold\"}}>${I18n.t('Manual Mode')}</div>\n                        <span>{Utils.renderTextWithA(I18n.t(\"Please select a <a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/guides/'>TYPE</a> and a\"))}</span>\n                        <span>{Utils.renderTextWithA(I18n.t(\"<a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/traits/'>TRAIT</a> after adding a state. To add multiple traits add a different id and trait but same smart name, type and room. Comma separated for the multiple smart names. To assign a room please use the ioBroker Enums/Aufzählungen. With attributes you can for example set a range for the color temperature\"))}</span>\n                        <span>  {Utils.renderTextWithA(I18n.t(\"<a target='_blank' rel='noopener noreferrer' href='https://developers.google.com/actions/smarthome/traits/colorsetting'>Infos about Attributes you can find here.</a> Empty attribute is {}\"))}</span>\n                    </div>\n                </div>\n                <br/>\n                <div style={{flex: \"100%\"}}>\n                    <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t(\"For help use this forum <a target='_blank' rel='noopener noreferrer' href='https://forum.iobroker.net/topic/24061/google-home-assistant-iobroker-einrichten-nutzen/'>thread</a>\"))}</div>\n                </div>\n                <div>\n                    <MaterialTable\n                        style ={{marginTop: \"1rem\", display: \"inline-block\"}}\n                        title=\"\"\n                        tableRef={this.myTableRef}\n                        onRowClick={(e, rowData) => {\n                            this.myTableRef.current.onTreeExpandChanged(rowData.tableData.path, rowData)\n                        }}\n                        columns={this.state.columns}\n                        parentChildData={(row, rows) => {\n                            const result = rows.find((element) => {\n                                if (element.id && row.parentId && element.id === row.parentId) {\n                                    console.log(row.parentId);\n                                    return true;\n                                } else {\n                                    return false;\n                                }\n                            });\n                            console.log(result);\n                            return result;\n                        }}\n                        data={this.state.devices}\n                        icons={tableIcons}\n                        isLoading={this.state.browse }\n                        options={{\n                            actionsColumnIndex: -1,\n                            paging: false,\n                            rowStyle: (rowData) => {\n                                let background = '#FFF';\n                                if (rowData.smartEnum) {\n                                    background = '#F7FFEA';\n                                }\n                                if (rowData.ioType === 'channel' || rowData.ioType === 'device') {\n                                    if (rowData.smartEnum) {\n                                        background = '#eafff2';\n                                    } else {\n                                        background = '#E2FFFF';\n                                    }\n                                }\n\n                                if  (this.state.selectedRow && this.state.selectedRow.tableData.id === rowData.tableData.id) {\n                                    background = '#EEE';\n                                }\n\n                                return {backgroundColor:  background}\n                              }\n                          }}\n\n                        editable={{\n                            onRowUpdate: (newData, oldData) => {\n                                if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\n                                    newData.name.nicknames = newData.name.nicknames.join(',');\n                                }\n                                this.editedSmartName = newData.name.nicknames;\n                                this.setState({editId: newData.id});\n\n                                return new Promise(resolve => {\n                                    this.setState({browse: true});\n\n                                    setTimeout(() => {\n                                        if (!newData.type || !newData.displayTraits) {\n                                            this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});\n                                        }\n\n                                        this.onGHParamsChange(newData, oldData);\n                                        resolve();\n                                        const devices = [...this.state.devices];\n                                        devices[devices.indexOf(oldData)] = newData;\n                                        this.setState({ ...this.state, devices});\n                                    }, 500);\n                                });\n                            },\n                            onRowDelete: (oldData) => {\n                                // if smartenum set smartname on false if not delete/reset smartname content\n                                if (oldData.smartEnum=== 'X') {\n                                    this.setState({deleteId: oldData.id});\n                                } else {\n                                    this.props.socket.getObject(oldData.id)\n                                        .then(obj => {\n                                            if (obj && obj.common && obj.common['smartName']) {\n                                                delete obj.common['smartName']['ghTraits'];\n                                                delete obj.common['smartName']['ghType'];\n                                                delete obj.common['smartName']['ghAttributes'];\n                                            }\n                                            return this.props.socket.setObject(oldData.id, obj);\n                                        });\n                                }\n\n                                return new Promise(resolve => {\n                                    setTimeout(() => {\n                                        if (this.state.deleteId) {\n                                            this.onDelete();\n                                        } else {\n                                            this.informInstance(oldData.id);\n                                        }\n                                        resolve();\n                                        const devices = [...this.state.devices];\n                                        devices.splice(devices.indexOf(oldData), 1);\n                                        this.setState({ ...this.state, devices });\n                                    }, 600);\n                                })\n                            }\n                        }}\n                    />\n                </div>\n            </form>\n        );\n    }\n}\n\nGoogleSmartNames.propTypes = {\n    common:      PropTypes.object.isRequired,\n    native:      PropTypes.object.isRequired,\n    instance:    PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError:     PropTypes.func,\n    onLoad:      PropTypes.func,\n    onChange:    PropTypes.func,\n    socket:      PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GoogleSmartNames);\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport TabOptions from './Tabs/Options';\nimport TabExtended from './Tabs/Extended';\nimport TabServices from './Tabs/Services';\nimport TabEnums from './Tabs/Enums';\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = {...props};\n        extendedProps.encryptedFields = ['pass'];\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n        // get actual port\n        extendedProps.socket = extendedProps.socket || {};\n        extendedProps.socket.port = parseInt(window.location.port, 10);\n        if (isNaN(extendedProps.socket.port)) {\n            switch (window.location.protocol) {\n                case 'https:':\n                    extendedProps.socket.port = 443;\n                    break;\n                case 'http:':\n                    extendedProps.socket.port = 80;\n                    break;\n                default:\n                    // invalid protocol\n                    break;\n            }\n        }\n        // for debug and fallback purposes\n        if (!extendedProps.socket.port || extendedProps.socket.port === 3000) {\n            extendedProps.socket.port = 8081;\n        }\n\n        super(extendedProps);\n    }\n\n    getSelectedTab() {\n        const tab = this.state.selectedTab;\n        if (!tab || tab === 'options') {\n            return 0;\n        } else\n        if (tab === 'enums') {\n            return 1;\n        } else\n        if (tab === 'alexa') {\n            return 2;\n        } else\n        if (tab === 'google') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\n            return 2 + offset;\n        }\n        if (tab === 'alisa') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'extended') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'services') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 3 + offset;\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return (<Loader theme={this.state.themeType}/>);\n        }\n\n        return (\n            <div className=\"App\">\n                <AppBar position=\"static\">\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\n                    </Tabs>\n                </AppBar>\n\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\n                        key=\"options\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        onLoad={native => this.onLoadConfig(native)}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                    />)}\n                    {this.state.selectedTab === 'enums' && (<TabEnums\n                        key=\"enums\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                    />)}\n                    {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\n                        key=\"alexa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                        {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\n                        key=\"google\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\n                        key=\"alisa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'extended' && (<TabExtended\n                        key=\"extended\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                    {this.state.selectedTab === 'services' && (<TabServices\n                        key=\"services\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onShowError={error => this.showError(error)}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                </div>\n                {this.renderError()}\n                {this.renderSaveCloseButtons()}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {version} from '../package.json';\n\nimport createTheme from '@iobroker/adapter-react/createTheme';\n\nlet theme = window.localStorage ? window.localStorage.getItem('App.theme') || 'light' : 'light';\n\nconsole.log('iobroker.iot@' + version);\n\nfunction build() {\n    return ReactDOM.render(<MuiThemeProvider theme={createTheme(theme)}>\n        <App onThemeChange={_theme => {\n            theme = _theme;\n            build();\n        }}/>\n    </MuiThemeProvider>, document.getElementById('root'));\n}\n\nSentry.init({\n    dsn: \"https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57\",\n    release: 'iobroker.iot@' + version,\n    integrations: [\n        new SentryIntegrations.Dedupe()\n    ]\n});\n\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}