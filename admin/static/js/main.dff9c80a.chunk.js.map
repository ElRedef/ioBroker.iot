{"version":3,"sources":["../node_modules/jspdf/dist sync","Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Logo","evt","f","target","files","r","window","FileReader","onload","contents","result","json","JSON","parse","native","common","name","props","onError","I18n","t","onLoad","toString","readAsText","alert","_id","this","instance","stringify","news","titleLang","desc","generateFile","input","document","createElement","setAttribute","addEventListener","handleFileSelect","click","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","title","upload","download","filename","obj","el","encodeURIComponent","style","display","body","appendChild","removeChild","Component","withStyles","theme","marginRight","marginTop","float","padding","width","Options","onAliveChanged","state","adapterName","setState","isInstanceAlive","val","inAction","toast","errorWithPercent","socket","getState","then","subscribeState","unsubscribeState","pass","length","match","attr","type","error","checkPassword","TextField","label","value","helperText","onChange","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","forceUserCreate","ack","Promise","getObject","enabled","setObject","catch","err","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","action","IconButton","key","close","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","text","errorText","column","columnSettings","renderInput","renderCheckbox","googleHome","newVal","changed","hintUnsaved","variant","button","disabled","resetCerts","fontWeight","columnLogo","renderCard","renderToast","minHeight","minWidth","marginBottom","maxWidth","height","verticalAlign","cannotUse","fontSize","fontStyle","ExtendedOptions","showSelectId","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","prefix","selected","types","onOk","renderSelect","marginLeft","getSelectIdDialog","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","getAdapterInstances","list","nsList","replace","showError","chips","split","filter","a","pos","indexOf","splice","join","push","email","login","secret","nightscoutPass","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","reissueUrlKey","fullSize","readOnly","copyToClipboard","renderChips","text2command","nightscout","normalSize","calcNightscoutSecret","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","forEach","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","i","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showListOfDevices","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","actions","sort","b","Icon","actionIcon","lineNum","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","channels","names","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","themeType","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","nameModified","devModified","devCount","ch","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","preventDefault","editedId","onKeyDown","defaultValue","toLowerCase","renderDevice","role","headerRow","headerCell","tableDiv","tableCell","lines","copy","placeholder","InputProps","endAdornment","renderDevices","renderConfirmDialog","renderListOfDevices","devLineEnabled","left","devSubLineEdit","spacing","main","OnOff","Brightness","RGB","AlisaDevices","iobID","includes","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","GoogleSmartNames","myTableRef","React","createRef","expertMode","localStorage","getItem","helpHidden","searchText","columns","field","editable","cellStyle","wordBreak","lookup","editComponent","rows","resize","newData","oldData","displayTraits","Array","isArray","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","nicknames","n","roomHint","manualModeHint","defaultNames","setItem","flex","components","Toolbar","tableRef","onRowClick","rowData","current","onTreeExpandChanged","tableData","path","parentChildData","row","element","parentId","data","icons","isLoading","actionsColumnIndex","paging","search","rowStyle","smartEnum","ioType","selectedRow","backgroundColor","onRowUpdate","onGHParamsChange","onRowDelete","App","extendedProps","encryptedFields","translations","require","showAckTempPasswordDialog","selectedTab","amazonAlexa","yandexAlisa","DialogContentText","loaded","default","AppBar","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","renderAckTempPasswordDialog","GenericApp","root","Boolean","location","hostname","themeName","getThemeName","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uJAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,gqvKCenBC,E,+KAeeC,GAAM,IAAD,OACZC,EAAID,EAAIE,OAAOC,MAAM,GAC3B,GAAIF,EAAG,CACH,IAAMG,EAAI,IAAIC,OAAOC,WACrBF,EAAEG,OAAS,SAAAhB,GACP,IAAMiB,EAAWjB,EAAEW,OAAOO,OAC1B,IACI,IAAMC,EAAOC,KAAKC,MAAMJ,GACpBE,EAAKG,QAAUH,EAAKI,OAChBJ,EAAKI,OAAOC,OAAS,EAAKC,MAAMF,OAAOC,KACvC,EAAKC,MAAMC,QAAQC,IAAKC,EAAE,cAAeT,EAAKI,OAAOC,OAErD,EAAKC,MAAMI,OAAOV,EAAKG,QAG3B,EAAKG,MAAMC,QAAQC,IAAKC,EAAE,kBAEhC,MAAO5B,GACL,EAAKyB,MAAMC,QAAQ1B,EAAE8B,cAG7BjB,EAAEkB,WAAWrB,QAEbsB,MAAM,8B,iCAKV,IAAMd,EAAS,CACXe,IAAK,kBAAoBC,KAAKT,MAAMF,OAAOC,KAAO,IAAMU,KAAKT,MAAMU,SACnEZ,OAAQH,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKT,MAAMF,SAC7CD,OAAQY,KAAKT,MAAMH,QAGnBJ,EAAOK,OAAOc,aACPnB,EAAOK,OAAOc,KAErBnB,EAAOK,OAAOe,kBACPpB,EAAOK,OAAOe,UAErBpB,EAAOK,OAAOgB,aACPrB,EAAOK,OAAOgB,KAIzB/B,EAAKgC,aAAatB,EAAOe,IAAM,QAASf,K,+BAGlC,IAAD,OACCuB,EAAQ3B,OAAO4B,SAASC,cAAc,SAC5CF,EAAMG,aAAa,OAAQ,QAC3BH,EAAMG,aAAa,KAAM,SACzBH,EAAMG,aAAa,UAAW,GAC9BH,EAAMI,iBAAiB,UAAU,SAAA7C,GAAC,OAAI,EAAK8C,iBAAiB9C,GAAG,kBAAW,GACzEyC,EAAMM,U,+BAGD,IAAD,OACL,OAAQ,6BACHb,KAAKT,MAAMF,OAAOyB,MAAS,yBAAKC,IAAKf,KAAKT,MAAMF,OAAOyB,KAAME,UAAWhB,KAAKT,MAAM0B,QAAQC,KAAMC,IAAI,SACrGnB,KAAKT,MAAMF,OAAO+B,QACd,kBAACC,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASC,QAAS,WACrF9C,OAAO+C,KAAK,EAAKpC,MAAMF,OAAO+B,OAAQ,UAC9CQ,UACL,kBAAC,IAAD,OACP,kBAACP,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,cAAcR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASI,MAAOpC,IAAKC,EAAE,gCAAiCgC,QAAS,kBAAM,EAAKI,WAAU,kBAAC,IAAD,OAC/K,kBAACT,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,cAAcR,UAAWhB,KAAKT,MAAM0B,QAAQQ,QAASI,MAAOpC,IAAKC,EAAE,8BAA+BgC,QAAS,kBAAM,EAAKK,aAAY,kBAAC,IAAD,W,oCA/EnKC,EAAUC,GAC1B,IAAMC,EAAKtD,OAAO4B,SAASC,cAAc,KACzCyB,EAAGxB,aAAa,OAAQ,uCAAyCyB,mBAAmBjD,KAAKgB,UAAU+B,EAAK,KAAM,KAC9GC,EAAGxB,aAAa,WAAYsB,GAE5BE,EAAGE,MAAMC,QAAU,OACnBzD,OAAO4B,SAAS8B,KAAKC,YAAYL,GAEjCA,EAAGrB,QAEHjC,OAAO4B,SAAS8B,KAAKE,YAAYN,O,GAZtBO,aA8FJC,eA1GA,SAAAC,GAAK,MAAK,CACrBlB,QAAS,CACLmB,YAAa,EACbC,UAAW,EACXC,MAAO,SAEX5B,KAAM,CACF6B,QAAS,EACTC,MAAO,OAkGAN,CAAmBpE,GCrD5B2E,E,kDACF,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IAqBV2D,eAAiB,SAAC7E,EAAI8E,GACd9E,IAAE,yBAAuB,EAAKkB,MAAM6D,YAAlC,YAAiD,EAAK7D,MAAMU,SAA5D,WACF,EAAKoD,SAAS,CAACC,gBAAiBH,GAASA,EAAMI,OArBnD,EAAKJ,MAAQ,CACTK,UAAU,EACVC,MAAO,GACPH,iBAAiB,EACjBI,kBAAkB,GAGtB,EAAKnE,MAAMoE,OAAOC,SAAlB,yBAA6C,EAAKrE,MAAM6D,YAAxD,YAAuE,EAAK7D,MAAMU,SAAlF,WAAoG4D,MAAK,SAAAV,GAAK,OAC1G,EAAKE,SAAS,CAACC,gBAAiBH,GAASA,EAAMI,SAXpC,E,gEAefvD,KAAKT,MAAMoE,OAAOG,eAAlB,yBAAmD9D,KAAKT,MAAM6D,YAA9D,YAA6EpD,KAAKT,MAAMU,SAAxF,UAA0GD,KAAKkD,kB,6CAI/GlD,KAAKT,MAAMoE,OAAOI,iBAAlB,yBAAqD/D,KAAKT,MAAM6D,YAAhE,YAA+EpD,KAAKT,MAAMU,SAA1F,UAA4GD,KAAKkD,kB,oCASvGc,GACV,OAAIA,EAAKC,OAAS,IAAMD,EAAKE,MAAM,WAAaF,EAAKE,MAAM,WAAaF,EAAKE,MAAM,QACxEzE,IAAKC,EAAE,8B,kCAMVmC,EAAOsC,EAAMC,GAAO,IAAD,OACrBC,EAAiB,SAATF,GAAmBnE,KAAKsE,cAActE,KAAKT,MAAMH,OAAO+E,IACtE,OAAQ,kBAACI,EAAA,EAAD,CACJC,MAAQ/E,IAAKC,EAAEmC,GACfwC,QAAUA,EACVrD,UAAYhB,KAAKT,MAAM0B,QAAQV,MAC/BkE,MAAQzE,KAAKT,MAAMH,OAAO+E,GAC1BC,KAAOA,GAAQ,OACfM,WAAaL,GAAS,GACtBM,SAAW,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAASR,EAAMrG,EAAEW,OAAOgG,QACnDG,OAAO,a,mCAKX,OAAQ,kBAACC,EAAA,EAAD,CAAM7D,UAAWhB,KAAKT,MAAM0B,QAAQ6D,MACxC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIhE,UAAWhB,KAAKT,MAAM0B,QAAQgE,MAC9BC,MAAM,gBACNrD,MAAM,eAEV,kBAACsD,EAAA,EAAD,KAAcC,IAAMC,gBAAgB5F,IAAKC,EAAE,kBAE/C,kBAAC4F,EAAA,EAAD,CAAalD,MAAO,CAACmD,UAAW,WAC5B,kBAACC,EAAA,EAAD,CAAQlE,KAAK,QAAQC,MAAM,UAAUa,MAAO,CAACmD,UAAW,UAAW7D,QAAS,WAC5D9C,OAAO+C,KAAK,qEAAsE,UAC1FC,UACJnC,IAAKC,EAAE,e,iCAKZ+F,GAAkB,IAAD,OACxBzF,KAAKqD,SAAS,CAAEG,UAAU,IAE1BxD,KAAKT,MAAMoE,OAAON,SAAS,OAASrD,KAAKT,MAAMU,SAAW,iBAAkB,CAACsD,IAAK,GAAImC,KAAK,IACtF7B,MAAK,kBAAM,EAAKtE,MAAMoE,OAAON,SAAS,OAAS,EAAK9D,MAAMU,SAAW,YAAa,CAACsD,IAAK,GAAImC,KAAK,OACjG7B,MAAK,kBAAM,EAAKtE,MAAMoE,OAAON,SAAS,OAAS,EAAK9D,MAAMU,SAAW,gBAAiB,CAACsD,IAAK,GAAImC,KAAK,OACrG7B,MAAK,kBAAM,EAAKtE,MAAMoE,OAAON,SAAS,OAAS,EAAK9D,MAAMU,SAAW,qBAAsB,CAACsD,IAAK,GAAImC,KAAK,OAC1G7B,MAAK,WACF,OAAI4B,EACO,EAAKlG,MAAMoE,OAAON,SAAS,OAAS,EAAK9D,MAAMU,SAAW,yBAA0B,CAACsD,KAAK,EAAMmC,KAAK,IAErGC,QAAQzH,aAItB2F,MAAK,kBAAM,EAAKtE,MAAMoE,OAAOiC,UAAU,sBAAwB,EAAKrG,MAAMU,aAC1E4D,MAAK,SAAA5B,GACF,OAAKA,GAAQA,EAAI5C,QAAW4C,EAAI5C,OAAOwG,QAK5B,EAAKtG,MAAMoE,OAAOmC,UAAU,sBAAwB,EAAKvG,MAAMU,SAAUgC,GAHzE0D,QAAQzH,aAMtB2F,MAAK,kBAAM,EAAKR,SAAS,CAACI,MAAOhE,IAAKC,EAAE,iDACxCqG,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,MAChCnC,MAAK,kBAAM,EAAKR,SAAS,CAACG,UAAU,S,oCAG9B,IAAD,OACV,OAAKxD,KAAKmD,MAAMM,MAEZ,kBAACwC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBzE,MAAM,EACN0E,iBAAkB,IAClBC,QAAS,kBAAM,EAAKjD,SAAS,CAACI,MAAO,MACrC8C,aAAc,CACV,mBAAoB,cAExBC,QAAS,0BAAMnI,GAAG,cAAc2B,KAAKmD,MAAMM,OAC3CgD,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJnF,aAAW,QACXD,MAAM,UACNP,UAAWhB,KAAKT,MAAM0B,QAAQ2F,MAC9BlF,QAAS,kBAAM,EAAK2B,SAAS,CAACI,MAAO,OAErC,kBAAC,IAAD,UAtBc,O,qCA4BnB5B,EAAOsC,EAAM/B,GAAQ,IAAD,OAC/B,OAAQ,kBAACyE,EAAA,EAAD,CAAkBF,IAAKxC,EAAM/B,MAAO0E,OAAOC,OAAO,CAACC,WAAY,GAAI5E,GAAQpB,UAAWhB,KAAKT,MAAM0B,QAAQgG,eAC3GC,QACI,kBAACC,EAAA,EAAD,CACIC,QAASpH,KAAKT,MAAMH,OAAO+E,GAC3BQ,SAAU,kBAAM,EAAKpF,MAAMoF,SAASR,GAAO,EAAK5E,MAAMH,OAAO+E,KAC7D5C,MAAM,YAGdiD,MAAO/E,IAAKC,EAAEmC,O,+BAId,IAAD,OACL,OACI,0BAAMb,UAAYhB,KAAKT,MAAM0B,QAAQoG,KACjC,kBAAC,EAAD,CACIpH,SAAWD,KAAKT,MAAMU,SACtBZ,OAASW,KAAKT,MAAMF,OACpBD,OAASY,KAAKT,MAAMH,OACpBI,QAAU,SAAA8H,GAAI,OAAI,EAAKjE,SAAS,CAACkE,UAAWD,KAC5C3H,OAASK,KAAKT,MAAMI,SAExB,yBAAKqB,UAAYhB,KAAKT,MAAM0B,QAAQuG,OAAS,IAAMxH,KAAKT,MAAM0B,QAAQwG,gBAChEzH,KAAK0H,YAAY,qBAAsB,SAAU,6BACjD1H,KAAK0H,YAAY,wBAAyB,OAAQ,YAAa,6BAC/D1H,KAAK2H,eAAe,eAAgB,eACtC,kBAACd,EAAA,EAAD,CAAkBF,IAAI,aAAa3F,UAAYhB,KAAKT,MAAM0B,QAAQgG,eAChD7E,MAAO,CAAES,UAAW,GAClCqE,QACE,kBAACC,EAAA,EAAD,CACIC,QAASpH,KAAKT,MAAMH,OAAOwI,WAC3BjD,SAAU,WAEN,IAAMkD,GAAU,EAAKtI,MAAMH,OAAOwI,WAClC,EAAKrI,MAAMoF,SAAS,aAAckD,GAAQ,kBACtCA,GAAU,EAAKtI,MAAMoF,SAAS,eAAe,OAErDpD,MAAM,YAGZiD,MAAO/E,IAAKC,EAAE,iBAEjBM,KAAK2H,eAAe,wCAAgB,eACrC,6BAEA,2BAAIlI,IAAKC,EAAE,kBACVM,KAAKT,MAAMuI,QAAU,yBAAK9G,UAAWhB,KAAKT,MAAM0B,QAAQ8G,aAActI,IAAKC,EAAE,8CAAsD,KACpI,kBAAC8F,EAAA,EAAD,CAAQwC,QAAQ,WACRhH,UAAYhB,KAAKT,MAAM0B,QAAQgH,OAC/BC,SAAWlI,KAAKT,MAAMuI,SAAW9H,KAAKmD,MAAMK,WAAaxD,KAAKmD,MAAMG,gBACpEzB,MAAS7B,KAAKmD,MAAMG,gBAAuD,GAArC7D,IAAKC,EAAE,4BAC7CgC,QAAU,kBAAM,EAAKyG,eACzB,kBAAC,IAAD,CAAY/F,MAAO,CAAEQ,YAAa,KAAQnD,IAAKC,EAAE,oCAGrD,2BAAID,IAAKC,EAAE,wBACVM,KAAKT,MAAMuI,QAAU,yBAAK9G,UAAWhB,KAAKT,MAAM0B,QAAQ8G,aAActI,IAAKC,EAAE,8CAAsD,KACpI,kBAAC8F,EAAA,EAAD,CAAQwC,QAAQ,WACRhH,UAAYhB,KAAKT,MAAM0B,QAAQgH,OAC/BC,SAAWlI,KAAKT,MAAMuI,SAAW9H,KAAKmD,MAAMK,WAAaxD,KAAKmD,MAAMG,gBACpEzB,MAAS7B,KAAKmD,MAAMG,gBAAuD,GAArC7D,IAAKC,EAAE,4BAC7CgC,QAAU,kBAAM,EAAKyG,YAAW,KACpC,kBAAC,IAAD,CAAa/F,MAAO,CAAEQ,YAAa,KAAQnD,IAAKC,EAAE,gCAEtD,2BAAK0F,IAAMC,gBAAgB5F,IAAKC,EAAE,eAClC,uBAAG0C,MAAO,CAAEgG,WAAY,SAAYhD,IAAMC,gBAAgB5F,IAAKC,EAAE,cACjE,uBAAG0C,MAAO,CAAEgG,WAAY,OAAQpB,WAAY,KAAO5B,IAAMC,gBAAgB5F,IAAKC,EAAE,oBAChF,uBAAG0C,MAAO,CAAEgG,WAAY,SAAYhD,IAAMC,gBAAgB5F,IAAKC,EAAE,oBACjE,uBAAG0C,MAAO,CAAEgG,WAAY,OAAQ7G,MAAO,QAAU6D,IAAMC,gBAAgB5F,IAAKC,EAAE,qBAElF,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQuG,OAAS,IAAMxH,KAAKT,MAAM0B,QAAQoH,YAAarI,KAAKsI,cACrFtI,KAAKuI,mB,GAzMD9F,aA2NPC,eArQA,SAAAC,GAAK,MAAK,CACrB0E,IAAK,CACDrE,MAAO,OACPwF,UAAW,QAEfjI,MAAO,CACHkI,SAAU,KAEdR,OAAQ,CACJrF,YAAa,GACb8F,aAAc,IAElB5D,KAAM,CACF6D,SAAU,IACVpD,UAAW,UAEfN,MAAO,CACH2D,OAAQ,KAEZpB,OAAQ,CACJnF,QAAS,eACTwG,cAAe,MACfjG,YAAa,IAEjByF,WAAY,CACRrF,MAAO,IACPJ,YAAa,GAEjB6E,eAAgB,CACZzE,MAAO,sBAEX8F,UAAW,CACPvH,MAAO,MACP6G,WAAY,QAEhBL,YAAa,CACTgB,SAAU,GACVxH,MAAO,MACPyH,UAAW,aA+NJtG,CAAmBO,G,mECnO5BgG,G,kDACF,WAAY1J,GAAQ,IAAD,8BACf,cAAMA,IAED4D,MAAQ,CACT+F,cAAc,GAJH,E,wDASPrH,EAAOsC,EAAMC,GAAO,IAAD,OAC3B,OAAQ,kBAACG,EAAA,EAAD,CACJC,MAAO/E,IAAKC,EAAEmC,GACdb,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAC/DxC,MAAOzE,KAAKT,MAAMH,OAAO+E,GACzBC,KAAMA,GAAQ,OACdO,SAAU,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAASR,EAAMrG,EAAEW,OAAOgG,QAClDG,OAAO,a,mCAIF/C,EAAOsC,EAAMgF,EAAS/G,GAAQ,IAAD,OACtC,OAAQ,kBAACgH,EAAA,EAAD,CAAapI,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAAgB7E,MAAO0E,OAAOC,OAAO,CAACC,WAAY,GAAI5E,IACtI,kBAACiH,EAAA,EAAD,CACI5E,MAAOzE,KAAKT,MAAMH,OAAO+E,IAAS,IAClCQ,SAAU,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAASR,EAAyB,MAAnBrG,EAAEW,OAAOgG,MAAgB,GAAK3G,EAAEW,OAAOgG,QAChFlE,MAAO,kBAAC+I,EAAA,EAAD,CAAOhK,KAAM6E,EAAM9F,GAAI8F,EAAO,aAEpCgF,EAAQI,KAAI,SAAAC,GAAI,OAAK,kBAACC,GAAA,EAAD,CAAU9C,IAAK,OAAS6C,EAAK/E,MAAOA,MAAO+E,EAAK/E,OAAS,KAAMhF,IAAKC,EAAE8J,EAAK3H,YAErG,kBAAC6H,EAAA,EAAD,KAAiBjK,IAAKC,EAAEmC,O,qCAIjBA,EAAOsC,EAAM/B,GAAQ,IAAD,OAC/B,OAAQ,kBAACyE,EAAA,EAAD,CAAkBF,IAAKxC,EAAM/B,MAAO0E,OAAOC,OAAO,CAACC,WAAY,GAAI5E,GAAQpB,UAAWhB,KAAKT,MAAM0B,QAAQgG,eAC7GC,QACI,kBAACC,EAAA,EAAD,CACIC,QAASpH,KAAKT,MAAMH,OAAO+E,GAC3BQ,SAAU,kBAAM,EAAKpF,MAAMoF,SAASR,GAAO,EAAK5E,MAAMH,OAAO+E,KAC7D5C,MAAM,YAGdiD,MAAO/E,IAAKC,EAAEmC,O,wCAIJsC,GAAO,IAAD,OACpB,OAAInE,KAAKmD,MAAM+F,aACH,kBAAC,KAAD,CACJvC,IAAI,kBACJgD,OAAQ,QACRhG,OAAQ3D,KAAKT,MAAMoE,OACnBiG,SAAU5J,KAAKT,MAAMH,OAAO+E,GAC5B0F,MAAO,CAAC,SACRvD,QAAS,kBAAM,EAAKjD,SAAS,CAAC6F,cAAc,KAC5CY,KAAM,SAAAF,GACF,EAAKvG,SAAS,CAAC6F,cAAc,IAC7B,EAAK3J,MAAMoF,SAASR,EAAMyF,MAI3B,O,+BAIL,IAAD,OACL,OACI,0BAAM5I,UAAWhB,KAAKT,MAAM0B,QAAQoG,KAC/BrH,KAAK0H,YAAY,YAAa,YAAY,6BAC1C1H,KAAK+J,aAAa,WAAY,WAAY,CACvC,CAAClI,MAAO,UAAW4C,MAAO,IAC1B,CAAC5C,MAAO,UAAW4C,MAAO,MAC1B,CAAC5C,MAAO,UAAW4C,MAAO,MAC1B,CAAC5C,MAAO,6CAAW4C,MAAO,OAC3B,CAAC5B,UAAW,KAAK,6BACnB7C,KAAK2H,eAAe,gCAAiC,gBAAiB,CAAC9E,UAAW,KAAK,6BACvF7C,KAAK0H,YAAY,yBAA0B,cAAc,6BACzD1H,KAAK0H,YAAY,mBAAoB,YAAY,6BAClD,yBAAK1G,UAAWhB,KAAKT,MAAM0B,QAAQgG,eAAgB7E,MAAO,CAACS,UAAW,KACjE7C,KAAK0H,YAAY,8BAA+B,kBACjD,kBAACgC,EAAA,EAAD,KAAiBjK,IAAKC,EAAE,wCAE5B,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQgG,gBAC9BjH,KAAK0H,YAAY,oBAAqB,eACvC,kBAACrG,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYG,QAAS,kBAAM,EAAK2B,SAAS,CAAC6F,cAAc,KAAQ1H,aAAW,MAAMY,MAAO,CAAC4H,WAAY,EAAGnH,UAAW,KAAK,kBAAC,IAAD,OAAiB,8BAErK,yBAAK7B,UAAWhB,KAAKT,MAAM0B,QAAQgG,gBAC9BjH,KAAK2H,eAAe,+BAAgC,YACrD,kBAAC+B,EAAA,EAAD,KAAiBtE,IAAMC,gBAAgB5F,IAAKC,EAAE,cAA8B,8BAE/EM,KAAK2H,eAAe,gBAAiB,SACrC3H,KAAKiK,kBAAkB,oB,GA5FVxH,aA4GfC,gBAjJA,SAAAC,GAAK,MAAK,CACrB0E,IAAK,CACDrE,MAAO,OACPwF,UAAW,QAEfjI,MAAO,CACHsC,UAAW,EACX4F,SAAU,KAEdR,OAAQ,CACJrF,YAAa,IAEjBkC,KAAM,CACF6D,SAAU,IACVpD,UAAW,UAEfN,MAAO,CACH2D,OAAQ,KAEZpB,OAAQ,CACJnF,QAAS,eACTwG,cAAe,MACfjG,YAAa,IAEjByF,WAAY,CACRrF,MAAO,IACPJ,YAAa,GAEjB6E,eAAgB,CACZzE,MAAO,sBAEXiE,eAAgB,CAEZyB,aAAc,MAgHPhG,CAAmBuG,I,wCCjF5BiB,G,kDACF,WAAY3K,GAAQ,IAAD,8BACf,cAAMA,IAED4D,MAAQ,CACTgH,SAAS,EACT1G,MAAO,GACPyF,cAAc,EACdkB,iBAAkB,GAClBC,eAAgB,GAChBC,SAAU,GACVhH,iBAAiB,GAErB,EAAKiH,kBAAoB,EAAKC,aAAaC,KAAlB,iBAEzB,EAAKlL,MAAMoE,OAAO+G,oBAAoB,gBACjC7G,MAAK,SAAA8G,GAAI,OACN,EAAKpL,MAAMoE,OAAO+G,oBAAoB,cACjC7G,MAAK,SAAA+G,GAAM,OAAI,EAAKvH,SAAS,CAC1BgH,eAAgBO,EAAOrB,KAAI,SAAAtH,GAAG,OAAIA,EAAIlC,IAAI8K,QAAQ,6BAA8B,OAChFT,iBAAkBO,EAAKpB,KAAI,SAAAtH,GAAG,OAAIA,EAAIlC,IAAI8K,QAAQ,+BAAgC,eAnBnF,E,gEAuBE,IAAD,OAChB7K,KAAKT,MAAMoE,OAAOG,eAAe,OAAS9D,KAAKT,MAAMU,SAAW,gBAAiBD,KAAKuK,mBAEtFvK,KAAKT,MAAMoE,OAAOiC,UAAlB,yBAA8C5F,KAAKT,MAAM6D,YAAzD,YAAwEpD,KAAKT,MAAMU,WAAY4D,MAAK,SAAA5B,GAAG,OACnG,EAAK1C,MAAMoE,OAAOC,SAAlB,yBAA6C,EAAKrE,MAAM6D,YAAxD,YAAuE,EAAK7D,MAAMU,SAAlF,WAAoG4D,MAAK,SAAAV,GAAK,OAC1G,EAAKE,SAAS,CAACC,gBAAiBrB,GAAOA,EAAI5C,QAAU4C,EAAI5C,OAAOwG,SAAW1C,GAASA,EAAMI,c,6CAIlGvD,KAAKT,MAAMoE,OAAOI,iBAAiB,OAAS/D,KAAKT,MAAMU,SAAW,gBAAiBD,KAAKuK,qB,mCAG/ElM,EAAI8E,GACbA,GAASnD,KAAKqD,SAAS,CAACsD,IAAKxD,EAAMI,Q,kCAG3B1B,EAAOsC,EAAMC,GAAO,IAAD,OAC3B,OAAQ,kBAACG,EAAA,EAAD,CACJC,MAAO/E,IAAKC,EAAEmC,GACdb,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAC/DxC,MAAOzE,KAAKT,MAAMH,OAAO+E,GACzBC,KAAMA,GAAQ,OACdO,SAAU,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAASR,EAAMrG,EAAEW,OAAOgG,QAClDG,OAAO,a,sCAIE,IAAD,OAEZ,OADA5E,KAAKqD,SAAS,CAAC8G,SAAS,IACjBnK,KAAKT,MAAMoE,OAAON,SAAS,OAASrD,KAAKT,MAAMU,SAAW,gBAAiB,CAACsD,IAAK,GAAImC,KAAK,IAC5F7B,MAAK,kBAAM,EAAKtE,MAAMoE,OAAOiC,UAAU,sBAAwB,EAAKrG,MAAMU,aAC1E4D,MAAK,SAAA5B,GACF,GAAKA,GAAQA,EAAI5C,QAAW4C,EAAI5C,OAAOwG,QAGnC,OAAO,EAAKtG,MAAMoE,OAAOmC,UAAU,sBAAwB,EAAKvG,MAAMU,SAAUgC,GAFhF,EAAKoB,SAAS,CAAC8G,SAAS,EAAO1G,MAAOhE,IAAKC,EAAE,wCAKpDmE,MAAK,kBAAM,EAAKR,SAAS,CAAC8G,SAAS,EAAO1G,MAAOhE,IAAKC,EAAE,6DACxDqG,OAAM,SAAAC,GACH,EAAK3C,SAAS,CAAC8G,SAAS,IACxB,EAAK5K,MAAMuL,UAAU9E,Q,oCAIlB,IAAD,OACV,OAAKhG,KAAKmD,MAAMM,MAEZ,kBAACwC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBzE,MAAM,EACN0E,iBAAkB,IAClBC,QAAS,kBAAM,EAAKjD,SAAS,CAACI,MAAO,MACrC8C,aAAc,CACV,mBAAoB,cAExBC,QAAS,0BAAMnI,GAAG,cAAc2B,KAAKmD,MAAMM,OAC3CgD,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJnF,aAAW,QACXD,MAAM,UACNP,UAAWhB,KAAKT,MAAM0B,QAAQ2F,MAC9BlF,QAAS,kBAAM,EAAK2B,SAAS,CAACI,MAAO,OAErC,kBAAC,IAAD,UAtBc,O,oCA4BpBU,EAAMM,GAChB,IAAMsG,GAAS/K,KAAKT,MAAMH,OAAO+E,IAAS,IAAI6G,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,KACtEC,EAAMJ,EAAMK,QAAQ3G,IACb,IAAT0G,IACAJ,EAAMM,OAAOF,EAAK,GAClBnL,KAAKT,MAAMoF,SAASR,EAAM4G,EAAMO,KAAK,S,iCAIlCnH,GAAO,IAAD,OACP4G,GAAS/K,KAAKT,MAAMH,OAAO+E,IAAS,IAAI6G,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,MAE/D,IADDH,EAAMK,QAAQpL,KAAKmD,MAAMmH,YAEjCS,EAAMQ,KAAKvL,KAAKmD,MAAMmH,UACtBtK,KAAKqD,SAAS,CAACiH,SAAU,KAAK,kBAAM,EAAK/K,MAAMoF,SAASR,EAAM4G,EAAMO,KAAK,Y,6CAK7E,IAAME,EAAQxL,KAAKT,MAAMH,OAAOqM,MAAMZ,QAAQ,aAAc,KACtDa,EAAS1L,KAAKT,MAAMH,OAAOuM,eACjC,OAAOH,GAASE,EAAS,IAAMA,EAAS,M,wCAG1BvH,GAAO,IAAD,OACpB,OAAInE,KAAKmD,MAAM+F,aACH,kBAAC,KAAD,CACJvC,IAAI,kBACJgD,OAAQ,QACRhG,OAAQ3D,KAAKT,MAAMoE,OACnBiG,SAAU5J,KAAKT,MAAMH,OAAO+E,GAC5B0F,MAAO,CAAC,SACRvD,QAAS,kBAAM,EAAKjD,SAAS,CAAC6F,cAAc,KAC5CY,KAAM,SAAAF,GACF,EAAKvG,SAAS,CAAC6F,cAAc,IAC7B,EAAK3J,MAAMoF,SAASR,EAAMyF,MAI3B,O,kCAIHpF,EAAOL,GAAO,IAAD,OACrB,OAAQ,yBAAKnD,UAAWhB,KAAKT,MAAM0B,QAAQ2K,UACvC,kBAAClC,EAAA,EAAD,KAAiBtE,IAAMC,gBAAgB5F,IAAKC,EAAE8E,KAC9C,kBAACD,EAAA,EAAD,CACIC,MAAO/E,IAAKC,EAAE,eACd0C,MAAO,CAACY,MAAO,KACfoB,KAAM,OACNK,MAAOzE,KAAKmD,MAAMmH,SAClBuB,QAAS,SAAA/N,GAAC,OAAkB,KAAdA,EAAEgO,SAAkB,EAAKC,WAAW5H,IAClDQ,SAAU,SAAA7G,GAAC,OAAI,EAAKuF,SAAS,CAACiH,SAAUxM,EAAEW,OAAOgG,MAAMuH,UACvDpH,OAAO,WAGX,kBAACvD,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAY2G,UAAWlI,KAAKmD,MAAMmH,SAAU5I,QAAS,kBAAM,EAAKqK,WAAW5H,IAAO/B,MAAO,CAAC4H,WAAY,EAAGnH,WAAY,KAAK,kBAAC,IAAD,OAElJ,yBAAK7B,UAAWhB,KAAKT,MAAM0B,QAAQ8J,QAC7B/K,KAAKT,MAAMH,OAAO+E,IAAS,IAAI6G,MAAM,UAAUC,QAAO,SAAAC,GAAC,QAAMA,KAC9D3B,KAAI,SAAA0C,GAAI,OACJ,kBAACC,GAAA,EAAD,CACGvF,IAAKsF,EACL3K,KAAK,QACLkD,MAAOyH,EACPE,SAAU,kBAAM,EAAKC,cAAcjI,EAAM8H,IACzCjL,UAAW,EAAKzB,MAAM0B,QAAQoL,c,+BAMxC,IAAD,OACL,OACI,0BAAMrL,UAAWhB,KAAKT,MAAM0B,QAAQoG,KAChC,kBAAC7B,EAAA,EAAD,CACIwC,QAAQ,WACRE,UAAWlI,KAAKmD,MAAMG,iBAAmBtD,KAAKmD,MAAMgH,QACpD5I,MAAM,UACNM,MAAQ7B,KAAKmD,MAAMG,gBAAuD,GAArC7D,IAAKC,EAAE,4BAC5CgC,QAAS,kBAAM,EAAK4K,kBACpB,kBAAC,IAAD,MAAgB7M,IAAKC,EAAE,4BAClB,6BAERM,KAAK0H,YAAY,YAAa,YAAY,6BAE3C,kBAACnD,EAAA,EAAD,CACInC,MAAO,CAACS,UAAW,IACnB2B,MAAO/E,IAAKC,EAAE,gCACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAAiB,IAAMjH,KAAKT,MAAM0B,QAAQsL,SACzG9H,MAAK,sEAAiEzE,KAAKmD,MAAMwD,IAA5E,iBAAwFxE,mBAAmBnC,KAAKT,MAAMH,OAAOqM,QAClIrH,KAAK,OACLoI,UAAU,EACV5H,OAAO,WAEX,kBAACvD,EAAA,EAAD,CAAKC,KAAK,QAAQc,MAAO,CAACS,UAAW,GAAImH,WAAY,GAAItI,QAAS,kBAAM0D,IAAMqH,gBAAN,sEAAqF,EAAKtJ,MAAMwD,IAAhG,iBAA4GxE,mBAAmB,EAAK5C,MAAMH,OAAOqM,WAAY,kBAAC,KAAD,OAAkB,6BACvP,6BAECzL,KAAK0M,YAAY,0BAA2B,mBAAmB,6BAEhE,kBAACnI,EAAA,EAAD,CACInC,MAAO,CAACS,UAAW,IACnB2B,MAAO/E,IAAKC,EAAE,yCACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAAiB,IAAMjH,KAAKT,MAAM0B,QAAQsL,SACzG9H,MAAK,sFAAiFzE,KAAKmD,MAAMwD,IAA5F,iBAAwGxE,mBAAmBnC,KAAKT,MAAMH,OAAOqM,OAA7I,qBACLrH,KAAK,OACLoI,UAAU,EACV5H,OAAO,WAEX,kBAACvD,EAAA,EAAD,CAAKC,KAAK,QAAQc,MAAO,CAACS,UAAW,GAAImH,WAAY,GAAItI,QAAS,kBAAM0D,IAAMqH,gBAAN,sFAAqG,EAAKtJ,MAAMwD,IAAhH,iBAA4HxE,mBAAmB,EAAK5C,MAAMH,OAAOqM,OAAjK,wBAA6L,kBAAC,KAAD,OAAkB,6BAEvR,kBAACrC,EAAA,EAAD,CAAapI,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAAgB7E,MAAO,CAAC4E,WAAY,KAC5G,kBAACqC,EAAA,EAAD,CACI5E,MAAOzE,KAAKT,MAAMH,OAAOuN,cAAgB,IACzChI,SAAU,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAAS,eAAmC,MAAnB7G,EAAEW,OAAOgG,MAAgB,GAAK3G,EAAEW,OAAOgG,QAC1FlE,MAAO,kBAAC+I,EAAA,EAAD,CAAOhK,KAAK,eAAejB,GAAG,yBAErC,kBAACoL,GAAA,EAAD,CAAU9C,IAAI,cAAclC,MAAO,KAAMhF,IAAKC,EAAE,aAC/CM,KAAKmD,MAAMiH,iBAAiBb,KAAI,SAAAC,GAAI,OAAK,kBAACC,GAAA,EAAD,CAAU9C,IAAK,OAAS6C,EAAM/E,MAAO+E,GAArC,gBAAyDA,OAEvG,kBAACE,EAAA,EAAD,KAAiBjK,IAAKC,EAAE,+BAE5B,6BACA,kBAAC0J,EAAA,EAAD,CAAapI,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAAgB7E,MAAO,CAAC4E,WAAY,KAC5G,kBAACqC,EAAA,EAAD,CACI5E,MAAOzE,KAAKT,MAAMH,OAAOwN,YAAc,IACvCjI,SAAU,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAAS,aAAiC,MAAnB7G,EAAEW,OAAOgG,MAAgB,GAAK3G,EAAEW,OAAOgG,QACxFlE,MAAO,kBAAC+I,EAAA,EAAD,CAAOhK,KAAK,aAAajB,GAAG,uBAEnC,kBAACoL,GAAA,EAAD,CAAU9C,IAAI,cAAclC,MAAO,KAAMhF,IAAKC,EAAE,aAC/CM,KAAKmD,MAAMkH,eAAed,KAAI,SAAAC,GAAI,OAAK,kBAACC,GAAA,EAAD,CAAU9C,IAAK,OAAS6C,EAAM/E,MAAO+E,GAArC,cAAuDA,OAEnG,kBAACE,EAAA,EAAD,KAAiBjK,IAAKC,EAAE,6BAE3BM,KAAKT,MAAMH,OAAOwN,WAAc,kBAACrI,EAAA,EAAD,CAC7BnC,MAAO,CAACS,UAAW,KACnB2B,MAAO/E,IAAKC,EAAE,uBACdiF,SAAU,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAAS,iBAAkB7G,EAAEW,OAAOgG,MAAMoG,QAAQ,aAAc,OAC1F7J,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAAiB,IAAMjH,KAAKT,MAAM0B,QAAQ4L,WACzGpI,MAAOzE,KAAKT,MAAMH,OAAOuM,eACzBvH,KAAK,OACLQ,OAAO,WACL,KACL5E,KAAKT,MAAMH,OAAOwN,WAAc,kBAACrI,EAAA,EAAD,CAC7BnC,MAAO,CAACS,UAAW,KACnB2B,MAAO/E,IAAKC,EAAE,yBACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAAiB,IAAMjH,KAAKT,MAAM0B,QAAQ4L,WACzGpI,MAAOzE,KAAK8M,uBACZ1I,KAAK,OACLoI,UAAU,EACV5H,OAAO,WACL,KACN,6BACA,6BACA,yBAAK5D,UAAWhB,KAAKT,MAAM0B,QAAQgG,gBAC/B,kBAAC1C,EAAA,EAAD,CACIC,MAAO/E,IAAKC,EAAE,yBACdsB,UAAWhB,KAAKT,MAAM0B,QAAQV,MAAQ,IAAMP,KAAKT,MAAM0B,QAAQgG,eAC/DxC,MAAOzE,KAAKT,MAAMH,OAAO2N,kBAAoB,GAC7C3I,KAAK,OACLO,SAAU,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAAS,mBAAoB7G,EAAEW,OAAOgG,QAChEG,OAAO,WAEX,kBAACvD,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYG,QAAS,kBAAM,EAAK2B,SAAS,CAAC6F,cAAc,KAAQ1H,aAAW,MAAMY,MAAO,CAAC4H,WAAY,EAAGnH,UAAW,KAAK,kBAAC,IAAD,OAChJ,kBAACgE,EAAA,EAAD,CAAmB7F,UAAWhB,KAAKT,MAAM0B,QAAQgG,eAC7CC,QACI,kBAACC,EAAA,EAAD,CACI/E,MAAO,CAAC4K,YAAa,IACrB5F,QAASpH,KAAKT,MAAMH,OAAO6N,8BAA+B,EAC1DtI,SAAU,SAAA7G,GAAC,OAAI,EAAKyB,MAAMoF,SAAS,8BAA+B7G,EAAEW,OAAO2I,UAC3E7F,MAAM,YAGdiD,MAAO/E,IAAKC,EAAE,mCAGtB,6BACCM,KAAKuI,cACLvI,KAAKiK,kBAAkB,yB,GApRjBxH,aAsSRC,gBA/VA,SAAAC,GAAK,MAAK,CACrB0E,IAAK,CACDrE,MAAO,OACPwF,UAAW,QAEfjI,MAAO,CACHsC,UAAW,EACX4F,SAAU,KAEd8D,SAAU,CACNvJ,MAAO,qBAEX6J,WAAY,CACR7J,MAAO,mBACPgH,WAAY,IAEhB/B,OAAQ,CACJrF,YAAa,IAEjBkC,KAAM,CACF6D,SAAU,IACVpD,UAAW,UAEfN,MAAO,CACH2D,OAAQ,KAEZpB,OAAQ,CACJnF,QAAS,eACTwG,cAAe,MACfjG,YAAa,IAEjByF,WAAY,CACRrF,MAAO,IACPJ,YAAa,GAEjB6E,eAAgB,CACZzE,MAAO,sBAEXiE,eAAgB,CAEZyB,aAAc,GAElBqC,MAAO,CACHmC,OAAQ,iBACRC,aAAc,EACdnK,MAAO,qBACPX,QAAS,eACTU,QAAS,EACTyF,UAAW,GACXwB,WAAY,GACZnH,UAAW,IAEfwJ,KAAM,CACFzJ,YAAa,MA0SNF,CAAmBwH,I,yCC/S5BkD,G,kDACF,WAAY7N,GAAQ,IAAD,8BACf,cAAMA,IAED4D,MAAQ,CACTK,UAAU,EACV6J,OAAQ,GACRC,gBAAiB,GACjBC,MAAO,GACPC,MAAO,GACP1F,QAAS,GACTtB,QAAS,GACTiH,SAAS,GAGb,EAAKC,kBAAoB,EAAKC,aAAalD,KAAlB,iBAEzB,EAAKlL,MAAMoE,OAAOiK,WACb/J,MAAK,SAAAgK,GACF,IAAMN,EAAQ,GACRC,EAAQ,GAWd,OAVA1G,OAAO7I,KAAK4P,GAAKC,SAAQ,SAAAzP,GACjBA,EAAG6F,MAAM,kBACTsJ,EAAMjC,KAAKsC,EAAIxP,IAEfA,EAAG6F,MAAM,uBACTqJ,EAAMhC,KAAKsC,EAAIxP,OAIvB,EAAKgF,SAAS,CAACkK,QAAOC,QAAOC,SAAS,IAC/B,EAAKlO,MAAMoE,OAAOoK,gBAAgB,SAAU,EAAKL,sBA9BjD,E,mEAmCf1N,KAAKT,MAAMoE,OAAOqK,kBAAkB,SAAUhO,KAAK0N,mBAAmB7J,MAAK,iB,mCAGlExF,EAAI4D,GACbjC,KAAKiO,cAAc5P,GACnB2B,KAAKkO,iBAAiB7P,EAAI4D,K,qCAGf5D,GACX2B,KAAKT,MAAMoE,OAAOwK,OAAOnO,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAU,SAAU5B,K,iCAGhFA,GACP,IAAMyJ,EAAU5I,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM2E,WACxB,IAAzBA,EAAQsD,QAAQ/M,KAChByJ,EAAQyD,KAAKlN,GACb2B,KAAKqD,SAAS,CAACyE,e,oCAITzJ,GACV,IAAMyJ,EAAU5I,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM2E,UAC/CqD,EAAMrD,EAAQsD,QAAQ/M,IAEf,IAAT8M,IACArD,EAAQuD,OAAOF,EAAK,GACpBnL,KAAKqD,SAAS,CAACyE,e,uCAINzJ,EAAI4D,GAEjB,GAAI5D,EAAG6F,MAAM,uBACT,IAAK,IAAIkK,EAAIpO,KAAKmD,MAAMoK,MAAMtJ,OAAS,EAAGmK,GAAK,EAAIA,IAC/C,GAAIpO,KAAKmD,MAAMoK,MAAMa,GAAGrO,MAAQ1B,EAAI,CAChC,IAAMkP,EAAQrO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAMoK,QAC/CtL,EACAsL,EAAMa,GAAKnM,EAEXsL,EAAMlC,OAAO+C,EAAG,GAEpBpO,KAAKqD,SAAS,CAACkK,UACf,YAIZ,GAAIlP,EAAG6F,MAAM,kBACT,IAAK,IAAIkK,EAAIpO,KAAKmD,MAAMqK,MAAMvJ,OAAS,EAAGmK,GAAK,EAAGA,IAC9C,GAAIpO,KAAKmD,MAAMqK,MAAMY,GAAGrO,MAAQ1B,EAAI,CAChC,IAAMmP,EAAQtO,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAMqK,QAC/CvL,EACAuL,EAAMY,GAAKnM,EAEXuL,EAAMnC,OAAO+C,EAAG,GAEpBpO,KAAKqD,SAAS,CAACmK,UACf,S,mCAMHnP,GAAK,IAAD,OACT4D,EAAMjC,KAAKmD,MAAMoK,MAAMc,MAAK,SAAAvQ,GAAC,OAAIA,EAAEiC,MAAQ1B,MAAO2B,KAAKmD,MAAMqK,MAAMa,MAAK,SAAAvQ,GAAC,OAAIA,EAAEiC,MAAQ1B,KAEvFiQ,EAAYlJ,IAAMmJ,oBAAoBtM,GAC1CA,EAAM/C,KAAKC,MAAMD,KAAKgB,UAAU+B,KACd,IAAdqM,EACAlJ,IAAMoJ,iBAAiBvM,EAAKjC,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOqP,UAElGrJ,IAAMsJ,gBAAgBzM,EAAKjC,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOqP,UAGrGzO,KAAK2O,WAAWtQ,GAEhB2B,KAAKT,MAAMoE,OAAOmC,UAAUzH,EAAI4D,GAC3B4B,MAAK,WAEF,EAAKqK,iBAAiB7P,EAAI4D,GAC1B,EAAK2M,eAAevQ,GAEpBwQ,YAAW,kBAAM,EAAKZ,cAAc5P,KAAK,U,6BAI9CA,GACH,IAAM4D,EAAMjC,KAAKmD,MAAMoK,MAAMc,MAAK,SAAAvQ,GAAC,OAAIA,EAAEiC,MAAQ1B,MAAO2B,KAAKmD,MAAMqK,MAAMa,MAAK,SAAAvQ,GAAC,OAAIA,EAAEiC,MAAQ1B,KACzFiQ,EAAYlJ,IAAMmJ,oBAAoBtM,EAAKjC,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOqP,UAC5F,kBAAdH,GAA0BA,IACjCA,EAAYA,EAAU7O,IAAKqP,gBAAkBR,EAAUS,IAE3DT,EAAYA,GAAalJ,IAAM4J,qBAAqB/M,EAAK,KAAM,CAACgN,SAAUxP,IAAKqP,gBAC/E9O,KAAKqD,SAAS,CAACgK,OAAQhP,EAAIiP,gBAAiBgB,M,iCAGrCrM,GAAM,IAAD,OACRqM,EAAYlJ,IAAMmJ,oBAAoBtM,EAAKjC,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAUD,KAAKT,MAAMH,OAAOqP,UAEjHH,GAAkC,kBAAdA,IACpBA,EAAYA,EAAU7O,IAAKqP,gBAAkBR,EAAUS,IAAM,IAEjE,IAAIzP,EAAO8F,IAAM4J,qBAAqB/M,GAEtC,OAAQ,yBAAK0E,IAAK1E,EAAIlC,IAAKiB,UAAWhB,KAAKT,MAAM0B,QAAQiO,SAAU9M,MAAO,CAAC+M,YAAqD,IAAzCnP,KAAKmD,MAAM2E,QAAQsD,QAAQnJ,EAAIlC,KAnMxG,YAmMsI,YAChJ,0BAAMiB,UAAWhB,KAAKT,MAAM0B,QAAQmO,aAAchN,MAAO,CAACiN,SAAuB,IAAdf,EAAsB,GAAK,IAAKA,GAAa,KAAMA,EAAa,0BAAMtN,UAAWhB,KAAKT,MAAM0B,QAAQqO,iBAApC,KAAwDhQ,EAAxD,KAAyEA,GAC5M,0BAAM0B,UAAWhB,KAAKT,MAAM0B,QAAQsO,WAAYnN,MAAO,CAACiN,SAAuB,IAAdf,EAAsB,GAAK,IAAKrM,EAAIlC,KACrG,kBAACyP,GAAA,EAAD,CACIxO,UAAWhB,KAAKT,MAAM0B,QAAQwO,gBAC9BrI,SAAuB,IAAdkH,EACT3J,SAAU,kBAAM,EAAK+K,aAAazN,EAAIlC,QAE1C,kBAAC2G,EAAA,EAAD,CAAYlF,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQ0O,aAAcjO,QAAS,kBAAM,EAAKkO,OAAO3N,EAAIlC,OACrG,kBAAC,IAAD,CAAUgJ,SAAS,c,kCAMnBzJ,GAAO,IAAD,OACd,OAAOU,KAAKmD,MAAM7D,GAAMiK,KAAI,SAAAzL,GAAC,OAAI,EAAK+R,WAAW/R,Q,sCAGpC,IAAD,OACZ,OAAIkC,KAAKmD,MAAMqD,QACH,kBAAC,KAAD,CAAec,KAAMtH,KAAKmD,MAAMqD,QAASF,QAAS,kBAAM,EAAKjD,SAAS,CAACmD,QAAS,QAEjF,O,wCAII,IAAD,OAGd,IADYxG,KAAKmD,MAAMkK,OAAOyC,WAAW,mBAAqB9P,KAAKmD,MAAMoK,MAAQvN,KAAKmD,MAAMqK,OAClFa,MAAK,SAAApM,GAAG,OACd,EAAKkB,MAAMkK,SAAWpL,EAAIlC,MAC1B,EAAKoD,MAAMmK,kBAAoBlI,IAAM4J,qBAAqB/M,EAAK,KAAM,CAACgN,SAAUxP,IAAKqP,iBACrF,EAAK3L,MAAMmK,kBAAoBlI,IAAMmJ,oBAAoBtM,EAAK,EAAK1C,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,cACpIzO,KAAKqD,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,wBAC5B,CACHM,KAAK2O,WAAW3O,KAAKmD,MAAMkK,QAC3BwB,YAAW,kBAAM,EAAKZ,cAAc,EAAK9K,MAAMkK,UAAS,KACxD,IAEI0C,EAFE1R,EAAK2B,KAAKmD,MAAMkK,OACtBrN,KAAKqD,SAAS,CAACgK,OAAQ,KAEvBrN,KAAKT,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAGF,OAFAmD,IAAM4K,gBAAgB/N,EAAK,EAAKkB,MAAMmK,qBAAiB2C,OAAWA,EAAW,EAAK1Q,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UACnJsB,EAAS9N,EACF,EAAK1C,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WAEF,EAAKqK,iBAAiB7P,EAAI0R,GAC1B,EAAKnB,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,S,yCAIzB,IAAD,OACf,GAAIhG,KAAKmD,MAAMkK,OAAQ,CACnB,IAAMpL,EAAMjC,KAAKmD,MAAMoK,MAAMc,MAAK,SAAAvQ,GAAC,OAAIA,EAAEiC,MAAQ,EAAKoD,MAAMkK,WAAWrN,KAAKmD,MAAMqK,MAAMa,MAAK,SAAAvQ,GAAC,OAAIA,EAAEiC,MAAQ,EAAKoD,MAAMkK,UAEvH,OAAQ,kBAAC6C,EAAA,EAAD,CACJvO,MAAM,EACNgH,SAAS,KACTwH,WAAW,EACX7J,QAAS,kBAAM,EAAKjD,SAAS,CAACgK,OAAQ,MACtC+C,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,wBAAwB2B,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqB0F,IAAM4J,qBAAqB/M,EAAK,KAAM,CAACgN,SAAUxP,IAAKqP,kBAC9I,kBAACyB,EAAA,EAAD,KACI,kBAAChM,EAAA,EAAD,CACInC,MAAO,CAACY,MAAO,QACfwB,MAAO/E,IAAKC,EAAE,cACdiF,SAAU,SAAA7G,GAAC,OAAI,EAAKuF,SAAS,CAACiK,gBAAiBxP,EAAEW,OAAOgG,SACxDA,MAAOzE,KAAKmD,MAAMmK,gBAClB5I,WAAYjF,IAAKC,EAAE,gDACnBkF,OAAO,YAGf,kBAAC4L,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK+O,mBAAmBlP,MAAM,UAAUmP,WAAS,GAAEjR,IAAKC,EAAE,OACjF,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK2B,SAAS,CAACgK,OAAQ,OAAO5N,IAAKC,EAAE,aAIpE,OAAO,O,+BAKX,OAAIM,KAAKmD,MAAMsK,QACH,kBAACkD,GAAA,EAAD,MAGR,0BAAM3P,UAAWhB,KAAKT,MAAM0B,QAAQoG,KAChC,yBAAKrG,UAAWhB,KAAKT,MAAM0B,QAAQuG,QAC/B,wBAAIxG,UAAWhB,KAAKT,MAAM0B,QAAQ2P,cAAenR,IAAKC,EAAE,UACxD,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQ4P,WAAY7Q,KAAK8Q,YAAY,WAEpE,yBAAK9P,UAAWhB,KAAKT,MAAM0B,QAAQuG,QAC/B,wBAAIxG,UAAWhB,KAAKT,MAAM0B,QAAQ2P,cAAenR,IAAKC,EAAE,cACxD,yBAAKsB,UAAWhB,KAAKT,MAAM0B,QAAQ4P,WAAY7Q,KAAK8Q,YAAY,WAEnE9Q,KAAK+Q,gBACL/Q,KAAKgR,wB,GAnPFvO,aAoQLC,gBA1TA,SAAAC,GAAK,MAAK,CACrB0E,IAAK,CACDrE,MAAO,OACP4F,OAAQ,QAEZpB,OAAQ,CACJnF,QAAS,eACTwG,cAAe,MACfjG,YAAa,GACbgG,OAAQ,OACRqI,SAAU,SACVjO,MAAO,mBACPyF,SAAU,IACVE,SAAU,KAEdkI,UAAW,CACPjI,OAAQ,oBACRqI,SAAU,OACVxI,SAAU,KAEdgH,gBAAiB,CACbyB,SAAU,WACVC,MAAO,EACPC,IAAK,GAETzB,aAAc,CAEVuB,SAAU,WACVE,IAAK,EACLD,MAAO,IAEX/B,aAAc,GAGdE,gBAAgB,CACZtG,UAAW,UAEfkG,SAAU,CACNtG,OAAQ,GACR5F,MAAO,OACPkO,SAAU,YAEd3B,WAAY,CACRlN,QAAS,QACT2G,UAAW,SACXD,SAAU,IAEd6H,aAAc,CACVzB,WAAYxM,EAAM0O,QAAQC,QAAQC,MAClCxO,QAAS,GACTxB,MAAOoB,EAAM0O,QAAQC,QAAQE,iBAwQtB9O,CAAmB0K,I,+BC1R5BqE,GAAiB,CACnBC,OAAQ,CAACnQ,MAVG,UAUaT,KAAM6Q,IAAQtR,KAAM,WAC7CuR,QAAS,CAACrQ,MAVG,OAUcT,KAAM6Q,IAAQtR,KAAM,YAE/CwR,qBAAsB,CAACtQ,MAXV,UAW2BT,KAAMgR,IAAiBzR,KAAM,0BACrE0R,2BAA4B,CAACxQ,MAdjB,UAciCT,KAAMkR,IAAQ3R,KAAM,gCACjE4R,2BAA4B,CAAC1Q,MAdhB,OAciCT,KAAMoR,IAAU7R,KAAM,gCAEpE8R,cAAe,CAAC5Q,MAfH,UAeoBT,KAAMsR,IAAgB/R,KAAM,kBAC7DgS,oBAAqB,CAAC9Q,MAlBV,UAkB0BT,KAAMkR,IAAQ3R,KAAM,wBAC1DiS,oBAAqB,CAAC/Q,MAlBT,OAkB0BT,KAAMoR,IAAU7R,KAAM,wBAE7DkS,SAAU,CAAChR,MAnBE,UAmBeT,KAAM0R,IAAWnS,KAAM,aAEnDoS,oBAAqB,CAAClR,MArBT,UAqB0BT,KAAM4R,IAAUrS,KAAM,yBAC7DsS,0BAA2B,CAACpR,MAxBhB,UAwBgCT,KAAMkR,IAAQ3R,KAAM,+BAChEuS,0BAA2B,CAACrR,MAxBf,OAwBgCT,KAAMoR,IAAU7R,KAAM,+BAEnEwS,qBAAsB,CAACtR,MAxBT,UAwB2BT,KAAMgS,IAAiBzS,KAAM,0BACtE0S,sBAAuB,CAACxR,MAzBV,UAyB4BT,KAAMgS,IAAiBzS,KAAM,0BAEvE2S,aAAc,CAACzR,MA5BF,UA4BmBT,KAAMmS,IAAU5S,KAAM,kBACtD6S,aAAc,CAAC3R,MA5BD,UA4BmBT,KAAMmS,IAAU5S,KAAM,oBAGrD8S,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,UAmJ9GC,G,kDACF,WAAY7T,GAAQ,IAAD,6BACf,cAAMA,GAEDkS,GAAe4B,aAChBvM,OAAO7I,KAAKwT,IAAgB3D,SAAQ,SAAA5C,GAAC,OAAIuG,GAAevG,GAAG7K,KAAOZ,IAAKC,EAAE+R,GAAevG,GAAG7K,SAC3FoR,GAAe4B,YAAa,GAGhC,EAAKlQ,MAAQ,CACTmK,gBAAiB,GACjBD,OAAQ,GACRiG,gBAAiB,KACjBC,eAAgB,GAChBC,SAAU,GAEVC,mBAAmB,EACnBvK,cAAc,EACdwK,iBAAkB,GAClB5L,QAAS,GACT6L,QAAS,GACTnN,QAAS,GACTyE,OAAQ,GACRwC,SAAS,EACTmG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjB,EAAKC,aAAe,KACpB,EAAKC,YAAc,KACnB,EAAKC,iBAAmB,EACxB,EAAK3G,gBAAkB,GAEvB,EAAK4G,gBAAkB,KACvB,EAAKC,mBAAqB,EAAKC,cAAc3J,KAAnB,iBAC1B,EAAK4J,oBAAsB,EAAKC,eAAe7J,KAApB,iBAE3B,EAAKlL,MAAMoE,OAAOiC,UAAlB,yBAA8C,EAAKrG,MAAM6D,YAAzD,YAAwE,EAAK7D,MAAMU,WAAY4D,MAAK,SAAA5B,GAChG,EAAK1C,MAAMoE,OAAOC,SAAlB,yBAA6C,EAAKrE,MAAM6D,YAAxD,YAAuE,EAAK7D,MAAMU,SAAlF,WAAoG4D,MAAK,SAAAV,GAChGlB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOwG,SAAa1C,GAAUA,EAAMI,KAGjE,EAAKqQ,SAFL,EAAKvQ,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,4BAA6B+N,SAAS,EAAOkG,QAAS,WAxClF,E,mDAgDZY,GAAa,IAAD,OACXC,KAAKC,MAAQzU,KAAK0U,WAAa,MACnC1U,KAAK0U,WAAaF,KAAKC,MACnBF,EACAvU,KAAKqD,SAAS,CAACoK,SAAS,EAAMmG,QAAQ,IAEtC5T,KAAKqD,SAAS,CAACuQ,QAAQ,IAE3Be,QAAQC,IAAI,gBACZ5U,KAAKgU,YAAcnF,YAAW,WAC1B8F,QAAQC,IAAI,mBACZ,EAAKZ,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKlR,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMoE,OAAOwK,OAAOnO,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAU,SAAU,MAClF4D,MAAK,SAAA8G,GACF,EAAKqJ,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KACfrJ,GAAQA,EAAKtG,MACb,EAAKhB,SAAS,CAACmD,QAAS/G,IAAKC,EAAEiL,EAAKtG,UAEhC,EAAK6P,kBACA,EAAKtE,OAAO,EAAKsE,gBAAiBvJ,IACnC,EAAKtH,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,0BAA2B,EAAKwU,mBAEnE,EAAKA,gBAAkB,MAE3BS,QAAQC,IAAI,oBAEZ,EAAKvR,SAAS,CAACsQ,QAAShJ,EAAM8C,SAAS,EAAO3F,QAAS,GAAI8L,QAAQ,QAG1E7N,OAAM,SAAAjI,GAAC,OAAI,EAAKuF,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,WAAY5B,W,oCAGjDO,EAAI8E,GAAQ,IAAD,OACrBwR,QAAQC,IAAI,UAAYvW,EAAK,KAAO8E,EAAQA,EAAMI,IAAM,IAAMJ,EAAMuC,IAAM,SACtEvC,IAAuB,IAAdA,EAAMuC,MAA8B,IAAdvC,EAAMI,MACrCvD,KAAK8U,UAAYD,aAAa7U,KAAK8U,UACnC9U,KAAK8U,SAAWjG,YAAW,WACvB,EAAKiG,SAAW,KAChB,EAAKlB,WACN,Q,qCAIIvV,EAAI8E,GACfA,IAAuB,IAAdA,EAAMuC,KAAgBvC,EAAMI,KAAOvD,KAAKqD,SAAS,CAACmD,QAASrD,EAAMI,Q,0CAI1EvD,KAAKT,MAAMoE,OAAOG,eAAlB,UAAoC9D,KAAKT,MAAM6D,YAA/C,YAA8DpD,KAAKT,MAAMU,SAAzE,kBAAmGD,KAAKmU,oBACxGnU,KAAKT,MAAMoE,OAAOG,eAAlB,UAAoC9D,KAAKT,MAAM6D,YAA/C,YAA8DpD,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKqU,uB,6CAI9GrU,KAAKT,MAAMoE,OAAOI,iBAAlB,UAAsC/D,KAAKT,MAAM6D,YAAjD,YAAgEpD,KAAKT,MAAMU,SAA3E,kBAAqGD,KAAKmU,oBAC1GnU,KAAKT,MAAMoE,OAAOI,iBAAlB,UAAsC/D,KAAKT,MAAM6D,YAAjD,YAAgEpD,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKqU,qBAC5GrU,KAAK+T,eACLc,aAAa7U,KAAK+T,cAClB/T,KAAK+T,aAAe,Q,qCAIb1V,GACX2B,KAAKT,MAAMoE,OAAOwK,OAAOnO,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAU,SAAU5B,K,iCAGhFA,EAAI0W,GACX,IAAMjN,EAAU5I,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM2E,WACxB,IAAzBA,EAAQsD,QAAQ/M,IAChByJ,EAAQyD,KAAKlN,GACb2B,KAAKqD,SAAS,CAACyE,YAAU,kBAAMiN,GAAMA,QAErCA,GAAMA,M,oCAIA1W,GACV,IAAMyJ,EAAU5I,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM2E,UAC/CqD,EAAMrD,EAAQsD,QAAQ/M,IAEf,IAAT8M,IACArD,EAAQuD,OAAOF,EAAK,GACpBnL,KAAKqD,SAAS,CAACyE,e,6BAIhBzJ,EAAIsV,GAAU,IAAD,OAEVqB,GADNrB,EAAUA,GAAW3T,KAAKmD,MAAMwQ,SACTtF,MAAK,SAAA4G,GAAG,OAAIA,EAAIC,2BAA2B7W,KAAOA,KACzE,QAAI2W,IACAhV,KAAKT,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GACF,IAAIqM,EAAY0G,EAAOE,2BAA2BC,cAAgBH,EAAOE,2BAA2BC,cAAgBH,EAAOI,aAClG,kBAAd9G,GAA0BA,IACjCA,EAAYA,EAAU7O,IAAKqP,gBAAkBR,EAAUS,IAE3D,EAAKzB,gBAAkBgB,EACvB,IAAIgF,EAAkB,KACjB0B,EAAOE,2BAA2BG,QACnC/B,EAAkB0B,EAAOE,2BAA2BI,WAGxD,EAAKjS,SAAS,CAACgK,OAAQhP,EAAIiV,kBAAiBhG,gBAAiBgB,EAAWiF,eAAgBnO,IAAM4J,qBAAqB/M,EAAK,KAAM,CAACgN,SAAUxP,IAAKqP,sBAE/I,K,kCAMH0E,GACRxT,KAAKqD,SAAS,CAACmQ,WAAUE,kBAAkB,M,iCAGnC,IAAD,OACHrV,EAAK2B,KAAKmD,MAAMqQ,SAEpBxT,KAAK2O,WAAWtQ,GAAI,WAChB,EAAKkB,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAEF,OADAmD,IAAMoJ,iBAAiBvM,EAAK,EAAK1C,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAC3F,EAAKlP,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WACF,EAAKR,SAAS,CAACmQ,SAAU,GAAIE,kBAAkB,EAAOI,YAAazV,IAEnE,EAAK0V,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKnF,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,oCAI/BiP,GAAM,IAAD,OAETM,EAAU,GAChB,IAAKN,EAAIM,QAEL,OADAZ,QAAQC,IAAI,wBACL,KAEXK,EAAIM,QAAQC,MAAK,SAACtK,EAAGuK,GACjB,OAAIvK,IAAMuK,EAAU,EACV,WAANvK,GAAwB,EAClB,WAANuK,EAAuB,EAEjB,YAANvK,GAAyB,EACnB,YAANuK,EAAwB,EACrB,KAGX3O,OAAO7I,KAAKwT,IAAgB3D,SAAQ,SAAArH,GAChC,IAAqC,IAAjCwO,EAAIM,QAAQnK,QAAQ3E,GAAgB,CACpC,IAAMiP,EAAOjE,GAAehL,GAAQ3F,KACpCyU,EAAQhK,KAAM,0BAAM5E,IAAKF,EAAQ5E,MAAO4P,GAAehL,GAAQpG,MAAM,kBAACqV,EAAD,CAAM1U,UAAW,EAAKzB,MAAM0B,QAAQ0U,WAAYvT,MAAO,CAACb,MAAOkQ,GAAehL,GAAQlF,eAInK,IAAK,IAAI2J,EAAI,EAAGA,EAAI+J,EAAIM,QAAQtR,OAAQiH,IAC/BuG,GAAewD,EAAIM,QAAQrK,KAC5BqK,EAAQhK,KAAM,0BAAM5E,IAAKsO,EAAIM,QAAQrK,IAAK+J,EAAIM,QAAQrK,KAG9D,OAAOqK,I,+BAGFK,GACL,IAAM/B,EAAW3U,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM0Q,WAChD1I,EAAM0I,EAASzI,QAAQpL,KAAKmD,MAAMwQ,QAAQiC,GAASR,eAC5C,IAATjK,EACA0I,EAAStI,KAAKvL,KAAKmD,MAAMwQ,QAAQiC,GAASR,cAE1CvB,EAASxI,OAAOF,EAAK,GAEzBnL,KAAKqD,SAAS,CAACwQ,e,uCAGFoB,EAAKW,EAASvX,EAAI+F,GAAO,IAAD,OAErC,IAAa,IAATA,EAAgB,CAKhB,IAJA,IAAMyR,EAAQ,CACT,kBAACpM,GAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,IAAG,4BAAKhF,IAAKC,EAAE,aACvC,kBAAC+J,GAAA,EAAD,CAAU9C,IAAI,OAAOlC,MAAM,UAAUhF,IAAKC,EAAE,gBAExC0O,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3ByH,EAAMtK,KAAM,kBAAC9B,GAAA,EAAD,CAAW9C,IAAKyH,EAAExO,WAAY6E,MAAO2J,EAAExO,YAAawO,EAApD,MAEhB,OAAQ,kBAAChF,EAAA,EAAD,CAAapI,UAAWhB,KAAKT,MAAM0B,QAAQ6U,gBAC/C,kBAACzM,EAAA,EAAD,CAAQrI,UAAWhB,KAAKT,MAAM0B,QAAQ8U,qBAAsBtR,OAAQL,GAAQ,IAAIxE,WAAY+E,SAAU,SAAA7G,GAAC,OAAI,EAAKkY,eAAe3X,EAAIP,EAAEW,OAAOgG,SAASoR,GACrJ,kBAACnM,EAAA,EAAD,CAAgB1I,UAAWhB,KAAKT,MAAM0B,QAAQgV,qBAAsBxW,IAAKC,EAAE,WAG/E,OAAO,O,qCAIArB,EAAI6X,EAAM9R,GAAO,IAAD,OAC3BpE,KAAK2O,WAAWtQ,GAAI,WAChB,EAAKkB,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAYF,OAXAmD,IAAM4K,gBAAgB/N,OAAKgO,EAAWiG,EAAM9R,EAAM,EAAK7E,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAEpH,EAAKtL,MAAM2Q,cAAgBzV,IAC3B,EAAKgF,SAAS,CAACyQ,YAAazV,IAC5B,EAAK0V,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKxU,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WAEF,EAAK+K,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,+CAIpB5B,EAAMO,GAC3B,IAAa,IAATP,EAAgB,CAIhB,IAHA,IAAMyR,EAAQ,CACT,kBAACpM,GAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,KAAI,4BAAKhF,IAAKC,EAAE,cAEpC0O,EAAI,EAAGA,EAAI+E,GAAWlP,OAAQmK,IACnCyH,EAAMtK,KAAM,kBAAC9B,GAAA,EAAD,CAAW9C,IAAKwM,GAAW/E,GAAI3J,MAAO0O,GAAW/E,IAAI,4BAAK3O,IAAKC,EAAEyT,GAAW/E,OAE5F,OACI,kBAAChF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ5E,MAAOL,GAAQ,IAAKO,SAAU,SAAA7G,GAAC,OAAI6G,EAA4B,MAAnB7G,EAAEW,OAAOgG,MAAgB,GAAK3G,EAAEW,OAAOgG,SAASoR,GACpG,kBAACnM,EAAA,EAAD,CAAgB1I,UAAWhB,KAAKT,MAAM0B,QAAQgV,qBAAsBxW,IAAKC,EAAE,WAGnF,MAAO,K,uCAIEuV,EAAKW,EAASvX,EAAI+F,GAAO,IAAD,OACrC,OAAOpE,KAAKmW,yBAAyB/R,GAAM,SAAAK,GAAK,OAAI,EAAKuR,eAAe3X,OAAI4R,EAAWxL,Q,qCAG5EwQ,EAAKW,GAAU,IAAD,OACnB5W,EAAS,GACTiC,EAAUjB,KAAKT,MAAM0B,QAE3B,GAAIgU,EAAIC,2BAA2BG,MAAO,CACtC,IAAMe,EAAanB,EAAIC,2BAA2BkB,SAC5CC,EAAapB,EAAIC,2BAA2BmB,MAC5CxM,EAAaoL,EAAIC,2BAA2BoB,MAC5CC,EAAatB,EAAIC,2BAA2BsB,WAE9CC,EAAI,EACR,IAAK,IAAMC,KAAQN,EACf,GAAIA,EAASO,eAAeD,GACxB,IADgC,IAAD,WACtBtI,GACL,IAAM/P,EAAK+X,EAASM,GAAMtI,GAAG/P,GACzB8Q,GAAiD,IAApC,EAAKhM,MAAM2E,QAAQsD,QAAQ/M,GAlf9C,YAkfoG,SAAzB,EAAKkB,MAAMqX,UAjfzE,UACC,UAifR,EAAKzT,MAAM2Q,cAAgBzV,GAlfpB,YAkf2B8Q,GAjf1B,YAifuEA,IAC/EA,EAAsC,SAAzB,EAAK5P,MAAMqX,UAjfpB,UACC,WAkfT5X,EAAOuM,KAAM,yBAAK5E,IAAK,MAAQtI,EAAI2C,UAAWC,EAAQ4V,WAAYzU,MAAQqU,EAAI,EAAK,GAAK,CAACtH,eACrF,yBAAKnO,UAAW,EAAKzB,MAAM0B,QAAQ6V,eAAiB,IAAM,EAAKvX,MAAM0B,QAAQ8V,oBAAqB,EAAKC,cAAcZ,EAASM,GAAMtI,KACpI,yBAAKpN,UAAWC,EAAQgW,eAAgBpV,MAAOxD,GAAMgY,EAAMhY,IAAOA,EAC7DA,IAAOgY,EAAMhY,GAAO,0BAAM2C,UAAWC,EAAQiW,mBAAoB7Y,GAAc,MAEnF,EAAK8Y,iBAAiBlC,EAAKW,EAASvX,EAAIkY,EAAWlY,IACnD,EAAK+Y,iBAAiBnC,EAAKW,EAASvX,EAAIwL,EAAMxL,IAC/C,kBAACqI,EAAA,EAAD,CAAYlF,aAAW,SAASR,UAAW,EAAKzB,MAAM0B,QAAQoW,iBAAkB3V,QAAS,kBAAM,EAAK4V,YAAYjZ,EAAIuX,KAAU,kBAAC,IAAD,CAAY7M,SAAS,cAEvJ0N,KAfKrI,EAAI,EAAGA,EAAIgI,EAASM,GAAMzS,OAAQmK,IAAM,EAAxCA,OAmBd,CACH,IAAM/P,EAAK4W,EAAIC,2BAA2B7W,GACpCiB,EAAO2V,EAAIC,2BAA2B5V,MAAQjB,EAChD8Q,GAAiD,IAApCnP,KAAKmD,MAAM2E,QAAQsD,QAAQ/M,GAtgBlC,YAsgBwF,SAAzB2B,KAAKT,MAAMqX,UArgB7D,UACC,UAqgBpB5W,KAAKmD,MAAM2Q,cAAgBzV,GAtgBR,YAsgBe8Q,GArgBd,YAqgB2DA,IAC/EA,EAAsC,SAAzBnP,KAAKT,MAAMqX,UArgBR,UACC,WAsgBrB5X,EAAOuM,KAAM,yBAAK5E,IAAK,MAAQtI,EAAI2C,UAAWC,EAAQ4V,WAAYzU,MAAO,CAAC+M,eACtE,yBAAKnO,UAAWhB,KAAKT,MAAM0B,QAAQ6V,eAAiB,IAAM9W,KAAKT,MAAM0B,QAAQ8V,mBAAoB3U,MAAO,CAACY,MAAO,KAAMhD,KAAKgX,cAAc/B,IACzI,yBAAKjU,UAAWC,EAAQgW,eAAgBpV,MAAQxD,GAAM,IAAMiB,GAC3DU,KAAKmX,iBAAiBlC,EAAKW,EAASvX,EAAI4W,EAAIC,2BAA2BI,WACvEtV,KAAKoX,iBAAiBnC,EAAKW,EAASvX,EAAI4W,EAAIC,2BAA2BgB,QAGhF,OAAOlX,I,mCAGEiW,EAAKW,GAAU,IAEpB/T,EAFmB,OACnBuT,EAAeH,EAAIG,aAGnBvT,GADCoT,EAAIC,2BAA2BG,OAASJ,EAAIC,2BAA2BqC,aAChEnC,EAEC,0BAAMpU,UAAWhB,KAAKT,MAAM0B,QAAQuW,YAAa3V,MAAOpC,IAAKC,EAAE,aAAc0V,GAG1F,IAAIqC,EAAW,EACf,IAAK,IAAMC,KAAMzC,EAAIC,2BAA2BkB,SACxCnB,EAAIC,2BAA2BkB,SAASO,eAAee,KACvDD,GAAYxC,EAAIC,2BAA2BkB,SAASsB,GAAIzT,QAGhEwT,EAAWA,GAAY,EACvB,IAAM5D,GAA0D,IAA/C7T,KAAKmD,MAAM0Q,SAASzI,QAAQgK,GACvC/W,EAAK4W,EAAIC,2BAA2B7W,GAEtC8Q,EAAcyG,EAAU,EAA+B,SAAzB5V,KAAKT,MAAMqX,UAAuB,UAAY,UAAa,UACvF9O,GAA8C,IAApC9H,KAAKmD,MAAM2E,QAAQsD,QAAQ/M,GAQ3C,GAPIyJ,EACAqH,EA1iBU,YA2iBH9Q,IAAO2B,KAAKmD,MAAM2Q,cACzB3E,EAAsC,SAAzBnP,KAAKT,MAAMqX,UAziBJ,UACC,WA4iBrB3B,EAAIC,2BAA2BG,QAAUvN,GAAWzJ,IAAO2B,KAAKmD,MAAM2Q,YAAa,CACnF,IAAMsC,EAAWnB,EAAIC,2BAA2BkB,SAChD,IACIA,GAAYtP,OAAO7I,KAAKmY,GAAUtI,SAAQ,SAAA4I,GAAI,OAC1CA,GAAQN,EAASM,GAAM5I,SAAQ,SAAA5L,IACgB,IAAvC,EAAKiB,MAAM2E,QAAQsD,QAAQlJ,EAAG7D,IAC9B8Q,EAtjBN,YAujBa,EAAKhM,MAAM2Q,cAAgB5R,EAAG7D,KACrC8Q,EAAsC,SAAzB,EAAK5P,MAAMqX,UArjBpB,UACC,iBAwjBnB,MAAOvS,GACLsQ,QAAQC,IAAIvQ,IAIpB,MAAO,CACF,yBAAKsC,IAAK,OAASiP,EAAS5U,UAAWhB,KAAKT,MAAM0B,QAAQ0W,QAASvV,MAAO,CAAC+M,eACxE,yBAAKnO,UAAWhB,KAAKT,MAAM0B,QAAQ2W,eAAgBhC,EAAU,EAA7D,KACA,kBAAClP,EAAA,EAAD,CAAY1F,UAAWhB,KAAKT,MAAM0B,QAAQ4W,cAAenW,QAAS,kBAAM,EAAKoW,SAASlC,KACjF6B,EAAW,EACP,kBAACM,GAAA,EAAD,CAAOC,aAAcP,EAAUlW,MAAM,WACjCsS,EAAY,kBAAC,IAAD,MAAoB,kBAAC,IAAD,OAEpCA,EAAY,kBAAC,IAAD,MAAoB,kBAAC,IAAD,OAEzC,yBAAK7S,UAAWhB,KAAKT,MAAM0B,QAAQgX,iBAAkB7V,MAAO,CAACC,QAAS,eAAgB6O,SAAU,aAC5F,0BAAMlQ,UAAWhB,KAAKT,MAAM0B,QAAQiX,aAAcrW,GAClD,0BAAMb,UAAWhB,KAAKT,MAAM0B,QAAQkX,oBAAqBlD,EAAImD,qBAC5DtQ,EAAW,kBAAC6I,GAAA,EAAD,CAAkB3P,UAAWhB,KAAKT,MAAM0B,QAAQoX,gBAAiB/W,KAAM,KAAS,MAEhG,0BAAMN,UAAWhB,KAAKT,MAAM0B,QAAQ6V,gBAAiB9W,KAAKgX,cAAc/B,IACtEA,EAAIC,2BAA2BG,MAC4H,KAAxJ,kBAAC3O,EAAA,EAAD,CAAYlF,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQqX,YAAa5W,QAAS,kBAAM,EAAKkO,OAAOvR,KAAK,kBAAC,IAAD,CAAU0K,SAAS,YAC/HkM,EAAIC,2BAA2BG,MACuI,KAAnK,kBAAC3O,EAAA,EAAD,CAAYlF,aAAW,SAASR,UAAWhB,KAAKT,MAAM0B,QAAQsX,cAAe7W,QAAS,kBAAM,EAAK4V,YAAYjZ,KAAK,kBAAC,IAAD,CAAY0K,SAAS,aAEhJ8K,EAAW7T,KAAKwY,eAAevD,EAAKW,GAAW,Q,sCAItC,IAAD,OACZ,OAAI5V,KAAKmD,MAAMqD,QACH,kBAAC,KAAD,CAAec,KAAMtH,KAAKmD,MAAMqD,QAASF,QAAS,kBAAM,EAAKjD,SAAS,CAACmD,QAAS,QAEjF,O,sCAIC1I,GAAI,IAAD,OACfA,GAAKA,EAAE2a,iBAEPzY,KAAK2O,WAAW3O,KAAKmD,MAAMkK,QAAQ,WAC/B,IAAMhP,EAAK,EAAK8E,MAAMkK,OAChBiG,EAAkB,EAAKnQ,MAAMmQ,gBAEnC,EAAKjQ,SAAS,CAACgK,OAAQ,GAAIkG,eAAgB,GAAIO,YAAazV,EAAIiV,gBAAiB,OAEjF,EAAKS,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKxU,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAGF,OAFAmD,IAAM4K,gBAAgB/N,EAAK,EAAKqL,qBAAiB2C,EAA+B,OAApBqD,OAA2BrD,EAAYqD,EAAiB,EAAK/T,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAEnL,EAAKlP,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WAEF,EAAK+K,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,yCAIzB,IAAD,OACf,OAAIhG,KAAKmD,MAAMkK,OACH,kBAAC6C,EAAA,EAAD,CACJvO,MAAM,EACNgH,SAAS,KACTwH,WAAW,EACX7J,QAAS,WACL,EAAKgH,gBAAkB,KACvB,EAAKjK,SAAS,CAACgK,OAAQ,GAAIC,gBAAiB,MAEhD8C,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,wBAAwB2B,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqBM,KAAKmD,MAAMoQ,iBACnG,kBAAChD,EAAA,EAAD,KACI,2BAAG,qCAAH,IAAoB,0BAAMvP,UAAWhB,KAAKT,MAAM0B,QAAQyX,UAAW1Y,KAAKmD,MAAMkK,SAC9E,kBAAC9I,EAAA,EAAD,CACInC,MAAO,CAACY,MAAO,QACfwB,MAAO/E,IAAKC,EAAE,cACdiZ,UAAW,SAAA7a,GAAC,OACM,KAAdA,EAAEgO,SAAkB,EAAK2E,gBAAgB3S,IAC7C6G,SAAU,SAAA7G,GAAC,OAAI,EAAKwP,gBAAkBxP,EAAEW,OAAOgG,OAC/CmU,aAAc5Y,KAAKmD,MAAMmK,gBACzB5I,WAAYjF,IAAKC,EAAE,gDACnBkF,OAAO,WAEqB,OAA/B5E,KAAKmD,MAAMmQ,gBAA2BtT,KAAKmW,yBAAyBnW,KAAKmD,MAAMmQ,iBAAiB,SAAA7O,GAAK,OAAI,EAAKpB,SAAS,CAACiQ,gBAAiB7O,OAAW,MAEzJ,kBAAC+L,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK+O,mBAAmBlP,MAAM,UAAUmP,WAAS,GAAEjR,IAAKC,EAAE,OACjF,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,WACb,EAAK4L,gBAAkB,KACvB,EAAKjK,SAAS,CAACgK,OAAQ,GAAIC,gBAAiB,OAC5C7N,IAAKC,EAAE,aAIZ,O,4CAIQ,IAAD,OAClB,OAAIM,KAAKmD,MAAMuQ,iBACH,kBAACxD,EAAA,EAAD,CACJvO,MAAM,EACNgH,SAAS,KACTwH,WAAW,EACX7J,QAAS,kBAAM,EAAKjD,SAAS,CAACqQ,iBAAkB,MAChDtD,kBAAgB,4BAChBC,mBAAiB,mCAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,6BAA6B2B,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,8BAA+BM,KAAKmD,MAAMqQ,WAClH,kBAACjD,EAAA,EAAD,KACI,2BAAI9Q,IAAKC,EAAE,mBAEf,kBAAC8Q,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAKyK,YAAY5K,MAAM,UAAUmP,WAAS,GAAEjR,IAAKC,EAAE,OAC1E,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK2B,SAAS,CAACqQ,iBAAkB,OAAOjU,IAAKC,EAAE,aAIvE,O,0CAIM,IAAD,OAChB,OAAIM,KAAKmD,MAAM+F,aACH,kBAAC,KAAD,CACJvC,IAAI,kBACJgD,OAAQ,QACRhG,OAAQ3D,KAAKT,MAAMoE,OACnBiG,SAAU,GACVC,MAAO,CAAC,SACRvD,QAAS,kBAAM,EAAKjD,SAAS,CAAC6F,cAAc,KAC5CY,KAAM,SAACF,EAAUtK,GACb,EAAK+D,SAAS,CAAC6F,cAAc,IAE7B,EAAK3J,MAAMoE,OAAOiC,UAAUgE,GACvB/F,MAAK,SAAA5B,GACF,GAAIA,EAAK,CACL,IAAM3C,EAAO8F,IAAM4J,qBAAqB/M,EAAK,KAAM,CAACgN,SAAUxP,IAAKqP,gBACnE1J,IAAM4K,gBAAgB/N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgBmL,QAAQ,UAAW,UAAMoF,OAAWA,EAAW,EAAK1Q,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAChL,EAAKE,WAAW1M,EAAIlC,KACpB,EAAKmU,gBAAkBjS,EAAIlC,IAEvB,EAAKoD,MAAM2Q,cAAgB7R,EAAIlC,MAC/B,EAAKsD,SAAS,CAACyQ,YAAa7R,EAAIlC,MAChC,EAAKgU,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGP,EAAKxU,MAAMoE,OAAOmC,UAAU7D,EAAIlC,IAAKkC,GAChC4B,MAAK,kBAAM,EAAK+K,eAAe3M,EAAIlC,QACnCgG,OAAM,SAAAC,GAAG,OAAI,EAAK3C,SAAS,CAACmD,QAASR,YAE1C,EAAK3C,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,sBAM5C,O,sCAOX,IAFA,IAAMuL,EAASjL,KAAKmD,MAAM8H,OAAO4N,cAC3B7Z,EAAS,GACNoP,EAAI,EAAGA,EAAIpO,KAAKmD,MAAMwQ,QAAQ1P,OAAQmK,IACvCpO,KAAKmD,MAAM8H,SAAgF,IAAtEjL,KAAKmD,MAAMwQ,QAAQvF,GAAGgH,aAAayD,cAAczN,QAAQH,IAClFjM,EAAOuM,KAAKvL,KAAK8Y,aAAa9Y,KAAKmD,MAAMwQ,QAAQvF,GAAIA,IAEzD,OAAQ,yBAAKzH,IAAI,cAAc3F,UAAWhB,KAAKT,MAAM0B,QAAQ4P,WAAY7R,K,4CAGtD,IAAD,OAClB,IAAKgB,KAAKmD,MAAMsQ,kBACZ,OAAO,KAEX,IAAMxS,EAAUjB,KAAKT,MAAM0B,QAE3B,OAAO,kBAACiP,EAAA,EAAD,CACHvO,MAAM,EACNgH,SAAS,KACTwH,WAAS,EACT7J,QAAS,kBAAM,EAAKjD,SAAS,CAACoQ,mBAAmB,KACjDrD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,sBAAsBoB,IAAKC,EAAE,gFAA7C,IAA8H,0BAAMqZ,KAAK,MAAMvX,aAAW,SAA5B,iBAC9H,kBAAC+O,EAAA,EAAD,KACI,yBAAKvP,UAAYC,EAAQ+X,WACrB,yBAAKhY,UAAYC,EAAQgY,YAAexZ,IAAKC,EAAE,UAEnD,yBAAKsB,UAAYhB,KAAKT,MAAM0B,QAAQiY,UAC9BlZ,KAAKmD,MAAMwQ,QAAQpK,KAAI,SAACC,EAAM4E,GAAP,OAAa,yBAAKzH,IAAKyH,GAC5C,yBAAKpN,UAAYC,EAAQkY,WAAc3P,EAAK4L,oBAKxD,kBAAC5E,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQ9D,QAAS,WACb,EAAK2B,SAAS,CAACoQ,mBAAmB,IAClC,IAAM2F,EAAQ,EAAKjW,MAAMwQ,QAAQpK,KAAI,SAAAC,GAAI,OAAIA,EAAK4L,gBAClDiE,KAAKD,EAAM9N,KAAK,QACjB/J,MAAM,WAAW9B,IAAKC,EAAE,sBAC3B,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK2B,SAAS,CAACoQ,mBAAmB,KAAS/C,WAAS,GAAEjR,IAAKC,EAAE,c,+BAKtF,IAAD,OACL,OAAIM,KAAKmD,MAAMsK,QACH,kBAACkD,GAAA,EAAD,CAAmBhK,IAAI,kBAI/B,0BAAMA,IAAI,QAAQ3F,UAAWhB,KAAKT,MAAM0B,QAAQoG,KAC5C,kBAAChG,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OAAQvG,QAAS,kBAAM,EAAK2B,SAAS,CAAC6F,cAAc,MAAQ,kBAAC,IAAD,OAC/I,kBAAC7H,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OAC/EvG,QAAS,kBAAM,EAAKkS,QAAO,IAAO1L,SAAUlI,KAAKmD,MAAMyQ,QAAS5T,KAAKmD,MAAMyQ,OAAU,kBAACjD,GAAA,EAAD,CAAkBrP,KAAM,KAAW,kBAAC,IAAD,OAC9H,kBAACD,EAAA,EAAD,CAAKe,MAAO,CAAC4H,WAAY,QACpBnI,MAAOpC,IAAKC,EAAE,kCACd4B,KAAK,QAAQE,aAAW,kBAAkBR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OACxEvG,QAAS,kBAAM,EAAK2B,SAAS,CAACoQ,mBAAmB,KAAQvL,SAAUlI,KAAKmD,MAAMyQ,QAAQ,kBAAC,IAAD,OAC3F,kBAACrP,EAAA,EAAD,CACI+U,YAAa7Z,IAAKC,EAAE,UACpBsB,UAAWhB,KAAKmD,MAAM8H,OACtBxG,MAAOzE,KAAKmD,MAAM8H,OAClBtG,SAAU,SAAA7G,GAAC,OAAI,EAAKuF,SAAS,CAAC4H,OAAQnN,EAAEW,OAAOgG,SAC/C8U,WAAY,CACRC,aAAcxZ,KAAKmD,MAAM8H,OACrB,kBAACvE,EAAA,EAAD,CAAYhF,QAAS,kBAAM,EAAK2B,SAAS,CAAE4H,OAAQ,OAC/C,kBAAC,IAAD,YAEJgF,KAGXjQ,KAAKyZ,gBACLzZ,KAAK+Q,gBACL/Q,KAAKgR,mBACLhR,KAAKiK,oBACLjK,KAAK0Z,sBACL1Z,KAAK2Z,2B,GAzoBQlX,aA2pBfC,gBA5yBA,SAAAC,GAAK,MAAK,CACrB0E,IAAK,CACDrE,MAAO,OACP4F,OAAQ,QAEZpB,OAAQ,CACJnF,QAAS,eACTwG,cAAe,MACfjG,YAAa,GACbgG,OAAQ,OACRqI,SAAU,UAEdJ,UAAW,CACPjI,OAAQ,oBACRqI,SAAU,OACVxI,SAAU,KAEdwC,OAAQ,CACJrG,OAAQ,GAEZqD,OAAQ,CACJrF,YAAa,IAEjBiV,cAAe,CACXjV,YAAa,IAEjBgX,eAAgB,CACZ1I,SAAU,WACVC,MAAO,EACPC,IAAK,GAETkH,YAAa,CACTpH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXoH,cAAe,CACXrH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEX+G,YAAa,GAGbN,cAAc,CACVvV,QAAS,eACTwG,cAAe,SACf7F,MAAO,IAEX0V,SAAU,CACN1P,UAAW,UAEfsG,gBAAgB,CACZtG,UAAW,UAEf2O,QAAS,CACL/O,OAAQ,GACR5F,MAAO,OACPkO,SAAU,YAEdiH,mBAAoB,CAChB9V,QAAS,QACT2G,UAAW,SACXD,SAAU,IAEd+N,eAAgB,CACZ9N,UAAW,SACXD,SAAU,GACViE,YAAa,GACb3K,QAAS,gBAEbgW,gBAAiB,CACbnH,SAAU,WACVE,IAAK,EACLyI,KAAM,GAEV9C,mBAAoB,CAChB/T,MAAO,IAEXiV,iBAAkB,CACd5V,QAAS,eACTW,MAAO,sBAEX4N,aAAc,CACVzB,WAAYxM,EAAM0O,QAAQC,QAAQC,MAClCxO,QAAS,GACTxB,MAAOoB,EAAM0O,QAAQC,QAAQE,cAEjCgG,YAAa,CACTxO,UAAW,UAEf2M,WAAY,CACR3S,MAAO,IAGX6T,WAAY,CACR3F,SAAU,WACVtI,OAAQ,IAEZqO,eAAgB,CACZjN,WAAY,EACZnH,UAAW,GACXR,QAAS,eACT0G,SAAU,GACV/F,MAAO,sBAEXkU,kBAAoB,CAChBnO,SAAU,EACVC,UAAW,SACX3G,QAAS,SAEbyT,eAAgB,CACZ9L,WAAY,GAEhBqN,iBAAkB,CACdnG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPpO,QAAS,GAEb+W,eAAgB,CACZ5I,SAAU,WACVE,IAAK,GACLD,MAAO,GACPpO,QAAS,GAEbkT,oBAAqB,CACjBpT,UAAW,GAEfmW,UAAW,CACPhM,YAAarK,EAAMoX,QAAQ,GAC3B5K,WAAYxM,EAAM0O,QAAQC,QAAQ0I,MAEtCf,WAAY,CACR5W,QAAS,eACTwG,cAAe,MACf7F,MAAO,QAEXmW,UAAW,CACP9W,QAAS,eACTwG,cAAe,MACf7F,MAAO,WA+pBAN,CAAmB0Q,ICr0B5B3B,GAAiB,CACnBwI,MAAO,CAAC1Y,MAbI,UAaYT,KAAM6Q,IAAQtR,KAAM,UAC5C6Z,WAAY,CAAC3Y,MAZA,UAYiBT,KAAM4R,IAAUrS,KAAM,UACpD8Z,IAAK,CAAC5Y,MAZO,UAYUT,KAAM4R,IAAUrS,KAAM,aAE7CwR,qBAAsB,CAACtQ,MAfV,UAe2BT,KAAMgR,IAAiBzR,KAAM,0BACrE0R,2BAA4B,CAACxQ,MAlBjB,UAkBiCT,KAAMkR,IAAQ3R,KAAM,gCACjE4R,2BAA4B,CAAC1Q,MAlBhB,OAkBiCT,KAAMoR,IAAU7R,KAAM,gCAEpEgS,oBAAqB,CAAC9Q,MArBV,UAqB0BT,KAAMkR,IAAQ3R,KAAM,wBAC1DiS,oBAAqB,CAAC/Q,MArBT,OAqB0BT,KAAMoR,IAAU7R,KAAM,wBAE7DkS,SAAU,CAAChR,MAtBE,UAsBeT,KAAM0R,IAAWnS,KAAM,aAEnDsS,0BAA2B,CAACpR,MA1BhB,UA0BgCT,KAAMkR,IAAQ3R,KAAM,+BAChEuS,0BAA2B,CAACrR,MA1Bf,OA0BgCT,KAAMoR,IAAU7R,KAAM,+BAEnEwS,qBAAsB,CAACtR,MAzBT,UAyB2BT,KAAMgS,IAAiBzS,KAAM,0BACtE0S,sBAAuB,CAACxR,MA1BV,UA0B4BT,KAAMgS,IAAiBzS,KAAM,0BAEvE2S,aAAc,CAACzR,MA9BF,UA8BmBT,KAAMmS,IAAU5S,KAAM,kBACtD6S,aAAc,CAAC3R,MA7BD,UA6BmBT,KAAMmS,IAAU5S,KAAM,oBAGrD8S,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,SAAU,gBAAiB,kBA2JzIiH,G,kDACF,WAAY7a,GAAQ,IAAD,6BACf,cAAMA,GAEDkS,GAAe4B,aAChBvM,OAAO7I,KAAKwT,IAAgB3D,SAAQ,SAAA5C,GAAC,OAAIuG,GAAevG,GAAG7K,KAAOZ,IAAKC,EAAE+R,GAAevG,GAAG7K,SAC3FoR,GAAe4B,YAAa,GAGhC,EAAKlQ,MAAQ,CACTmK,gBAAiB,GACjBD,OAAQ,GACRkG,eAAgB,GAChBC,SAAU,GAEVtK,cAAc,EACdwK,iBAAkB,GAClB5L,QAAS,GACT6L,QAAS,GACTnN,QAAS,GACTyE,OAAQ,GACRwC,SAAS,EACTmG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjB,EAAKC,aAAe,KACpB,EAAKC,YAAc,KACnB,EAAKC,iBAAmB,EACxB,EAAK3G,gBAAkB,GAEvB,EAAK4G,gBAAkB,KACvB,EAAKC,mBAAqB,EAAKC,cAAc3J,KAAnB,iBAC1B,EAAK4J,oBAAsB,EAAKC,eAAe7J,KAApB,iBAE3B,EAAKlL,MAAMoE,OAAOiC,UAAlB,yBAA8C,EAAKrG,MAAM6D,YAAzD,YAAwE,EAAK7D,MAAMU,WAAY4D,MAAK,SAAA5B,GAChG,EAAK1C,MAAMoE,OAAOC,SAAlB,yBAA6C,EAAKrE,MAAM6D,YAAxD,YAAuE,EAAK7D,MAAMU,SAAlF,WAAoG4D,MAAK,SAAAV,GAChGlB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOwG,SAAa1C,GAAUA,EAAMI,KAGjE,EAAKqQ,SAFL,EAAKvQ,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,4BAA6B+N,SAAS,EAAOkG,QAAS,WAtClF,E,mDA8CZY,GAAa,IAAD,OACXC,KAAKC,MAAQzU,KAAK0U,WAAa,MAInC1U,KAAK0U,WAAaF,KAAKC,MAEnBF,EACAvU,KAAKqD,SAAS,CAACoK,SAAS,EAAMmG,QAAQ,IAEtC5T,KAAKqD,SAAS,CAACuQ,QAAQ,IAG3B5T,KAAKgU,YAAcnF,YAAW,WAC1B,EAAKmF,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKlR,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMoE,OAAOwK,OAAOnO,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAU,cAAe,MACvF4D,MAAK,SAAA8G,GACF,EAAKqJ,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KAEfrJ,GAAQA,EAAKtG,MACb,EAAKhB,SAAS,CAACmD,QAAS/G,IAAKC,EAAEiL,EAAKtG,UAEhC,EAAK6P,kBACA,EAAKtE,OAAO,EAAKsE,gBAAiBvJ,IACnC,EAAKtH,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,0BAA2B,EAAKwU,mBAEnE,EAAKA,gBAAkB,MAG3B,EAAK7Q,SAAS,CAACsQ,QAAShJ,EAAM8C,SAAS,EAAO3F,QAAS,GAAI8L,QAAQ,W,oCAKrEvV,EAAI8E,GAAQ,IAAD,OACjBA,IAAuB,IAAdA,EAAMuC,MAA8B,IAAdvC,EAAMI,MACjCvD,KAAK8U,UAAUD,aAAa7U,KAAK8U,UACrC9U,KAAK8U,SAAWjG,YAAW,WACvB,EAAKiG,SAAW,KAChB,EAAKlB,WACN,Q,qCAIIvV,EAAI8E,GACfA,IAAuB,IAAdA,EAAMuC,KAAgBvC,EAAMI,KAAOvD,KAAKqD,SAAS,CAACmD,QAASrD,EAAMI,Q,0CAI1EvD,KAAKT,MAAMoE,OAAOG,eAAlB,UAAoC9D,KAAKT,MAAM6D,YAA/C,YAA8DpD,KAAKT,MAAMU,SAAzE,kBAAmGD,KAAKmU,oBACxGnU,KAAKT,MAAMoE,OAAOG,eAAlB,UAAoC9D,KAAKT,MAAM6D,YAA/C,YAA8DpD,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKqU,uB,6CAI9GrU,KAAKT,MAAMoE,OAAOI,iBAAlB,UAAsC/D,KAAKT,MAAM6D,YAAjD,YAAgEpD,KAAKT,MAAMU,SAA3E,kBAAqGD,KAAKmU,oBAC1GnU,KAAKT,MAAMoE,OAAOI,iBAAlB,UAAsC/D,KAAKT,MAAM6D,YAAjD,YAAgEpD,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKqU,qBAC5GrU,KAAK+T,eACLc,aAAa7U,KAAK+T,cAClB/T,KAAK+T,aAAe,Q,qCAIb1V,GACX2B,KAAKT,MAAMoE,OAAOwK,OAAOnO,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAU,SAAU5B,K,iCAGhFA,EAAI0W,GACX,IAAMjN,EAAU5I,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM2E,WACxB,IAAzBA,EAAQsD,QAAQ/M,IAChByJ,EAAQyD,KAAKlN,GACb2B,KAAKqD,SAAS,CAACyE,YAAU,kBAAMiN,GAAMA,QAErCA,GAAMA,M,oCAIA1W,GACV,IAAMyJ,EAAU5I,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM2E,UAC/CqD,EAAMrD,EAAQsD,QAAQ/M,IAEf,IAAT8M,IACArD,EAAQuD,OAAOF,EAAK,GACpBnL,KAAKqD,SAAS,CAACyE,e,6BAIhBzJ,EAAIsV,GAAU,IAAD,OAEVqB,GADNrB,EAAUA,GAAW3T,KAAKmD,MAAMwQ,SACTtF,MAAK,SAAA4G,GAAG,OAAIA,EAAIoF,QAAUhc,KACjD,QAAI2W,IACAhV,KAAKT,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GACF,IAAIqM,EAAY0G,EAAO1V,KACE,kBAAdgP,GAA0BA,IACjCA,EAAYA,EAAU7O,IAAKqP,gBAAkBR,EAAUS,IAE3D,EAAKzB,gBAAkBgB,EACvB,EAAKjL,SAAS,CAACgK,OAAQhP,EAAIiP,gBAAiBgB,EAAWiF,eAAgBjF,QAExE,K,kCAMHkF,GACRxT,KAAKqD,SAAS,CAACmQ,WAAUE,kBAAkB,M,iCAGnC,IAAD,OACHrV,EAAK2B,KAAKmD,MAAMqQ,SAEpBxT,KAAK2O,WAAWtQ,GAAI,WAChB,EAAKkB,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAEF,OADAmD,IAAMoJ,iBAAiBvM,EAAK,EAAK1C,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAC3F,EAAKlP,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WACF,EAAKR,SAAS,CAACmQ,SAAU,GAAIE,kBAAkB,EAAOI,YAAazV,IAEnE,EAAK0V,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKnF,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,oCAI/BiP,GAAM,IAAD,OAETM,EAAU,GAChB,IAAKN,EAAIM,QAEL,OADAZ,QAAQC,IAAI,wBACL,KAGXK,EAAIM,QAAQC,MAAK,SAACtK,EAAGuK,GACjB,OAAIvK,IAAMuK,EACC,EAED,UAANvK,GACQ,EAEF,UAANuK,EACO,EAEJ,KAGX3O,OAAO7I,KAAKwT,IAAgB3D,SAAQ,SAAArH,GAChC,GAAIwO,EAAIM,QAAQ+E,SAAS7T,GAAS,CAC9B,IAAMiP,EAAOjE,GAAehL,GAAQ3F,KACpCyU,EAAQhK,KAAK,0BAAM5E,IAAKF,EAAQ5E,MAAO4P,GAAehL,GAAQpG,MAC1D,kBAACqV,EAAD,CAAM1U,UAAW,EAAKzB,MAAM0B,QAAQ0U,WAAYvT,MAAO,CAACb,MAAOkQ,GAAehL,GAAQlF,eAKlG,IAAK,IAAI2J,EAAI,EAAGA,EAAI+J,EAAIM,QAAQtR,OAAQiH,IAC/BuG,GAAewD,EAAIM,QAAQrK,KAC5BqK,EAAQhK,KAAK,0BAAM5E,IAAKsO,EAAIM,QAAQrK,IAAK+J,EAAIM,QAAQrK,KAG7D,OAAOqK,I,+BAGFK,GACL,IAAM/B,EAAW3U,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM0Q,WAChD1I,EAAM0I,EAASzI,QAAQpL,KAAKmD,MAAMwQ,QAAQiC,GAAStW,OAC5C,IAAT6L,EACA0I,EAAStI,KAAKvL,KAAKmD,MAAMwQ,QAAQiC,GAAStW,MAE1CuU,EAASxI,OAAOF,EAAK,GAEzBnL,KAAKqD,SAAS,CAACwQ,e,qCAGJxV,EAAI6X,EAAM9R,GAAO,IAAD,OAC3BpE,KAAK2O,WAAWtQ,GAAI,WAChB,EAAKkB,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAYF,OAXAmD,IAAM4K,gBAAgB/N,OAAKgO,EAAWiG,EAAM9R,EAAM,EAAK7E,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAEpH,EAAKtL,MAAM2Q,cAAgBzV,IAC3B,EAAKgF,SAAS,CAACyQ,YAAazV,IAC5B,EAAK0V,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKxU,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WAEF,EAAK+K,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,uCAI5BiP,EAAKW,EAASvX,EAAI+F,GAAO,IAAD,OACrC,IAAa,IAATA,EAAgB,CAIhB,IAHA,IAAMyR,EAAQ,CACT,kBAACpM,GAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,KAAI,4BAAKhF,IAAKC,EAAE,cAEpC0O,EAAI,EAAGA,EAAI+E,GAAWlP,OAAQmK,IACnCyH,EAAMtK,KAAM,kBAAC9B,GAAA,EAAD,CAAW9C,IAAKwM,GAAW/E,GAAI3J,MAAO0O,GAAW/E,IAAI,4BAAK3O,IAAKC,EAAEyT,GAAW/E,OAE5F,OACI,kBAAChF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ5E,MAAOL,GAAQ,IAAKO,SAAU,SAAA7G,GAAC,OAAI,EAAKkY,eAAe3X,OAAI4R,EAAWnS,EAAEW,OAAOgG,SAASoR,GAChG,kBAACnM,EAAA,EAAD,CAAgB1I,UAAWhB,KAAKT,MAAM0B,QAAQgV,qBAAsBxW,IAAKC,EAAE,WAGnF,MAAO,K,qCAIAuV,EAAKW,GAChB,IAAM5W,EAAS,GACTiC,EAAUjB,KAAKT,MAAM0B,QAErB5C,EAAK4W,EAAI+E,KAAKO,MACdjb,EAAO2V,EAAIuF,KACbrL,EAAsC,SAAzBnP,KAAKT,MAAMqX,UAzdD,UACC,UA6gB5B,OAjDA5X,EAAOuM,KAAM,yBAAK5E,IAAK,MAAQtI,EAAI2C,UAAWC,EAAQ4V,WAAYzU,MAAO,CAAC+M,eACtE,yBAAKnO,UAAWC,EAAQgW,gBAAiB3X,EAAKmb,eAC9C,yBAAKzZ,UAAWC,EAAQyZ,eACpB,6BAAMzF,EAAI+E,KAAKO,OACdtF,EAAI+E,KAAKW,OAAS1F,EAAI+E,KAAKW,QAAU1F,EAAI+E,KAAKO,MAAS,yBAAKvZ,UAAWC,EAAQ2Z,iBAAkB3F,EAAI+E,KAAKW,OAAgB,QAKnI1F,EAAI4F,WAAW/M,SAAQ,SAAA3J,GACnBnF,EAAOuM,KAAM,yBAAK5E,IAAK,MAAQxC,EAAKoW,MAAOvZ,UAAWC,EAAQ4V,WAAYzU,MAAO,CAAC+M,eAC9E,yBAAKnO,UAAWC,EAAQgW,gBAAiB9S,EAAK7E,KAAKmb,eACnD,yBAAKzZ,UAAWC,EAAQyZ,eACpB,6BAAMvW,EAAKoW,OACVpW,EAAKwW,OAASxW,EAAKwW,QAAUxW,EAAKoW,MAAS,yBAAKvZ,UAAWC,EAAQ2Z,iBAAkBzW,EAAKwW,OAAgB,WAmChH3b,I,mCAGEiW,EAAKW,GAAU,IAAD,OAEjB/B,GAAsD,IAA3C7T,KAAKmD,MAAM0Q,SAASzI,QAAQ6J,EAAI3V,MAC7C6P,EAAcyG,EAAU,EAA+B,SAAzB5V,KAAKT,MAAMqX,UAAuB,UAAY,UAAa,UACvF9O,GAAqD,IAA3C9H,KAAKmD,MAAM2E,QAAQsD,QAAQ6J,EAAIoF,OAS/C,OARIvS,EACAqH,EAxhBU,YAyhBH8F,EAAIoF,QAAUra,KAAKmD,MAAM2Q,cAChC3E,EAAsC,SAAzBnP,KAAKT,MAAMqX,UAvhBJ,UACC,WA2hBlB,CACF,yBAAKjQ,IAAK,OAASiP,EAAS5U,UAAWhB,KAAKT,MAAM0B,QAAQ0W,QAASvV,MAAO,CAAC+M,eACxE,yBAAKnO,UAAWhB,KAAKT,MAAM0B,QAAQ2W,eAAgBhC,EAAU,EAA7D,KACA,kBAAClP,EAAA,EAAD,CAAY1F,UAAWhB,KAAKT,MAAM0B,QAAQ4W,cAAenW,QAAS,kBAAM,EAAKoW,SAASlC,KACjFX,EAAI4F,WAAW5W,OACX,kBAAC8T,GAAA,EAAD,CAAOC,aAAc/C,EAAI4F,WAAW5W,OAAQ1C,MAAM,WAAWsS,EAAY,kBAAC,IAAD,MAAoB,kBAAC,IAAD,OAC7FA,EAAY,kBAAC,IAAD,MAAoB,kBAAC,IAAD,OAEzC,yBAAK7S,UAAWhB,KAAKT,MAAM0B,QAAQgX,iBAAkB7V,MAAO,CAACC,QAAS,eAAgB6O,SAAU,aAC5F,0BAAMlQ,UAAWhB,KAAKT,MAAM0B,QAAQiX,aAAcjD,EAAI3V,MACtD,0BAAM0B,UAAWhB,KAAKT,MAAM0B,QAAQkX,oBAAqBlD,EAAI6F,aAC5DhT,EAAW,kBAAC6I,GAAA,EAAD,CAAkB3P,UAAWhB,KAAKT,MAAM0B,QAAQoX,gBAAiB/W,KAAM,KAAS,MAEhG,0BAAMN,UAAWhB,KAAKT,MAAM0B,QAAQ6V,gBAAiB9W,KAAKgX,cAAc/B,IACxE,kBAACvO,EAAA,EAAD,CAAYlF,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQqX,YAAa5W,QAAS,kBAAM,EAAKkO,OAAOqF,EAAIoF,SAAQ,kBAAC,IAAD,CAAUtR,SAAS,YACnI,kBAACrC,EAAA,EAAD,CAAYlF,aAAW,SAASR,UAAWhB,KAAKT,MAAM0B,QAAQsX,cAAe7W,QAAS,kBAAM,EAAK4V,YAAYrC,EAAIoF,SAAQ,kBAAC,IAAD,CAAYtR,SAAS,aAGlJ8K,EAAW7T,KAAKwY,eAAevD,EAAKW,GAAW,Q,sCAItC,IAAD,OACZ,OAAI5V,KAAKmD,MAAMqD,QACJ,kBAAC,KAAD,CAAec,KAAMtH,KAAKmD,MAAMqD,QAASF,QAAS,kBAAM,EAAKjD,SAAS,CAACmD,QAAS,QAEhF,O,sCAIC1I,GAAI,IAAD,OACfA,GAAKA,EAAE2a,iBAEPzY,KAAK2O,WAAW3O,KAAKmD,MAAMkK,QAAQ,WAC/B,IAAMhP,EAAK,EAAK8E,MAAMkK,OACtB,EAAKhK,SAAS,CAACgK,OAAQ,GAAIkG,eAAgB,GAAIO,YAAazV,IAE5D,EAAK0V,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKxU,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAEF,OADAmD,IAAM4K,gBAAgB/N,EAAK,EAAKqL,qBAAiB2C,OAAWA,EAAW,EAAK1Q,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UACtI,EAAKlP,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WAEF,EAAK+K,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,yCAIzB,IAAD,OACf,OAAIhG,KAAKmD,MAAMkK,OACH,kBAAC6C,EAAA,EAAD,CACJvO,MAAM,EACNgH,SAAS,KACTwH,WAAW,EACX7J,QAAS,WACL,EAAKgH,gBAAkB,KACvB,EAAKjK,SAAS,CAACgK,OAAQ,GAAIC,gBAAiB,MAEhD8C,kBAAgB,uBAChBC,mBAAiB,8BAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,wBAAwB2B,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,oBAAqBM,KAAKmD,MAAMoQ,iBACnG,kBAAChD,EAAA,EAAD,KACI,2BAAG,qCAAH,IAAoB,0BAAMvP,UAAWhB,KAAKT,MAAM0B,QAAQyX,UAAW1Y,KAAKmD,MAAMkK,SAC9E,kBAAC9I,EAAA,EAAD,CACInC,MAAO,CAACY,MAAO,QACfwB,MAAO/E,IAAKC,EAAE,cACdiZ,UAAW,SAAA7a,GAAC,OACM,KAAdA,EAAEgO,SAAkB,EAAK2E,gBAAgB3S,IAC7C6G,SAAU,SAAA7G,GAAC,OAAI,EAAKwP,gBAAkBxP,EAAEW,OAAOgG,OAC/CmU,aAAc5Y,KAAKmD,MAAMmK,gBACzB5I,WAAYjF,IAAKC,EAAE,gDACnBkF,OAAO,YAGf,kBAAC4L,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK+O,mBAAmBlP,MAAM,UAAUmP,WAAS,GAAEjR,IAAKC,EAAE,OACjF,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,WACb,EAAK4L,gBAAkB,KACvB,EAAKjK,SAAS,CAACgK,OAAQ,GAAIC,gBAAiB,OAC5C7N,IAAKC,EAAE,aAIZ,O,4CAIQ,IAAD,OAClB,OAAIM,KAAKmD,MAAMuQ,iBACH,kBAACxD,EAAA,EAAD,CACJvO,MAAM,EACNgH,SAAS,KACTwH,WAAW,EACX7J,QAAS,kBAAM,EAAKjD,SAAS,CAACqQ,iBAAkB,MAChDtD,kBAAgB,4BAChBC,mBAAiB,mCAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,6BAA6B2B,KAAKT,MAAMsC,OAASpC,IAAKC,EAAE,8BAA+BM,KAAKmD,MAAMqQ,WAClH,kBAACjD,EAAA,EAAD,KACI,2BAAI9Q,IAAKC,EAAE,mBAEf,kBAAC8Q,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAKyK,YAAY5K,MAAM,UAAUmP,WAAS,GAAEjR,IAAKC,EAAE,OAC1E,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK2B,SAAS,CAACqQ,iBAAkB,OAAOjU,IAAKC,EAAE,aAIvE,O,0CAIM,IAAD,OAChB,OAAIM,KAAKmD,MAAM+F,aACH,kBAAC,KAAD,CACJvC,IAAI,oBACJgD,OAAQ,QACRhG,OAAQ3D,KAAKT,MAAMoE,OACnBiG,SAAU,GACVC,MAAO,CAAC,SACRvD,QAAS,kBAAM,EAAKjD,SAAS,CAAC6F,cAAc,KAC5CY,KAAM,SAACF,EAAUtK,GACb,EAAK+D,SAAS,CAAC6F,cAAc,IAE7B,EAAK3J,MAAMoE,OAAOiC,UAAUgE,GACvB/F,MAAK,SAAA5B,GACF,GAAIA,EAAK,CACL,IAAM3C,EAAO8F,IAAM4J,qBAAqB/M,EAAK,KAAM,CAACgN,SAAUxP,IAAKqP,gBACnE1J,IAAM4K,gBAAgB/N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgBmL,QAAQ,UAAW,UAAMoF,OAAWA,EAAW,EAAK1Q,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAChL,EAAKE,WAAW1M,EAAIlC,KACpB,EAAKmU,gBAAkBjS,EAAIlC,IAEvB,EAAKoD,MAAM2Q,cAAgB7R,EAAIlC,MAC/B,EAAKsD,SAAS,CAACyQ,YAAa7R,EAAIlC,MAChC,EAAKgU,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGP,EAAKxU,MAAMoE,OAAOmC,UAAU7D,EAAIlC,IAAKkC,GAChC4B,MAAK,kBAAM,EAAK+K,eAAe3M,EAAIlC,QACnCgG,OAAM,SAAAC,GAAG,OAAI,EAAK3C,SAAS,CAACmD,QAASR,YAE1C,EAAK3C,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,sBAM5C,O,sCAOX,IAFA,IAAMuL,EAASjL,KAAKmD,MAAM8H,OAAO4N,cAC3B7Z,EAAS,GACNoP,EAAI,EAAGA,EAAIpO,KAAKmD,MAAMwQ,QAAQ1P,OAAQmK,IACvCpO,KAAKmD,MAAM8H,SAAwE,IAA9DjL,KAAKmD,MAAMwQ,QAAQvF,GAAG9O,KAAKuZ,cAAczN,QAAQH,IAC1EjM,EAAOuM,KAAKvL,KAAK8Y,aAAa9Y,KAAKmD,MAAMwQ,QAAQvF,GAAIA,IAEzD,OAAQ,yBAAKzH,IAAI,cAAc3F,UAAWhB,KAAKT,MAAM0B,QAAQ4P,WAAY7R,K,4CAGtD,IAAD,OAClB,IAAKgB,KAAKmD,MAAMsQ,kBACZ,OAAO,KAEX,IAAMxS,EAAUjB,KAAKT,MAAM0B,QAE3B,OAAO,kBAACiP,EAAA,EAAD,CACHvO,MAAM,EACNgH,SAAS,KACTwH,WAAS,EACT7J,QAAS,kBAAM,EAAKjD,SAAS,CAACoQ,mBAAmB,KACjDrD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,sBAAsBoB,IAAKC,EAAE,gFAA7C,IAA8H,0BAAMqZ,KAAK,MAAMvX,aAAW,SAA5B,iBAC9H,kBAAC+O,EAAA,EAAD,KACI,yBAAKvP,UAAYC,EAAQ+X,WACrB,yBAAKhY,UAAYC,EAAQgY,YAAexZ,IAAKC,EAAE,UAEnD,yBAAKsB,UAAYhB,KAAKT,MAAM0B,QAAQiY,UAC9BlZ,KAAKmD,MAAMwQ,QAAQpK,KAAI,SAACC,EAAM4E,GAAP,OAAa,yBAAKzH,IAAKyH,GAC5C,yBAAKpN,UAAYC,EAAQkY,WAAc3P,EAAKlK,YAKxD,kBAACkR,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQ9D,QAAS,WACb,EAAK2B,SAAS,CAACoQ,mBAAmB,IAClC,IAAM2F,EAAQ,EAAKjW,MAAMwQ,QAAQpK,KAAI,SAAAC,GAAI,OAAIA,EAAKlK,QAClD+Z,KAAKD,EAAM9N,KAAK,QACjB/J,MAAM,WAAW9B,IAAKC,EAAE,sBAC3B,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK2B,SAAS,CAACoQ,mBAAmB,KAAS/C,WAAS,GAAEjR,IAAKC,EAAE,c,+BAKtF,IAAD,OACL,OAAIM,KAAKmD,MAAMsK,QACH,kBAACkD,GAAA,EAAD,CAAmBhK,IAAI,kBAI/B,0BAAMA,IAAI,QAAQ3F,UAAWhB,KAAKT,MAAM0B,QAAQoG,KAC5C,kBAAChG,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OAAQvG,QAAS,kBAAM,EAAK2B,SAAS,CAAC6F,cAAc,MAAQ,kBAAC,IAAD,OAC/I,kBAAC7H,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OAC/EvG,QAAS,kBAAM,EAAKkS,QAAO,IAAO1L,SAAUlI,KAAKmD,MAAMyQ,QAAS5T,KAAKmD,MAAMyQ,OAAU,kBAACjD,GAAA,EAAD,CAAkBrP,KAAM,KAAW,kBAAC,IAAD,OAC9H,kBAACD,EAAA,EAAD,CAAKe,MAAO,CAAC4H,WAAY,QACpBnI,MAAOpC,IAAKC,EAAE,kCACd4B,KAAK,QAAQE,aAAW,kBAAkBR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OACxEvG,QAAS,kBAAM,EAAK2B,SAAS,CAACoQ,mBAAmB,KAAQvL,SAAUlI,KAAKmD,MAAMyQ,QAAQ,kBAAC,IAAD,OAC3F,kBAACrP,EAAA,EAAD,CACI+U,YAAa7Z,IAAKC,EAAE,UACpBsB,UAAWhB,KAAKmD,MAAM8H,OACtBxG,MAAOzE,KAAKmD,MAAM8H,OAClBtG,SAAU,SAAA7G,GAAC,OAAI,EAAKuF,SAAS,CAAC4H,OAAQnN,EAAEW,OAAOgG,SAC/C8U,WAAY,CACRC,aAAcxZ,KAAKmD,MAAM8H,OACrB,kBAACvE,EAAA,EAAD,CAAYhF,QAAS,kBAAM,EAAK2B,SAAS,CAAE4H,OAAQ,OAC/C,kBAAC,IAAD,YAEJgF,KAGXjQ,KAAKyZ,gBACLzZ,KAAK+Q,gBACL/Q,KAAKgR,mBACLhR,KAAKiK,oBACLjK,KAAK0Z,sBACL1Z,KAAK2Z,2B,GAxlBKlX,aA0mBZC,gBAnwBA,SAAAC,GAAK,MAAK,CACrB0E,IAAK,CACDrE,MAAO,OACP4F,OAAQ,QAEZpB,OAAQ,CACJnF,QAAS,eACTwG,cAAe,MACfjG,YAAa,GACbgG,OAAQ,OACRqI,SAAU,UAEdJ,UAAW,CACPjI,OAAQ,oBACRqI,SAAU,OACVxI,SAAU,KAEdwC,OAAQ,CACJrG,OAAQ,GAEZqD,OAAQ,CACJrF,YAAa,IAEjBiV,cAAe,CACXjV,YAAa,IAEjBgX,eAAgB,CACZ1I,SAAU,WACVC,MAAO,EACPC,IAAK,GAETkH,YAAa,CACTpH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXoH,cAAe,CACXrH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEX+G,YAAa,GAGbN,cAAc,CACVvV,QAAS,eACTwG,cAAe,SACf7F,MAAO,IAEX0V,SAAU,CACN1P,UAAW,UAEfsG,gBAAgB,CACZtG,UAAW,UAEf2O,QAAS,CACL/O,OAAQ,GACR5F,MAAO,OACPkO,SAAU,YAEdiH,mBAAoB,CAChB9V,QAAS,QACT2G,UAAW,SACXD,SAAU,IAEd+N,eAAgB,CACZ9N,UAAW,SACXD,SAAU,GACViE,YAAa,GACb3K,QAAS,gBAEbgW,gBAAiB,CACbnH,SAAU,WACVE,IAAK,EACLyI,KAAM,GAEV9C,mBAAoB,CAChB/T,MAAO,IAEXiV,iBAAkB,CACd5V,QAAS,eACTW,MAAO,sBAEX4N,aAAc,CACVzB,WAAYxM,EAAM0O,QAAQC,QAAQC,MAClCxO,QAAS,GACTxB,MAAOoB,EAAM0O,QAAQC,QAAQE,cAEjCgG,YAAa,CACTxO,UAAW,UAEf2M,WAAY,CACR3S,MAAO,IAGX6T,WAAY,CACR3F,SAAU,WACVtI,OAAQ,IAEZqO,eAAgB,CACZjN,WAAY,EACZnH,UAAW,GACX4F,SAAU,IACVpG,QAAS,eACT0G,SAAU,GACViE,YAAa,IAGjB0N,cAAgB,CACZ3R,SAAU,GACVC,UAAW,SACX3G,QAAS,eACT2H,WAAY,IAEhB4Q,gBAAkB,CACd5R,UAAW,SACX3G,QAAS,QACTd,MAAO,QAEXuU,eAAgB,CACZ9L,WAAY,GAEhBqN,iBAAkB,CACdnG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPpO,QAAS,GAEb+W,eAAgB,CACZ5I,SAAU,WACVE,IAAK,GACLD,MAAO,GACPpO,QAAS,GAEbkT,oBAAqB,CACjBpT,UAAW,GAEfmW,UAAW,CACPhM,YAAarK,EAAMoX,QAAQ,GAC3B5K,WAAYxM,EAAM0O,QAAQC,QAAQ0I,MAEtCf,WAAY,CACR5W,QAAS,eACTwG,cAAe,MACf7F,MAAO,QAEXmW,UAAW,CACP9W,QAAS,eACTwG,cAAe,MACf7F,MAAO,WA8mBAN,CAAmB0X,I,yXCnyB5BW,GAAa,CACfC,IAAKC,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAY3b,EAAZ,CAAmB2b,IAAKA,QACxDC,MAAOF,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAW3b,EAAX,CAAkB2b,IAAKA,QACzDE,MAAOH,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAW3b,EAAX,CAAkB2b,IAAKA,QACzDG,OAAQJ,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAmB3b,EAAnB,CAA0B2b,IAAKA,QAClEI,YAAaL,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAkB3b,EAAlB,CAAyB2b,IAAKA,QACtEK,KAAMN,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAU3b,EAAV,CAAiB2b,IAAKA,QACvDM,OAAQP,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAa3b,EAAb,CAAoB2b,IAAKA,QAC5DO,OAAQR,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAgB3b,EAAhB,CAAuB2b,IAAKA,QAC/DQ,UAAWT,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAe3b,EAAf,CAAsB2b,IAAKA,QACjES,SAAUV,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAc3b,EAAd,CAAqB2b,IAAKA,QAC/DU,SAAUX,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAkB3b,EAAlB,CAAyB2b,IAAKA,QACnEW,aAAcZ,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAiB3b,EAAjB,CAAwB2b,IAAKA,QACtEY,YAAab,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAW3b,EAAX,CAAkB2b,IAAKA,QAC/Da,OAAQd,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAY3b,EAAZ,CAAmB2b,IAAKA,QAC3Dc,UAAWf,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAiB3b,EAAjB,CAAwB2b,IAAKA,QACnEe,gBAAiBhB,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAY3b,EAAZ,CAAmB2b,IAAKA,QACpEgB,WAAYjB,sBAAW,SAAC1b,EAAO2b,GAAR,OAAgB,kBAAC,KAAD,iBAAgB3b,EAAhB,CAAuB2b,IAAKA,SAiCjEiB,G,kDACF,WAAY5c,GAAQ,IAAD,8BACf,cAAMA,IACD6c,WAAcC,IAAMC,YACzB,EAAKnZ,MAAQ,CACTmK,gBAAiB,GACjBD,OAAQ,GACRkG,eAAgB,GAChBC,SAAU,GAEV+I,WAA8D,SAAlD3d,OAAO4d,aAAaC,QAAQ,kBACxCC,WAA8D,SAAlD9d,OAAO4d,aAAaC,QAAQ,kBACxCvT,cAAc,EACdyT,WAAY,GACZjJ,iBAAkB,GAClB5L,QAAS,GACT6L,QAAS,GACTnN,QAAS,GACTyE,OAAQ,GACRwC,SAAS,EACTmG,QAAQ,EACRC,SAAU,GACVC,YAAa,GACb8I,QAAS,CACL,CAAC/a,MAAOpC,IAAKC,EAAE,MAAOmd,MAAO,KAAMC,SAAU,QAASC,UAAW,CAC7DpU,SAAU,QACVsI,SAAU,SACV+L,UAAW,cAEf,CAACnb,MAAOpC,IAAKC,EAAE,eAAgBmd,MAAO,kBACtC,CAAChb,MAAOpC,IAAKC,EAAE,WAAYmd,MAAO,SAAUC,SAAU,QAASC,UAAW,CACtEpU,SAAU,OACVsI,SAAU,SACV+L,UAAW,cAEf,CAACnb,MAAOpC,IAAKC,EAAE,QAASmd,MAAO,OAASI,OAAQ,CAC5C,+BAAwC,wBACxC,oCAAwC,gBACxC,mCAAwC,eACxC,8BAAwC,SACxC,8BAAwC,SACxC,8BAAwC,SACxC,8BAAwC,SACxC,oCAAwC,eACxC,+BAAwC,UACxC,kCAAwC,aACxC,4BAAwC,OACxC,6BAAwC,QACxC,2BAAwC,MACxC,iCAAwC,YACxC,8BAAwC,SACxC,4BAAwC,OACxC,8BAAwC,SACxC,4BAAwC,OACxC,8BAAwC,SACxC,6BAAwC,QACxC,4BAAwC,OACxC,2BAAwC,MACxC,iCAAwC,YACxC,8BAAwC,SACxC,4BAAwC,OACxC,+BAAwC,UACxC,oCAAwC,eACxC,6BAAwC,QACxC,sCAAwC,kBACxC,8BAAwC,SACxC,+BAAwC,UACxC,8BAAwC,SACxC,+BAAwC,UACxC,iCAAwC,YACxC,8BAAwC,SACxC,kCAAwC,aACxC,8BAAwC,SACxC,6BAAwC,QACxC,8BAAwC,SACxC,mCAAwC,eACxC,8BAAwC,WAE5C,CAACpb,MAAOpC,IAAKC,EAAE,kBAAmBmd,MAAO,gBAAkBI,OAAQ,CAE/D,mCAAwC,aAExC,iDAAkD,2BAClD,iDAAkD,mBAElD,iCAAwC,WAGxC,mCAAwC,aACxC,8BAAwC,QACxC,8BAAwC,QACxC,kCAAwC,YAExC,8BAAwC,QAExC,kCAAwC,YACxC,sEAA4E,eAC5E,qEAA4E,kBAC5E,0DAA4E,kBAC5E,yEAA4E,qBAC5E,wEAA4E,wBAC5E,qEAA4E,4BAE5E,gCAAwC,UACxC,+BAAwC,WAG5C,CAACpb,MAAOpC,IAAKC,EAAE,cAAemd,MAAO,oBAAuBE,UAAW,CAC/DpU,SAAU,QACVsI,SAAU,SACV+L,UAAW,aAEfT,YAAY,EACZW,cAAe,SAAA3d,GAAK,OAAK,8BAAU4d,KAAM,EAAG/a,MAAO,CAACY,MAAO,OAAQoa,OAAQ,YACrE3Y,MAAOlF,EAAMkF,MACbE,SAAU,SAAA7G,GAAC,OAAIyB,EAAMoF,SAAS7G,EAAEW,OAAOgG,YAGjD,CAAC5C,MAAOpC,IAAKC,EAAE,QAASmd,MAAO,WAAYC,SAAU,SACrD,CAACjb,MAAOpC,IAAKC,EAAE,QAASmd,MAAO,YAAaC,SAAU,QAClDC,UAAW,CACPpU,SAAU,OACVsI,SAAU,SACV+L,UAAW,aAEfT,YAAY,GAEhB,CAAC1a,MAAOpC,IAAKC,EAAE,sBAAuBmd,MAAO,iBAAmBE,UAAW,CACnEpU,SAAU,OACVsI,SAAU,SACV+L,UAAW,aAEfT,YAAY,EACZW,cAAe,SAAA3d,GAAK,OAChB,+EAAyD,6BACrD,8BAAU4d,KAAM,EAAG/a,MAAO,CAACY,MAAO,OAAQoa,OAAQ,YAC9C3Y,MAAOlF,EAAMkF,MACbE,SAAU,SAAA7G,GAAC,OAAIyB,EAAMoF,SAAS7G,EAAEW,OAAOgG,UAH/C,OASR,CAAE5C,MAAOpC,IAAKC,EAAE,uBAAwBmd,MAAO,kBAAmBE,UAAW,CACzEpU,SAAU,OACVsI,SAAU,SACV+L,UAAW,aAEXT,YAAY,EACZW,cAAe,SAAA3d,GAAK,OAChB,4EAAsD,6BAClD,8BAAU4d,KAAM,EAAG/a,MAAO,CAACY,MAAO,OAAQoa,OAAQ,YAC9C3Y,MAAOlF,EAAMkF,MACbE,SAAU,SAAA7G,GAAC,OAAIyB,EAAMoF,SAAS7G,EAAEW,OAAOgG,UAH/C,SAWhB,EAAKsP,aAAsB,KAC3B,EAAKC,YAAsB,KAC3B,EAAKC,iBAAsB,EAC3B,EAAK3G,gBAAsB,GAE3B,EAAK4G,gBAAsB,KAC3B,EAAKC,mBAAsB,EAAKC,cAAc3J,KAAnB,iBAC3B,EAAK4J,oBAAsB,EAAKC,eAAe7J,KAApB,iBAE3B,EAAKlL,MAAMoE,OAAOiC,UAAlB,yBAA8C,EAAKrG,MAAM6D,YAAzD,YAAwE,EAAK7D,MAAMU,WAAY4D,MAAK,SAAA5B,GAChG,EAAK1C,MAAMoE,OAAOC,SAAlB,yBAA6C,EAAKrE,MAAM6D,YAAxD,YAAuE,EAAK7D,MAAMU,SAAlF,WAAoG4D,MAAK,SAAAV,GAChGlB,GAAQA,EAAI5C,SAAY4C,EAAI5C,OAAOwG,SAAa1C,GAAUA,EAAMI,KAGjE,EAAKqQ,SAFL,EAAKvQ,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,4BAA6B+N,SAAS,EAAOkG,QAAS,WA5KlF,E,mDAoLZY,GAAa,IAAD,OACXC,KAAKC,MAAQzU,KAAK0U,WAAa,MACnC1U,KAAK0U,WAAaF,KAAKC,MACnBF,EACAvU,KAAKqD,SAAS,CAACoK,SAAS,EAAMmG,QAAQ,IAEtC5T,KAAKqD,SAAS,CAACuQ,QAAQ,IAE3Be,QAAQC,IAAI,gBACZ5U,KAAKgU,YAAcnF,YAAW,WAC1B8F,QAAQC,IAAI,mBACZ,EAAKZ,YAAc,KACnB,EAAKC,mBACD,EAAKA,iBAAmB,EACxB,EAAKL,OAAOW,GAEZ,EAAKlR,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,4BAEpC,KAEHM,KAAKT,MAAMoE,OAAOwK,OAAOnO,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAU,WAAY,MACpF4D,MAAK,SAAA8G,GACF,EAAKqJ,aAAea,aAAa,EAAKb,aACtC,EAAKC,iBAAmB,EACxB,EAAKD,YAAc,KAEfrJ,GAAQA,EAAKtG,MACb,EAAKhB,SAAS,CAACmD,QAAS/G,IAAKC,EAAEiL,EAAKtG,UAEhC,EAAK6P,kBACA,EAAKtE,OAAO,EAAKsE,gBAAiBvJ,IACnC,EAAKtH,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,0BAA2B,EAAKwU,mBAEnE,EAAKA,gBAAkB,MAE3BS,QAAQC,IAAI,oBAEZ,EAAKvR,SAAS,CAACsQ,QAAShJ,EAAM8C,SAAS,EAAO3F,QAAS,GAAI8L,QAAQ,W,oCAKrEvV,EAAI8E,GAAQ,IAAD,OACrBwR,QAAQC,IAAR,iBAAsBvW,EAAtB,YAA4B8E,EAAQA,EAAMI,IAAM,IAAMJ,EAAMuC,IAAM,SAC9DvC,IAAuB,IAAdA,EAAMuC,MAA8B,IAAdvC,EAAMI,MACjCvD,KAAK8U,UAAUD,aAAa7U,KAAK8U,UACrC9U,KAAK8U,SAAWjG,YAAW,WACvB,EAAKiG,SAAW,KAChB,EAAKlB,WACN,O,qCAIIzQ,GACXA,IAAuB,IAAdA,EAAMuC,KAAgBvC,EAAMI,KAAOvD,KAAKqD,SAAS,CAACmD,QAASrD,EAAMI,Q,0CAI1EvD,KAAKT,MAAMoE,OAAOG,eAAlB,UAAoC9D,KAAKT,MAAM6D,YAA/C,YAA8DpD,KAAKT,MAAMU,SAAzE,oBAAqGD,KAAKmU,oBAC1GnU,KAAKT,MAAMoE,OAAOG,eAAlB,UAAoC9D,KAAKT,MAAM6D,YAA/C,YAA8DpD,KAAKT,MAAMU,SAAzE,wBAAyGD,KAAKqU,uB,6CAI9GrU,KAAKT,MAAMoE,OAAOI,iBAAlB,UAAsC/D,KAAKT,MAAM6D,YAAjD,YAAgEpD,KAAKT,MAAMU,SAA3E,oBAAuGD,KAAKmU,oBAC5GnU,KAAKT,MAAMoE,OAAOI,iBAAlB,UAAsC/D,KAAKT,MAAM6D,YAAjD,YAAgEpD,KAAKT,MAAMU,SAA3E,wBAA2GD,KAAKqU,qBAC5GrU,KAAK+T,eACLc,aAAa7U,KAAK+T,cAClB/T,KAAK+T,aAAe,Q,qCAIb1V,GACX2B,KAAKT,MAAMoE,OAAOwK,OAAOnO,KAAKT,MAAM6D,YAAc,IAAMpD,KAAKT,MAAMU,SAAU,SAAU5B,K,iCAGhFA,EAAI0W,GACX,IAAMjN,EAAU5I,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM2E,WACxB,IAAzBA,EAAQsD,QAAQ/M,IAChByJ,EAAQyD,KAAKlN,GACb2B,KAAKqD,SAAS,CAACyE,YAAU,kBAAMiN,GAAMA,QAErCA,GAAMA,M,oCAIA1W,GACV,IAAMyJ,EAAU5I,KAAKC,MAAMD,KAAKgB,UAAUF,KAAKmD,MAAM2E,UAC/CqD,EAAMrD,EAAQsD,QAAQ/M,IAEf,IAAT8M,IACArD,EAAQuD,OAAOF,EAAK,GACpBnL,KAAKqD,SAAS,CAACyE,e,6BAIhBzJ,EAAIsV,GAAU,IAAD,OAEVqB,GADNrB,EAAUA,GAAW3T,KAAKmD,MAAMwQ,SACTtF,MAAK,SAAA4G,GAAG,OAAIA,EAAI5W,KAAOA,KAC9C,QAAI2W,IACAhV,KAAKT,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GACF,IAAIqM,EAAY0G,EAAO3V,QAAU2V,EAAO3V,OAAOiP,UAAY0G,EAAO3V,OAAOiP,UAAY0G,EAAOjV,IACnE,kBAAduO,GAA0BA,IACjCA,EAAYA,EAAU7O,IAAKqP,gBAAkBR,EAAUS,IAE3D,EAAKzB,gBAAkBgB,EACvB,EAAKjL,SAAS,CAACgK,OAAQhP,EAAIiP,gBAAiBgB,EAAWiF,eAAgBnO,IAAM4J,qBAAqB/M,EAAK,KAAM,CAACgN,SAAUxP,IAAKqP,sBAE9H,K,iCAMH,IAAD,OACHzQ,EAAK2B,KAAKmD,MAAMqQ,SAEpBxT,KAAK2O,WAAWtQ,GAAI,WAChB,EAAKkB,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAEF,OADAmD,IAAMoJ,iBAAiBvM,EAAK,EAAK1C,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAC3F,EAAKlP,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WACF,EAAKR,SAAS,CAACmQ,SAAU,GAAIE,kBAAkB,EAAOI,YAAazV,IAEnE,EAAK0V,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAGH,EAAKnF,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,uCAI5B3H,EAAI+F,GAAO,IAAD,OAEvB,IAAa,IAATA,EAAgB,CAKhB,IAJA,IAAMyR,EAAQ,CACT,kBAACpM,GAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,IAAG,4BAAKhF,IAAKC,EAAE,aACvC,kBAAC+J,GAAA,EAAD,CAAU9C,IAAI,OAAOlC,MAAM,UAAUhF,IAAKC,EAAE,gBAExC0O,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3ByH,EAAMtK,KAAM,kBAAC9B,GAAA,EAAD,CAAW9C,IAAKyH,EAAExO,WAAY6E,MAAO2J,EAAExO,YAAawO,EAApD,MAEhB,OAAQ,kBAAChF,EAAA,EAAD,CAAapI,UAAWhB,KAAKT,MAAM0B,QAAQ6U,gBAC/C,kBAACzM,EAAA,EAAD,CAAQrI,UAAWhB,KAAKT,MAAM0B,QAAQ8U,qBAAsBtR,OAAQL,GAAQ,IAAIxE,WAAY+E,SAAU,SAAA7G,GAAC,OAAI,EAAKkY,eAAe3X,EAAIP,EAAEW,OAAOgG,SAASoR,GACrJ,kBAACnM,EAAA,EAAD,CAAgB1I,UAAWhB,KAAKT,MAAM0B,QAAQgV,qBAAsBxW,IAAKC,EAAE,WAG/E,OAAO,O,qCAIArB,EAAI6X,EAAM9R,GAAO,IAAD,OAC3BpE,KAAK2O,WAAWtQ,GAAI,WAChB,EAAKkB,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAYF,OAXAmD,IAAM4K,gBAAgB/N,OAAKgO,EAAWiG,EAAM9R,EAAM,EAAK7E,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAEpH,EAAKtL,MAAM2Q,cAAgBzV,IAC3B,EAAKgF,SAAS,CAACyQ,YAAazV,IAC5B,EAAK0V,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGA,EAAKxU,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WAEF,EAAK+K,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,uCAI5BqX,EAASC,GAAU,IAAD,OAC/Btd,KAAK2O,WAAW0O,EAAQhf,IAAI,WACxB,EAAKkB,MAAMoE,OAAOiC,UAAUyX,EAAQhf,IAC/BwF,MAAK,SAAA5B,GACF,IAAKA,IAAQA,EAAI5C,OACb,OAAO,EAAKgE,SAAS,CAACmD,QAAS/G,IAAKC,EAAL,yCAAiD2d,EAAQhf,MAe5F,GAZA+G,IAAM4K,gBAAgB/N,EAAK,EAAKqL,qBAAiB2C,OAAWA,EAAW,EAAK1Q,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAEzIvP,KAAKgB,UAAUmd,EAAQE,iBAAmBre,KAAKgB,UAAUod,EAAQC,iBAC5DC,MAAMC,QAAQJ,EAAQE,iBACvBF,EAAQE,cAAc,CAACF,EAAQE,gBAGnCtb,EAAI5C,OAAOiP,UAAUoP,SAAWL,EAAQE,eAExCF,EAAQjZ,OAASkZ,EAAQlZ,OACzBnC,EAAI5C,OAAOiP,UAAUqP,OAASN,EAAQjZ,MAEtCiZ,EAAQO,oBAAsBN,EAAQM,kBAAoB,CAC1D3b,EAAI5C,OAAOiP,UAAUuP,aAAeR,EAAQO,kBAC5C,IACQ3b,EAAI5C,OAAOiP,UAAUuP,cACrB3e,KAAKC,MAAM8C,EAAI5C,OAAOiP,UAAUuP,cAEtC,MAAOxZ,GACL,EAAKhB,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,8CASvC,OANI2d,EAAQS,UACR7b,EAAI5C,OAAOiP,UAAUyP,UAAYV,EAAQW,gBAEzCX,EAAQY,WACRhc,EAAI5C,OAAOiP,UAAU4P,WAAab,EAAQc,iBAEvC,EAAK5e,MAAMoE,OAAOmC,UAAUuX,EAAQhf,GAAI4D,MAElD4B,MAAK,WAEF,EAAK+K,eAAeyO,EAAQhf,OAE/B0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,sCAI5B,IAAD,OACZ,OAAIhG,KAAKmD,MAAMqD,QACH,kBAAC,KAAD,CAAec,KAAMtH,KAAKmD,MAAMqD,QAASF,QAAS,kBAAM,EAAKjD,SAAS,CAACmD,QAAS,QAEjF,O,sCAIC1I,GAAI,IAAD,OACfA,GAAKA,EAAE2a,iBAEPzY,KAAK2O,WAAW3O,KAAKmD,MAAMkK,QAAQ,WAC/B,IAAMhP,EAAK,EAAK8E,MAAMkK,OACtB,EAAKhK,SAAS,CAACgK,OAAQ,GAAIkG,eAAgB,GAAIO,YAAazV,IAE5D,EAAK0V,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,KAEH,EAAKxU,MAAMoE,OAAOiC,UAAUvH,GACvBwF,MAAK,SAAA5B,GAEF,OADAmD,IAAM4K,gBAAgB/N,EAAK,EAAKqL,qBAAiB2C,OAAWA,EAAW,EAAK1Q,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UACtI,EAAKlP,MAAMoE,OAAOmC,UAAUzH,EAAI4D,MAE1C4B,MAAK,WAEF,EAAK+K,eAAevQ,MAEvB0H,OAAM,SAAAC,GAAG,OAAI,EAAKzG,MAAMC,QAAQwG,W,0CAIxB,IAAD,OAChB,OAAIhG,KAAKmD,MAAM+F,aACH,kBAAC,KAAD,CACJvC,IAAI,qBACJgD,OAAQ,QACRhG,OAAQ3D,KAAKT,MAAMoE,OACnBiG,SAAU,GACVC,MAAO,CAAC,SACRvD,QAAS,kBAAM,EAAKjD,SAAS,CAAC6F,cAAc,KAC5CY,KAAM,SAACF,GACH,EAAKvG,SAAS,CAAC6F,cAAc,IAE7B,EAAK3J,MAAMoE,OAAOiC,UAAUgE,GACvB/F,MAAK,SAAA5B,GACF,GAAIA,EAAK,CACL,IAAKA,EAAI5C,OACL,OAAO,EAAKgE,SAAS,CAACmD,QAAS/G,IAAKC,EAAL,yCAAiDkK,KAGpF,IAAMtK,EAAO8F,IAAM4J,qBAAqB/M,EAAK,KAAM,CAACgN,SAAUxP,IAAKqP,gBACnE1J,IAAM4K,gBAAgB/N,GAAM3C,GAAQG,IAAKC,EAAE,gBAAgBmL,QAAQ,UAAW,UAAMoF,OAAWA,EAAW,EAAK1Q,MAAM6D,YAAc,IAAM,EAAK7D,MAAMU,SAAU,EAAKV,MAAMH,OAAOqP,UAChL,EAAKE,WAAW1M,EAAIlC,KACpB,EAAKmU,gBAAkBjS,EAAIlC,IAEvB,EAAKoD,MAAM2Q,cAAgB7R,EAAIlC,MAC/B,EAAKsD,SAAS,CAACyQ,YAAa7R,EAAIlC,MAChC,EAAKgU,cAAgBc,aAAa,EAAKd,cACvC,EAAKA,aAAelF,YAAW,WAC3B,EAAKxL,SAAS,CAACyQ,YAAa,KAC5B,EAAKC,aAAe,OACrB,MAGF9R,EAAI5C,OAAOiP,WAIZrM,EAAI5C,OAAOiP,UAAUqP,OAAS,6BAC9B1b,EAAI5C,OAAOiP,UAAUoP,SAAW,CAAC,iCAJjCzb,EAAI5C,OAAOiP,UAAY,CAACqP,OAAQ,8BAChC1b,EAAI5C,OAAOiP,UAAY,CAACoP,SAAU,CAAC,iCAMvC,EAAKne,MAAMoE,OAAOmC,UAAU7D,EAAIlC,IAAKkC,GAChC4B,MAAK,WACF,EAAK+K,eAAe3M,EAAIlC,KACxB,EAAKsD,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,qEAElCqG,OAAM,SAAAC,GAAG,OAAI,EAAK3C,SAAS,CAACmD,QAASR,YAE1C,EAAK3C,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,sBAM5C,O,4CAIQ,IAAD,OAClB,IAAKM,KAAKmD,MAAMsQ,kBACZ,OAAO,KAEX,IAAMxS,EAAUjB,KAAKT,MAAM0B,QAE3B,OAAO,kBAACiP,EAAA,EAAD,CACHvO,MAAM,EACNgH,SAAS,KACTwH,WAAS,EACT7J,QAAS,kBAAM,EAAKjD,SAAS,CAACoQ,mBAAmB,KACjDrD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,sBAAsBoB,IAAKC,EAAE,gFAA7C,IAA8H,0BAAMqZ,KAAK,MAAMvX,aAAW,SAA5B,iBAC9H,kBAAC+O,EAAA,EAAD,KACI,yBAAKvP,UAAYC,EAAQ+X,WACrB,yBAAKhY,UAAYC,EAAQgY,YAAexZ,IAAKC,EAAE,SAC/C,yBAAKsB,UAAYC,EAAQgY,YAAexZ,IAAKC,EAAE,aAC/C,yBAAKsB,UAAYC,EAAQgY,YAAexZ,IAAKC,EAAE,UAEnD,yBAAKsB,UAAYhB,KAAKT,MAAM0B,QAAQiY,UAC9BlZ,KAAKmD,MAAMwQ,QAAQpK,KAAI,SAACC,EAAM4E,GAAP,OAAa,yBAAKzH,IAAKyH,GACxC,yBAAKpN,UAAYC,EAAQkY,WAAc3P,EAAKlK,KAAK8e,UAAU9S,KAAK,OAChE,yBAAKtK,UAAYC,EAAQkY,WAAc3P,EAAK+T,cAAchU,KAAI,SAAA8U,GAAC,OAAIA,EAAExT,QAAQ,yBAA0B,OAAKS,KAAK,OACjH,yBAAKtK,UAAYC,EAAQkY,WAAc3P,EAAK8U,gBAK5D,kBAAC9N,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQ9D,QAAS,WACb,EAAK2B,SAAS,CAACoQ,mBAAmB,IAClC,IAAM2F,EAAQ,EAAKjW,MAAMwQ,QAAQpK,KAAI,SAAAC,GAAI,OAAIA,EAAKlK,KAAK8e,UAAU9S,KAAK,MAAQ,KAAO9B,EAAK+T,cAAgB,KAAO/T,EAAK8U,YACtHjF,KAAKD,EAAM9N,KAAK,QACjB/J,MAAM,WAAW9B,IAAKC,EAAE,sBAC3B,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,kBAAM,EAAK2B,SAAS,CAACoQ,mBAAmB,KAAS/C,WAAS,GAAEjR,IAAKC,EAAE,c,+BAKtF,IAAD,OACL,GAAIM,KAAKmD,MAAMsK,QACX,OAAQ,kBAACkD,GAAA,EAAD,CAAmBhK,IAAI,kBAGnC,IAAM4X,EAAiB9e,IAAKC,EAAE,kBACxBid,EAAa3c,KAAKmD,MAAMwZ,WAAW9D,cACnClF,EAAU3T,KAAKmD,MAAMwZ,WAAa3c,KAAKmD,MAAMwQ,QAAQ1I,QAAO,SAAAzB,GAAI,uBAClE,UAAAA,EAAKlK,YAAL,mBAAWA,YAAX,eAAiBuZ,cAAcyB,SAASqC,MAAxC,UACAnT,EAAKlK,YADL,iBACA,EAAWkf,oBADX,aACA,EAAyBnQ,MAAK,SAAAgQ,GAAC,OAAIA,EAAExF,cAAcyB,SAASqC,SAD5D,UAEAnT,EAAKlK,YAFL,iBAEA,EAAW8e,iBAFX,aAEA,EAAsB/P,MAAK,SAAAgQ,GAAC,OAAIA,EAAExF,cAAcyB,SAASqC,UACvD3c,KAAKmD,MAAMwQ,QAEjB,OAAO,0BAAMhN,IAAI,KAAK3F,UAAWhB,KAAKT,MAAM0B,QAAQoG,KAChD,kBAAC,KAAD,CAASW,QAAQ,SACb,kBAAC3G,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OAAQvG,QAAS,kBAAM,EAAK2B,SAAS,CAAC6F,cAAc,MAAQ,kBAAC,IAAD,OAC/I,kBAAC7H,EAAA,EAAD,CAAKe,MAAO,CAAC4H,WAAY,QAAS1I,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OAC7GvG,QAAS,kBAAM,EAAKkS,QAAO,IAAO1L,SAAUlI,KAAKmD,MAAMyQ,QAAS5T,KAAKmD,MAAMyQ,OAAS,kBAACjD,GAAA,EAAD,CAAkBrP,KAAM,KAAS,kBAAC,IAAD,OAC1H,kBAACD,EAAA,EAAD,CAAKe,MAAO,CAAC4H,WAAY,QAAS1I,KAAK,QAAQC,MAAOvB,KAAKmD,MAAMuZ,WAAa,UAAY,UAAWlb,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OAChJpG,MAAOpC,IAAKC,EAAE,kBACdgC,QAAS,WACL9C,OAAO4d,aAAaiC,QAAQ,iBAAkB,EAAKtb,MAAMuZ,WAAa,QAAU,QAChF,EAAKrZ,SAAS,CAACqZ,YAAa,EAAKvZ,MAAMuZ,cACxCxU,SAAUlI,KAAKmD,MAAMyQ,QAAQ,kBAAC,IAAD,OACrC,kBAACvS,EAAA,EAAD,CAAKe,MAAO,CAAC4H,WAAY,QACpB1I,KAAK,QACLC,MAAOvB,KAAKmD,MAAMoZ,WAAa,UAAY,UAAW/a,aAAW,OAAOR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OACtGpG,MAAOpC,IAAKC,EAAE,sBACdgC,QAAS,WACL9C,OAAO4d,aAAaiC,QAAQ,iBAAkB,EAAKtb,MAAMoZ,WAAa,QAAU,QAChF,EAAKlZ,SAAS,CAACkZ,YAAa,EAAKpZ,MAAMoZ,cACxCrU,SAAUlI,KAAKmD,MAAMyQ,QAAQ,kBAAC,KAAD,OACrC,kBAACvS,EAAA,EAAD,CAAKe,MAAO,CAAC4H,WAAY,QACpBnI,MAAOpC,IAAKC,EAAE,kCACd4B,KAAK,QAAQE,aAAW,kBAAkBR,UAAWhB,KAAKT,MAAM0B,QAAQgH,OACxEvG,QAAS,kBAAM,EAAK2B,SAAS,CAACoQ,mBAAmB,KAAQvL,SAAUlI,KAAKmD,MAAMyQ,QAAQ,kBAAC,IAAD,OAC3F,kBAACrP,EAAA,EAAD,CACIvD,UAAWhB,KAAKT,MAAM0B,QAAQ0b,WAC9BnY,MAAO/E,IAAKC,EAAE,UACd+E,MAAOzE,KAAKmD,MAAMwZ,WAAYhY,SAAU,SAAA7G,GAAC,OAAI,EAAKuF,SAAS,CAACsZ,WAAY7e,EAAEW,OAAOgG,SACjF8U,WAAY,CACRC,aAAcxZ,KAAKmD,MAAMwZ,WACrB,kBAACjW,EAAA,EAAD,CAAYhF,QAAS,kBAAM,EAAK2B,SAAS,CAAEsZ,WAAY,OACnD,kBAAC,IAAD,YAEJ1M,MAIhB,yBAAKjP,UAAWhB,KAAKT,MAAM0B,QAAQiY,UAC7BlZ,KAAKmD,MAAMuZ,WASJ,KATiB,yBAAKta,MAAO,CAACS,UAAW,OAAQR,QAAS,SAC/D,yBAAKD,MAAO,CAACsc,KAAM,QACf,yBAAKtc,MAAO,CAACgG,WAAW,SAAU3I,IAAKC,EAAE,cACzC,yBAAK0C,MAAO,CAACS,UAAW,SAAUD,YAAa,WAAanD,IAAKC,EAAE,0NAEvE,yBAAK0C,MAAO,CAACsc,KAAM,QACf,yBAAKtc,MAAO,CAACgG,WAAY,SAAU3I,IAAKC,EAAE,gBAC1C,8BAAO0F,IAAMC,gBAAgBkZ,MAGnCve,KAAKmD,MAAMuZ,WAAqB,KAAR,6BACxB1c,KAAKmD,MAAMuZ,WAEJ,KAFiB,yBAAKta,MAAO,CAACsc,KAAM,SACzC,yBAAKtc,MAAO,CAACgG,WAAY,SAAUhD,IAAMC,gBAAgB5F,IAAKC,EAAE,sLAEpE,6BACI,kBAAC,KAAD,CACIif,WAAY,CACRC,QAAS,SAAArf,GAAK,OAAI,iCAEtB6C,MAAO,CAACS,UAAW,OAAQR,QAAS,gBACpCR,MAAM,GACNgd,SAAU7e,KAAKoc,WACf0C,WAAY,SAAChhB,EAAGihB,GACZ,EAAK3C,WAAW4C,QAAQC,oBAAoBF,EAAQG,UAAUC,KAAMJ,IAExEnC,QAAS5c,KAAKmD,MAAMoZ,WAAavc,KAAKmD,MAAMyZ,QAAU5c,KAAKmD,MAAMyZ,QAAQ3R,QAAO,SAAAzB,GAAI,OAAKA,EAAK+S,cAC9F6C,gBAAiB,SAACC,EAAKlC,GACnB,IAAMne,EAASme,EAAK9O,MAAK,SAACiR,GACtB,SAAIA,EAAQjhB,KAAMghB,EAAIE,UAAYD,EAAQjhB,KAAOghB,EAAIE,YACjD5K,QAAQC,IAAIyK,EAAIE,WACT,MAMf,OADA5K,QAAQC,IAAI5V,GACLA,GAEXwgB,KAAM7L,EACN8L,MAAO1E,GACP2E,UAAW1f,KAAKmD,MAAMyQ,OACtBzK,QAAS,CACLwW,oBAAqB,EACrBC,QAAQ,EACRC,QAAQ,EACRC,SAAU,SAACf,GACP,IAAI5P,EAAsC,SAAzB,EAAK5P,MAAMqX,UAAuB,OAAS,OAgB5D,OAfImI,EAAQgB,YACR5Q,EAAsC,SAAzB,EAAK5P,MAAMqX,UAAuB,UAAY,WAExC,YAAnBmI,EAAQiB,QAA2C,WAAnBjB,EAAQiB,SAEpC7Q,EADA4P,EAAQgB,UAC8B,SAAzB,EAAKxgB,MAAMqX,UAAuB,UAAY,UAErB,SAAzB,EAAKrX,MAAMqX,UAAuB,UAAY,WAI9D,EAAKzT,MAAM8c,aAAe,EAAK9c,MAAM8c,YAAYf,UAAU7gB,KAAO0gB,EAAQG,UAAU7gB,KACrF8Q,EAAsC,SAAzB,EAAK5P,MAAMqX,UAAuB,UAAY,QAGxD,CAACsJ,gBAAkB/Q,KAGlC2N,SAAU,CACNqD,YAAa,SAAC9C,EAASC,GAOnB,OANID,EAAQ/d,KAAK8e,WAAaZ,MAAMC,QAAQJ,EAAQ/d,KAAK8e,aACrDf,EAAQ/d,KAAK8e,UAAYf,EAAQ/d,KAAK8e,UAAU9S,KAAK,MAEzD,EAAKgC,gBAAkB+P,EAAQ/d,KAAK8e,UACpC,EAAK/a,SAAS,CAACgK,OAAQgQ,EAAQhf,KAExB,IAAIsH,SAAQ,SAAAzH,GACf,EAAKmF,SAAS,CAACuQ,QAAQ,IAEvB/E,YAAW,WACFwO,EAAQjZ,MAASiZ,EAAQE,eAC1B,EAAKla,SAAS,CAACmD,QAAS/G,IAAKC,EAAE,oEAGnC,EAAK0gB,iBAAiB/C,EAASC,GAC/Bpf,IACA,IAAMyV,EAAO,aAAO,EAAKxQ,MAAMwQ,SAC/BA,EAAQA,EAAQvI,QAAQkS,IAAYD,EACpC,EAAKha,SAAL,2BAAmB,EAAKF,OAAxB,IAA+BwQ,eAChC,SAGX0M,YAAa,SAAC/C,GAgBV,MAd0B,MAAtBA,EAAQyC,UACR,EAAK1c,SAAS,CAACmQ,SAAU8J,EAAQjf,KAEjC,EAAKkB,MAAMoE,OAAOiC,UAAU0X,EAAQjf,IAC/BwF,MAAK,SAAA5B,GAMF,OALIA,GAAOA,EAAI5C,QAAU4C,EAAI5C,OAAJ,mBACd4C,EAAI5C,OAAJ,0BACA4C,EAAI5C,OAAJ,wBACA4C,EAAI5C,OAAJ,wBAEJ,EAAKE,MAAMoE,OAAOmC,UAAUwX,EAAQjf,GAAI4D,MAIpD,IAAI0D,SAAQ,SAAAzH,GACf2Q,YAAW,WACH,EAAK1L,MAAMqQ,SACX,EAAKrH,WAEL,EAAKyC,eAAe0O,EAAQjf,IAEhCH,IACA,IAAMyV,EAAO,aAAO,EAAKxQ,MAAMwQ,SAC/BA,EAAQtI,OAAOsI,EAAQvI,QAAQkS,GAAU,GACzC,EAAKja,SAAL,2BAAmB,EAAKF,OAAxB,IAA+BwQ,eAChC,cAO1B3T,KAAK+Q,gBACL/Q,KAAKiK,oBACLjK,KAAK2Z,2B,GA9sBalX,aA+tBhBC,gBA7vBA,SAAAC,GAAK,MAAK,CACrB0E,IAAK,CACDuB,OAAQ,OACRqI,SAAU,UAEdiI,SAAU,CACNtQ,OAAQ,oBACRqI,SAAU,QAEd0L,WAAY,CACR3Z,MAAO,IACPgH,WAAYrH,EAAMoX,QAAQ,GAC1BlR,cAAe,UAEnBmQ,UAAW,CACPhM,YAAarK,EAAMoX,QAAQ,GAC3B5K,WAAYxM,EAAM0O,QAAQC,QAAQ0I,MAEtCf,WAAY,CACR5W,QAAS,eACTwG,cAAe,MACf7F,MAAO,OAEXmW,UAAW,CACP9W,QAAS,eACTwG,cAAe,MACf7F,MAAO,UAmuBAN,CAAmByZ,IC1xB5BmE,G,kDACF,WAAY/gB,GAAQ,oBAChB,IAAMghB,EAAa,eAAOhhB,GADX,OAEfghB,EAAcC,gBAAkB,CAAC,QACjCD,EAAcE,aAAe,CACzB,GAAMC,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,GAAMA,EAAQ,KACd,QAASA,EAAQ,MAbN,YAgBTnhB,EAAOghB,G,gEAGI,IAAD,OAChBvgB,KAAK2D,OAAOC,SAAZ,UAAwB5D,KAAKoD,YAA7B,YAA4CpD,KAAKC,SAAjD,0BACK4D,MAAK,SAAAV,GACGA,GAAUA,EAAMI,KACjB,EAAKF,SAAS,CAACsd,2BAA2B,S,uCAMtD,IAAMtZ,EAAMrH,KAAKmD,MAAMyd,YACvB,OAAKvZ,GAAe,YAARA,EAGA,UAARA,EACO,EAEC,UAARA,EACO,EAEC,WAARA,EAEO,GADSrH,KAAKmD,MAAM/D,OAAOyhB,YAAc,EAAI,GAG5C,UAARxZ,EAEO,IADSrH,KAAKmD,MAAM/D,OAAOyhB,YAAc,EAAI,IAAM7gB,KAAKmD,MAAM/D,OAAOwI,WAAa,EAAI,IAGrF,aAARP,EAEO,IADSrH,KAAKmD,MAAM/D,OAAOyhB,YAAc,EAAI,IAAM7gB,KAAKmD,MAAM/D,OAAOwI,WAAa,EAAI,IAAM5H,KAAKmD,MAAM/D,OAAO0hB,YAAc,EAAI,IAG/H,aAARzZ,EAEO,IADSrH,KAAKmD,MAAM/D,OAAOyhB,YAAc,EAAI,IAAM7gB,KAAKmD,MAAM/D,OAAOwI,WAAa,EAAI,IAAM5H,KAAKmD,MAAM/D,OAAO0hB,YAAc,EAAI,SAD3I,EApBW,I,oDA0BgB,IAAD,OAC1B,OAAK9gB,KAAKmD,MAAMwd,0BAGL,kBAACzQ,EAAA,EAAD,CACHvO,MAAM,EACN2E,QAAS,kBAAM,EAAKjD,SAAS,CAACsd,2BAA2B,IAAQ,kBAAM9R,YAAW,kBAAM,EAAKxL,SAAS,CAACsd,2BAA2B,MAAQ,SAC1IvQ,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAajS,GAAG,sBAAsBoB,IAAKC,EAAE,wDAC7C,kBAAC6Q,EAAA,EAAD,KACI,kBAACwQ,EAAA,EAAD,CAAmB1iB,GAAG,4BACjBoB,IAAKC,EAAE,0DACPD,IAAKC,EAAE,kEAAkE,6BAAK,6BAC/E,2BAAID,IAAKC,EAAE,uGAGnB,kBAAC8Q,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CACI9D,QAAS,kBAAM,EAAK2B,SAAS,CAACsd,2BAA2B,IAAQ,kBAAM9R,YAAW,kBAAM,EAAKxL,SAAS,CAACsd,2BAA2B,MAAQ,SAAQjQ,WAAS,GAC1JjR,IAAKC,EAAE,mBAEZ,kBAAC8F,EAAA,EAAD,CAAQ9D,QAAS,kBACb,EAAKiC,OAAON,SAAZ,UAAwB,EAAKD,YAA7B,YAA4C,EAAKnD,SAAjD,0BAAkF,GAAM,GACnF4D,MAAK,kBACF,EAAKR,SAAS,CAACsd,2BAA2B,QACpDpf,MAAM,WACH9B,IAAKC,EAAE,iBA1Bb,O,+BAiCL,IAAD,OACL,OAAKM,KAAKmD,MAAM6d,OAOZ,kBAAC,IAAD,CAAkBre,MAAO3C,KAAKmD,MAAMR,OAChC,yBAAK3B,UAAU,MAAMoB,MAAO,CAAC+M,WAAYnP,KAAKmD,MAAMR,MAAM0O,QAAQlC,WAAW8R,QAAS1f,MAAOvB,KAAKmD,MAAMR,MAAM0O,QAAQ/J,KAAKgK,UACvH,kBAAC4P,EAAA,EAAD,CAAQhQ,SAAS,UACb,kBAACiQ,EAAA,EAAD,CAAM1c,MAAOzE,KAAKohB,iBAAkBzc,SAAU,SAAC7G,EAAGujB,GAAJ,OAAc,EAAKC,UAAUxjB,EAAEW,OAAO8iB,WAAWC,QAAQliB,KAAM+hB,KACzG,kBAACI,EAAA,EAAD,CAAKjd,MAAO/E,IAAKC,EAAE,WAAYgiB,YAAU,YACzC,kBAACD,EAAA,EAAD,CAAKjd,MAAO/E,IAAKC,EAAE,eAAgBgiB,YAAU,UAC5C1hB,KAAKmD,MAAM/D,OAAOyhB,aAAe,kBAACY,EAAA,EAAD,CAAK7X,SAAqC,UAA3B5J,KAAKmD,MAAMyd,YAAyBpc,MAAO/E,IAAKC,EAAE,iBAAkBgiB,YAAU,UAC9H1hB,KAAKmD,MAAM/D,OAAOwI,YAAc,kBAAC6Z,EAAA,EAAD,CAAK7X,SAAqC,WAA3B5J,KAAKmD,MAAMyd,YAA0Bpc,MAAO/E,IAAKC,EAAE,kBAAmBgiB,YAAU,WAC/H1hB,KAAKmD,MAAM/D,OAAO0hB,aAAe,kBAACW,EAAA,EAAD,CAAK7X,SAAqC,UAA3B5J,KAAKmD,MAAMyd,YAAyBpc,MAAO/E,IAAKC,EAAE,iBAAkBgiB,YAAU,UAC/H,kBAACD,EAAA,EAAD,CAAKjd,MAAO/E,IAAKC,EAAE,oBAAqBgiB,YAAU,aAClD,kBAACD,EAAA,EAAD,CAAKjd,MAAO/E,IAAKC,EAAE,sBAAuBgiB,YAAU,eAI5D,yBAAK1gB,UAAWhB,KAAK2hB,SAAW3hB,KAAKT,MAAM0B,QAAQ2gB,iBAAmB5hB,KAAKT,MAAM0B,QAAQ4gB,aACxD,YAA3B7hB,KAAKmD,MAAMyd,cAA8B5gB,KAAKmD,MAAMyd,cAAiB,kBAAC,EAAD,CACnEja,IAAI,UACJtH,OAAQW,KAAKX,OACbsE,OAAQ3D,KAAK2D,OACbvE,OAAQY,KAAKmD,MAAM/D,OACnBI,QAAS,SAAA8H,GAAI,OAAI,EAAKjE,SAAS,CAACkE,WAAYD,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1H,cACnGD,OAAQ,SAAAP,GAAM,OAAI,EAAK0iB,aAAa1iB,IACpCa,SAAUD,KAAKC,SACfmD,YAAapD,KAAKoD,YAClB0E,QAAS9H,KAAKmD,MAAM2E,QACpBnD,SAAU,SAACR,EAAMM,EAAOsQ,GAAd,OAAqB,EAAKgN,kBAAkB5d,EAAMM,EAAOsQ,MAE3C,UAA3B/U,KAAKmD,MAAMyd,aAA4B,kBAAC,GAAD,CACpCja,IAAI,QACJtH,OAAQW,KAAKX,OACbsE,OAAQ3D,KAAK2D,OACbvE,OAAQY,KAAKmD,MAAM/D,OACnBI,QAAS,SAAA8H,GAAI,OAAI,EAAKjE,SAAS,CAACkE,WAAYD,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1H,cACnGK,SAAUD,KAAKC,SACfmD,YAAapD,KAAKoD,cAEM,UAA3BpD,KAAKmD,MAAMyd,aAA4B,kBAAC,GAAD,CACpCja,IAAI,QACJiQ,UAAW5W,KAAKmD,MAAMyT,UACtBvX,OAAQW,KAAKX,OACbsE,OAAQ3D,KAAK2D,OACbvE,OAAQY,KAAKmD,MAAM/D,OACnBI,QAAS,SAAA8H,GAAI,OAAI,EAAKjE,SAAS,CAACkE,WAAYD,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1H,cACnGwD,YAAapD,KAAKoD,YAClBnD,SAAUD,KAAKC,WAEa,WAA3BD,KAAKmD,MAAMyd,aAA6B,kBAAC,GAAD,CACzCja,IAAI,SACJiQ,UAAW5W,KAAKmD,MAAMyT,UACtBvX,OAAQW,KAAKX,OACbsE,OAAQ3D,KAAK2D,OACbvE,OAAQY,KAAKmD,MAAM/D,OACnBI,QAAS,SAAA8H,GAAI,OAAI,EAAKjE,SAAS,CAACkE,WAAYD,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1H,cACnGwD,YAAapD,KAAKoD,YAClBnD,SAAUD,KAAKC,WAES,UAA3BD,KAAKmD,MAAMyd,aAA4B,kBAAC,GAAD,CACpCja,IAAI,QACJiQ,UAAW5W,KAAKmD,MAAMyT,UACtBvX,OAAQW,KAAKX,OACbsE,OAAQ3D,KAAK2D,OACbvE,OAAQY,KAAKmD,MAAM/D,OACnBI,QAAS,SAAA8H,GAAI,OAAI,EAAKjE,SAAS,CAACkE,WAAYD,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1H,cACnGwD,YAAapD,KAAKoD,YAClBnD,SAAUD,KAAKC,WAES,aAA3BD,KAAKmD,MAAMyd,aAA+B,kBAAC,GAAD,CACvCja,IAAI,WACJtH,OAAQW,KAAKX,OACbsE,OAAQ3D,KAAK2D,OACbvE,OAAQY,KAAKmD,MAAM/D,OACnBI,QAAS,SAAA8H,GAAI,OAAI,EAAKjE,SAAS,CAACkE,WAAYD,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1H,cACnGK,SAAUD,KAAKC,SACfmD,YAAapD,KAAKoD,YAClBuB,SAAU,SAACR,EAAMM,GAAP,OAAiB,EAAKsd,kBAAkB5d,EAAMM,MAEhC,aAA3BzE,KAAKmD,MAAMyd,aAA+B,kBAAC,GAAD,CACvCja,IAAI,WACJtH,OAAQW,KAAKX,OACbsE,OAAQ3D,KAAK2D,OACbvE,OAAQY,KAAKmD,MAAM/D,OACnBI,QAAS,SAAA8H,GAAI,OAAI,EAAKjE,SAAS,CAACkE,WAAYD,GAAiB,IAATA,GAA+B,kBAATA,EAAsCA,EAAlBA,EAAK1H,cACnGK,SAAUD,KAAKC,SACfmD,YAAapD,KAAKoD,YAClB4e,YAAa,SAAA3d,GAAK,OAAI,EAAKyG,UAAUzG,IACrCM,SAAU,SAACR,EAAMM,GAAP,OAAiB,EAAKsd,kBAAkB5d,EAAMM,OAG/DzE,KAAKiiB,cACLjiB,KAAKkiB,yBACLliB,KAAKmiB,gCAhGP,kBAAC,IAAD,CAAkBxf,MAAO3C,KAAKmD,MAAMR,OACvC,kBAAC,IAAD,CAAQA,MAAO3C,KAAKmD,MAAMyT,iB,GAhGxBwL,KAsMH1f,gBApNA,SAAAC,GAAK,MAAK,CACrB0f,KAAM,GACNR,WAAY,CACR9e,QAAS,GACT6F,OAAQ,kCACRqI,SAAU,QAEd2Q,iBAAkB,CACd7e,QAAS,GACT6F,OAAQ,yCACRqI,SAAU,WA0MHvO,CAAmB4d,ICjOdgC,QACW,cAA7B1jB,OAAO2jB,SAASC,UAEe,UAA7B5jB,OAAO2jB,SAASC,UAEhB5jB,OAAO2jB,SAASC,SAASte,MACvB,2D,mCCNNtF,OAAOwE,YAAc,MACrB,IAAIqf,GAAYrd,IAAMsd,eAGtB/N,QAAQC,IAAI,YAAchW,OAAOwE,YAAc,IAAMuf,KAAU,iBAAmBF,GAAY,KAgBjE,mBAAzB7jB,OAAO2jB,SAASK,MAChBC,IAAY,CACRC,IAAK,kEACLC,QAAS,YAAcnkB,OAAOwE,YAAc,IAAMuf,KAClDK,aAAc,CACV,IAAIC,OAnBhB,SAASC,IACL,OAAOC,IAASC,OACZ,kBAAC,IAAD,CAAkBzgB,MAAOA,KAAM8f,KAC3B,kBAAC,GAAD,CACIY,cAAe,SAAAC,GACXb,GAAYa,EACZJ,QAIZ1iB,SAAS+iB,eAAe,SAchCL,GDuFM,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAM7f,MAAK,SAAA8f,GACjCA,EAAaC,kB","file":"static/js/main.dff9c80a.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 367;","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from './Logo';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    checkPassword(pass) {\n        if (pass.length < 8 || !pass.match(/[a-z]/) || !pass.match(/[A-Z]/) || !pass.match(/\\d/)) {\n            return I18n.t('invalid_password_warning');\n        } else {\n            return false;\n        }\n    }\n\n    renderInput(title, attr, type) {\n        const error = attr === 'pass' && this.checkPassword(this.props.native[attr]);\n        return (<TextField\n            label={ I18n.t(title) }\n            error={ !!error  }\n            className={ this.props.classes.input }\n            value={ this.props.native[attr] }\n            type={ type || 'text' }\n            helperText={ error || '' }\n            onChange={ e => this.props.onChange(attr, e.target.value) }\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts(forceUserCreate) {\n        this.setState({ inAction: true });\n\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={ this.props.classes.tab }>\n                <Logo\n                    instance={ this.props.instance }\n                    common={ this.props.common }\n                    native={ this.props.native }\n                    onError={ text => this.setState({errorText: text}) }\n                    onLoad={ this.props.onLoad }\n                />\n                <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                    { this.renderInput('ioBroker.pro Login', 'login') }<br/>\n                    { this.renderInput('ioBroker.pro Password', 'pass', 'password') }<br/>\n                    { this.renderCheckbox('Amazon Alexa', 'amazonAlexa') }\n                    <FormControlLabel key=\"googleHome\" className={ this.props.classes.controlElement }\n                                      style={{ marginTop: 5 }}\n                        control={\n                          <Checkbox\n                              checked={this.props.native.googleHome}\n                              onChange={() => {\n                                  // activate alexa if google home is on (temporary)\n                                  const newVal = !this.props.native.googleHome;\n                                  this.props.onChange('googleHome', newVal, () =>\n                                      newVal && this.props.onChange('amazonAlexa', true));\n                              }}\n                              color=\"primary\"\n                          />\n                        }\n                        label={I18n.t('Google Home')}\n                    />\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa')}\n                    <br/>\n\n                    <p>{I18n.t('new_certs_tip')}</p>\n                    {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                    <Button variant=\"outlined\"\n                            className={ this.props.classes.button }\n                            disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                            title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                            onClick={ () => this.resetCerts() }>\n                        <IconReload style={{ marginRight: 8 }}/>{ I18n.t('Get new connection certificates') }\n                    </Button>\n\n                    <p>{I18n.t('new_credentials_tip')}</p>\n                    {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                    <Button variant=\"outlined\"\n                            className={ this.props.classes.button }\n                            disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                            title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                            onClick={ () => this.resetCerts(true) }>\n                        <IconReload  style={{ marginRight: 8 }}/>{ I18n.t('Create IoT credentials anew') }\n                    </Button>\n                    <p>{ Utils.renderTextWithA(I18n.t('forum_tip')) }</p>\n                    <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_tip')) }</p>\n                    <p style={{ fontWeight: 'bold', paddingTop: 20}}>{ Utils.renderTextWithA(I18n.t('help_link_tip1')) }</p>\n                    <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_link_tip2')) }</p>\n                    <p style={{ fontWeight: 'bold', color: 'red'}}>{ Utils.renderTextWithA(I18n.t('help_link_tip3')) }</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard() }</div>\n                { this.renderToast() }\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport IconCopy from '@iobroker/adapter-react/Components/CopyIcon';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID3\"\n                prefix={'../..'}\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><IconCopy /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><IconCopy /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout api-secret')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.calcNightscoutSecret()}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />) : null}\n                <br/>\n                <br/>\n                <div className={this.props.classes.controlElement}>\n                    <TextField\n                        label={I18n.t('Read blood sugar from')}\n                        className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n                        value={this.props.native.amazonAlexaBlood || ''}\n                        type=\"text\"\n                        onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                        margin=\"normal\"\n                    />\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                    <FormControlLabel  className={this.props.classes.controlElement}\n                        control={\n                            <Checkbox\n                                style={{paddingLeft: 30}}\n                                checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                                onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Short answer for blood sugar')}\n                    />\n                </div>\n                <br/>\n                {this.renderToast()}\n                {this.getSelectIdDialog('amazonAlexaBlood')}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({editId: ''})}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\n\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRead = '#00bc00';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\nconst actionsMapping = {\r\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\r\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLineName:  {\r\n        fontSize: 8,\r\n        fontStyle: 'italic',\r\n        display: 'block'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlexaSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editedSmartType: null,\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showListOfDevices: false,\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n        console.log('Send BROWSE!');\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n                    console.log('BROWSE received.');\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            })\r\n            .catch(e => this.setState({message: I18n.t('Error %s', e)}));\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\r\n        if (state && state.ack === true && state.val === true) {\r\n            this.devTimer && clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    let editedSmartType = null;\r\n                    if (!device.additionalApplianceDetails.group) {\r\n                        editedSmartType = device.additionalApplianceDetails.smartType;\r\n                    }\r\n\r\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) return 0;\r\n            if (a === 'turnOn') return -1;\r\n            if (b === 'turnOn') return 1;\r\n\r\n            if (a === 'turnOff') return -1;\r\n            if (b === 'turnOff') return 1;\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.indexOf(action) !== -1) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].friendlyName);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderSelectByOn(dev, lineNum, id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\r\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\r\n            }\r\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectTypeSelector(type, onChange) {\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\r\n            ];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\r\n            }\r\n            return (\r\n                <FormControl>\r\n                    <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\r\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n                </FormControl>);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n                        if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>));\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const id = dev.additionalApplianceDetails.id;\r\n            const name = dev.additionalApplianceDetails.name || id;\r\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;\r\n            if (this.state.lastChanged === id && (background === DEFAULT_CHANNEL_COLOR_DARK || background === DEFAULT_CHANNEL_COLOR_LIGHT)) {\r\n                background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n            }\r\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\r\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\r\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\r\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\r\n            </div>));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        let friendlyName = dev.friendlyName;\r\n        let title;\r\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\r\n            title = friendlyName;\r\n        } else {\r\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\r\n        }\r\n\r\n        let devCount = 0;\r\n        for (const ch in dev.additionalApplianceDetails.channels) {\r\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\r\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\r\n            }\r\n        }\r\n        devCount = devCount || 1;\r\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\r\n        const id = dev.additionalApplianceDetails.id;\r\n\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.indexOf(id) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (id === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        // If some of sub channels in change list or in last changed\r\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\r\n            const channels = dev.additionalApplianceDetails.channels;\r\n            try {\r\n                channels && Object.keys(channels).forEach(chan =>\r\n                    chan && channels[chan].forEach(el => {\r\n                        if (this.state.changed.indexOf(el.id) !== -1) {\r\n                            background = CHANGED_COLOR;\r\n                        } else if (this.state.lastChanged === el.id) {\r\n                            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n                        }\r\n                    })\r\n                );\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        return [\r\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {devCount > 1 ?\r\n                        (<Badge badgeContent={devCount} color=\"primary\">\r\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\r\n                        </Badge>) :\r\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{title}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\r\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\r\n                {!dev.additionalApplianceDetails.group ?\r\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\r\n            </div>),\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            const editedSmartType = this.state.editedSmartType;\r\n\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return (<DialogSelectID\r\n                key=\"dialogSelectID1\"\r\n                prefix={'../..'}\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.friendlyName }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.friendlyName);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        return (\r\n            <form key=\"alexa\" className={this.props.classes.tab}>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     title={I18n.t('Show all devices for print out')}\r\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n                <TextField\r\n                    placeholder={I18n.t('Filter')}\r\n                    className={this.state.filter}\r\n                    value={this.state.filter}\r\n                    onChange={e => this.setState({filter: e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment: this.state.filter ? (\r\n                            <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                                <IconClear />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n                {this.renderDevices()}\r\n                {this.renderMessage()}\r\n                {this.renderEditDialog()}\r\n                {this.getSelectIdDialog()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderListOfDevices()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAlexaSmartNames.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlexaSmartNames);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\n\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRGB = '#ff7ee3';\r\nconst colorRead = '#00bc00';\r\n//const colorThermometer = '#bc1600';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR_DARK = '#4f4f4f';\r\nconst DEFAULT_CHANNEL_COLOR_LIGHT = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR_DARK = '#5c8f65';\r\nconst LAST_CHANGED_COLOR_LIGHT = '#b4ffbe';\r\n\r\nconst actionsMapping = {\r\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\r\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\r\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA', 'THERMOSTAT.AC', 'VACUUM_CLEANER'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        minWidth: 100,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        paddingLeft: 70,\r\n        //width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLine:  {\r\n        fontSize: 10,\r\n        fontStyle: 'italic',\r\n        display: 'inline-block',\r\n        marginLeft: 15\r\n    },\r\n    devSubLineSetId:  {\r\n        fontStyle: 'italic',\r\n        display: 'block',\r\n        color: '#999'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nclass AlisaDevices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n\r\n        this.lastBrowse = Date.now();\r\n\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.iobID === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.name;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) {\r\n                return 0;\r\n            }\r\n            if (a === 'OnOff') {\r\n                return -1;\r\n            }\r\n            if (b === 'OnOff') {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.includes(action)) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push(<span key={action} title={actionsMapping[action].desc}>\r\n                    <Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/>\r\n                </span>);\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push(<span key={dev.actions[a]}>{dev.actions[a]}</span>);\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].name);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\r\n            ];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\r\n            }\r\n            return (\r\n                <FormControl>\r\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\r\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n                </FormControl>);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        const id = dev.main.getId;\r\n        const name = dev.func;\r\n        let background = this.props.themeType === 'dark' ? DEFAULT_CHANNEL_COLOR_DARK : DEFAULT_CHANNEL_COLOR_LIGHT;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n            background = LAST_CHANGED_COLOR;\r\n        }*/\r\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\r\n            <div className={classes.devSubSubLine}>\r\n                <div>{dev.main.getId}</div>\r\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\r\n            </div>\r\n\r\n        </div>));\r\n\r\n        dev.attributes.forEach(attr => {\r\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\r\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\r\n                <div className={classes.devSubSubLine}>\r\n                    <div>{attr.getId}</div>\r\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\r\n                </div>\r\n            </div>));\r\n        });\r\n\r\n        /*if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n                            background = LAST_CHANGED_COLOR;\r\n                        }\r\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>));\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n        }*/\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\r\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\r\n        let background = (lineNum % 2) ? (this.props.themeType === 'dark' ? '#272727' : '#f1f1f1') : 'inherit';\r\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (dev.iobID === this.state.lastChanged) {\r\n            background = this.props.themeType === 'dark' ? LAST_CHANGED_COLOR_DARK : LAST_CHANGED_COLOR_LIGHT;\r\n        }\r\n\r\n        //const isComplex = dev.\r\n\r\n        return [\r\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {dev.attributes.length ?\r\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\r\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\r\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\r\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n\r\n            </div>),\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device %s will be disabled.', this.state.deleteId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return (<DialogSelectID\r\n                key=\"dialogSelectAlisa\"\r\n                prefix={'../..'}\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                        <div className={ classes.tableCell }>{ item.name }</div>\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        return (\r\n            <form key=\"alexa\" className={this.props.classes.tab}>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     title={I18n.t('Show all devices for print out')}\r\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n                <TextField\r\n                    placeholder={I18n.t('Filter')}\r\n                    className={this.state.filter}\r\n                    value={this.state.filter}\r\n                    onChange={e => this.setState({filter: e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment: this.state.filter ? (\r\n                            <IconButton onClick={() => this.setState({ filter: '' })}>\r\n                                <IconClear />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n                {this.renderDevices()}\r\n                {this.renderMessage()}\r\n                {this.renderEditDialog()}\r\n                {this.getSelectIdDialog()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderListOfDevices()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAlisaDevices.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AlisaDevices);\r\n","import React, {Component, forwardRef} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialTable from 'material-table';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport ExpertIcon from '@iobroker/adapter-react/Components/ExpertIcon'\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\r\nimport {MdList as IconList} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    tableDiv: {\r\n        height: 'calc(100% - 48px)',\r\n        overflow: 'auto',\r\n    },\r\n    searchText: {\r\n        width: 150,\r\n        marginLeft: theme.spacing(1),\r\n        verticalAlign: 'middle'\r\n    },\r\n    headerRow: {\r\n        paddingLeft: theme.spacing(1),\r\n        background: theme.palette.primary.main,\r\n    },\r\n    headerCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    },\r\n    tableCell: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        width: '30%'\r\n    }\r\n});\r\n\r\nclass GoogleSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myTableRef =  React.createRef();\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            expertMode: window.localStorage.getItem('App.expertMode') !== 'true',\r\n            helpHidden: window.localStorage.getItem('App.helpHidden') === 'true',\r\n            showSelectId: false,\r\n            searchText: '',\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: '',\r\n            columns: [\r\n                {title: I18n.t('ID'), field: 'id', editable: 'never', cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                }},\r\n                {title: I18n.t('Smart names'), field: 'name.nicknames'},\r\n                {title: I18n.t('ioBType'), field: 'ioType', editable: 'never', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                }},\r\n                {title: I18n.t('Type'), field: 'type',  lookup: {\r\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\r\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\r\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\r\n                    'action.devices.types.AWNING':          'Awning',\r\n                    'action.devices.types.BLINDS':          'Blinds',\r\n                    'action.devices.types.BOILER':          'Boiler',\r\n                    'action.devices.types.CAMERA':          'Camera',\r\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\r\n                    'action.devices.types.CURTAIN':         'Curtain',\r\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\r\n                    'action.devices.types.DOOR':            'Door',\r\n                    'action.devices.types.DRYER':           'Dryer',\r\n                    'action.devices.types.FAN':             'Fan',\r\n                    'action.devices.types.FIREPLACE':       'Fireplace',\r\n                    'action.devices.types.GARAGE':          'Garage',\r\n                    'action.devices.types.GATE':            'Gate',\r\n                    'action.devices.types.HEATER':          'Heater',\r\n                    'action.devices.types.HOOD':            'Hood',\r\n                    'action.devices.types.KETTLE':          'Kettle',\r\n                    'action.devices.types.LIGHT':           'Light',\r\n                    'action.devices.types.LOCK':            'Lock',\r\n                    'action.devices.types.MOP':             'Mop',\r\n                    'action.devices.types.MICROWAVE':       'Microwave',\r\n                    'action.devices.types.OUTLET':          'Outlet',\r\n                    'action.devices.types.OVEN':            'Oven',\r\n                    'action.devices.types.PERGOLA':         'Pergola',\r\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\r\n                    'action.devices.types.SCENE':           'Scene',\r\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\r\n                    'action.devices.types.SENSOR':          'Sensor',\r\n                    'action.devices.types.SHUTTER':         'Shutter',\r\n                    'action.devices.types.SHOWER':          'Shower',\r\n                    'action.devices.types.SPEAKER':         'Speaker',\r\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\r\n                    'action.devices.types.SWITCH':          'Switch',\r\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\r\n                    'action.devices.types.VACUUM':          'Vacuum',\r\n                    'action.devices.types.VALVE':           'Valve',\r\n                    'action.devices.types.WASHER':          'Washer',\r\n                    'action.devices.types.WATERHEATER':     'Water heater',\r\n                    'action.devices.types.WINDOW':          'Window'\r\n                }},\r\n                {title: I18n.t('Function/Trait'), field: 'displayTraits',  lookup: {\r\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\r\n                    'action.devices.traits.Brightness':     'Brightness',\r\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\r\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\r\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\r\n                    // 'action.devices.traits.Dock':        'Dock',\r\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\r\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\r\n                    // 'action.devices.traits.Locator':     'Locator',\r\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\r\n                    'action.devices.traits.Modes':          'Modes',\r\n                    'action.devices.traits.OnOff':          'OnOff',\r\n                    'action.devices.traits.OpenClose':      'OpenClose',\r\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\r\n                    'action.devices.traits.Scene':          'Scene',\r\n                    // 'action.devices.traits.Sensor':      'Sensor',\r\n                    'action.devices.traits.StartStop':      'StartStop',\r\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\r\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\r\n                    // 'action.devices.traits.Timer':       'Timer',\r\n                    'action.devices.traits.Toggles':        'Toggles',\r\n                    'action.devices.traits.Volume':         'Volume',\r\n                    }},\r\n\r\n                {title: I18n.t('Attributes'), field: 'displayAttributes',   cellStyle: {\r\n                        maxWidth: '12rem',\r\n                        overflow: 'hidden',\r\n                        wordBreak: 'break-all'\r\n                    },\r\n                    expertMode: true,\r\n                    editComponent: props => (<textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                          value={props.value}\r\n                          onChange={e => props.onChange(e.target.value)}\r\n                        />)\r\n                },\r\n                {title: I18n.t('Room'), field: 'roomHint', editable: 'never'},\r\n                {title: I18n.t('Auto'), field: 'smartEnum', editable: 'never',\r\n                    cellStyle: {\r\n                        maxWidth: '3rem',\r\n                        overflow: 'hidden',\r\n                        wordBreak: 'break-all'\r\n                    },\r\n                    expertMode: true,\r\n                },\r\n                {title: I18n.t('Conversation to GH'), field: 'displayConv2GH',  cellStyle: {\r\n                        maxWidth: '4rem',\r\n                        overflow: 'hidden',\r\n                        wordBreak: 'break-all'\r\n                    },\r\n                    expertMode: true,\r\n                    editComponent: props => (\r\n                        <div>Conversation to Google Home = function(value)&#123; <br/>\r\n                            <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                value={props.value}\r\n                                onChange={e => props.onChange(e.target.value)}\r\n                            />\r\n                            &#125;\r\n                        </div>\r\n                    )\r\n                },\r\n                { title: I18n.t('Conversation to ioB'), field: 'displayConv2iob', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                    },\r\n                    expertMode: true,\r\n                    editComponent: props => (\r\n                        <div>Conversation to ioBroker = function(value)&#123; <br/>\r\n                            <textarea rows={4} style={{width: '100%', resize: 'vertical'}}\r\n                                value={props.value}\r\n                                onChange={e => props.onChange(e.target.value)}\r\n                            />\r\n                            &#125;\r\n                        </div>\r\n                    )},\r\n              ]\r\n        };\r\n\r\n        this.timerChanged        = null;\r\n        this.browseTimer         = null;\r\n        this.browseTimerCount    = 0;\r\n        this.editedSmartName     = '';\r\n\r\n        this.waitForUpdateID     = null;\r\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n        console.log('Send BROWSE!');\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n                    console.log('BROWSE received.');\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectByOn(id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\r\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\r\n            }\r\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    onGHParamsChange(newData, oldData) {\r\n        this.addChanged(newData.id, () => {\r\n            this.props.socket.getObject(newData.id)\r\n                .then(obj => {\r\n                    if (!obj || !obj.common) {\r\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\r\n                    }\r\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\r\n                        if (!Array.isArray(newData.displayTraits)) {\r\n                            newData.displayTraits=[newData.displayTraits]\r\n                        }\r\n\r\n                        obj.common.smartName.ghTraits = newData.displayTraits;\r\n                    }\r\n                    if (newData.type !== oldData.type) {\r\n                        obj.common.smartName.ghType = newData.type;\r\n                    }\r\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\r\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\r\n                        try {\r\n                            if (obj.common.smartName.ghAttributes) {\r\n                                JSON.parse(obj.common.smartName.ghAttributes)\r\n                            }\r\n                        } catch (error) {\r\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')});\r\n                        }\r\n                    }\r\n                    if (newData.conv2GH) {\r\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\r\n                    }\r\n                    if (newData.conv2iob) {\r\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\r\n                    }\r\n                    return this.props.socket.setObject(newData.id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(newData.id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return (<DialogSelectID\r\n                key=\"dialogSelectGoogle\"\r\n                prefix={'../..'}\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                if (!obj.common) {\r\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\r\n                                }\r\n\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n                                \r\n                                if (!obj.common.smartName) {\r\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\r\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\r\n                                } else {\r\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\r\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\r\n                                }\r\n                                \r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => {\r\n                                        this.informInstance(obj._id);\r\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\r\n                                    })\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderListOfDevices() {\r\n        if (!this.state.showListOfDevices) {\r\n            return null;\r\n        }\r\n        const classes = this.props.classes;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            maxWidth=\"xl\"\r\n            fullWidth\r\n            onClose={() => this.setState({showListOfDevices: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('List of devices to print out, e.g. to give all device names to your partner.')} <span role=\"img\" aria-label=\"smile\">😄</span></DialogTitle>\r\n            <DialogContent>\r\n                <div className={ classes.headerRow } >\r\n                    <div className={ classes.headerCell }>{ I18n.t('Name') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Function') }</div>\r\n                    <div className={ classes.headerCell }>{ I18n.t('Room') }</div>\r\n                </div>\r\n                <div className={ this.props.classes.tableDiv } >\r\n                    { this.state.devices.map((item, i) => <div key={i}>\r\n                            <div className={ classes.tableCell }>{ item.name.nicknames.join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.displayTraits.map(n => n.replace('action.devices.traits.', '')).join(', ') }</div>\r\n                            <div className={ classes.tableCell }>{ item.roomHint }</div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    this.setState({showListOfDevices: false});\r\n                    const lines = this.state.devices.map(item => item.name.nicknames.join(', ') + '\\t' + item.displayTraits + '\\t' + item.roomHint);\r\n                    copy(lines.join('\\n'));\r\n                }} color=\"primary\">{I18n.t('Copy to clipboard')}</Button>\r\n                <Button onClick={() => this.setState({showListOfDevices: false})} autoFocus>{I18n.t('Close')}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        const manualModeHint = I18n.t('manualModeHint');\r\n        const searchText = this.state.searchText.toLowerCase();\r\n        const devices = this.state.searchText ? this.state.devices.filter(item =>\r\n            item.name?.name?.toLowerCase().includes(searchText) ||\r\n            item.name?.defaultNames?.find(n => n.toLowerCase().includes(searchText)) ||\r\n            item.name?.nicknames?.find(n => n.toLowerCase().includes(searchText)))\r\n            : this.state.devices;\r\n\r\n        return <form key=\"gh\" className={this.props.classes.tab}>\r\n            <Toolbar variant=\"dense\">\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab style={{marginLeft: '1rem'}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                     onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? <CircularProgress size={20} /> : <IconRefresh/>}</Fab>\r\n                <Fab style={{marginLeft: '1rem'}} size=\"small\" color={this.state.helpHidden ? 'default' : 'primary'} aria-label=\"Help\" className={this.props.classes.button}\r\n                     title={I18n.t('Show/Hide help')}\r\n                     onClick={() => {\r\n                         window.localStorage.setItem('App.helpHidden', this.state.helpHidden ? 'false' : 'true');\r\n                         this.setState({helpHidden: !this.state.helpHidden});\r\n                     }} disabled={this.state.browse}><IconHelp/></Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     size=\"small\"\r\n                     color={this.state.expertMode ? 'primary' : 'default'} aria-label=\"Help\" className={this.props.classes.button}\r\n                     title={I18n.t('Toggle expert mode')}\r\n                     onClick={() => {\r\n                         window.localStorage.setItem('App.expertMode', this.state.expertMode ? 'false' : 'true');\r\n                         this.setState({expertMode: !this.state.expertMode});\r\n                     }} disabled={this.state.browse}><ExpertIcon/></Fab>\r\n                <Fab style={{marginLeft: '1rem'}}\r\n                     title={I18n.t('Show all devices for print out')}\r\n                     size=\"small\" aria-label=\"List of devices\" className={this.props.classes.button}\r\n                     onClick={() => this.setState({showListOfDevices: true})} disabled={this.state.browse}><IconList/></Fab>\r\n                <TextField\r\n                    className={this.props.classes.searchText}\r\n                    label={I18n.t('Filter')}\r\n                    value={this.state.searchText} onChange={e => this.setState({searchText: e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment: this.state.searchText ? (\r\n                            <IconButton onClick={() => this.setState({ searchText: '' })}>\r\n                                <IconClear />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n            </Toolbar>\r\n            <div className={this.props.classes.tableDiv}>\r\n                {!this.state.helpHidden ? <div style={{marginTop: '4rem', display: 'flex'}}>\r\n                    <div style={{flex: '50%'}}>\r\n                        <div style={{fontWeight:\"bold\"}}>{I18n.t('Auto Mode')}</div>\r\n                        <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\r\n                    </div>\r\n                    <div style={{flex: '50%'}}>\r\n                        <div style={{fontWeight: 'bold'}}>{I18n.t('Manual Mode')}</div>\r\n                        <span>{Utils.renderTextWithA(manualModeHint)}</span>\r\n                    </div>\r\n                </div> : null}\r\n                {!this.state.helpHidden ? <br/> : null}\r\n                {!this.state.helpHidden ? <div style={{flex: '100%'}}>\r\n                    <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t(\"For help use this forum <a target='_blank' rel='noopener noreferrer' href='https://forum.iobroker.net/topic/24061/google-home-assistant-iobroker-einrichten-nutzen/'>thread</a>\"))}</div>\r\n                </div> : null}\r\n                <div>\r\n                    <MaterialTable\r\n                        components={{\r\n                            Toolbar: props => <span/>\r\n                        }}\r\n                        style={{marginTop: '1rem', display: 'inline-block'}}\r\n                        title=\"\"\r\n                        tableRef={this.myTableRef}\r\n                        onRowClick={(e, rowData) => {\r\n                            this.myTableRef.current.onTreeExpandChanged(rowData.tableData.path, rowData)\r\n                        }}\r\n                        columns={this.state.expertMode ? this.state.columns : this.state.columns.filter(item => !item.expertMode)}\r\n                        parentChildData={(row, rows) => {\r\n                            const result = rows.find((element) => {\r\n                                if (element.id && row.parentId && element.id === row.parentId) {\r\n                                    console.log(row.parentId);\r\n                                    return true;\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            });\r\n                            console.log(result);\r\n                            return result;\r\n                        }}\r\n                        data={devices}\r\n                        icons={tableIcons}\r\n                        isLoading={this.state.browse}\r\n                        options={{\r\n                            actionsColumnIndex: -1,\r\n                            paging: false,\r\n                            search: false,\r\n                            rowStyle: (rowData) => {\r\n                                let background = this.props.themeType === 'dark' ? '#000' : '#FFF';\r\n                                if (rowData.smartEnum) {\r\n                                    background = this.props.themeType === 'dark' ? '#1b1e18' : '#F7FFEA';\r\n                                }\r\n                                if (rowData.ioType === 'channel' || rowData.ioType === 'device') {\r\n                                    if (rowData.smartEnum) {\r\n                                        background = this.props.themeType === 'dark' ? '#3d3d3d' : '#eafff2';\r\n                                    } else {\r\n                                        background = this.props.themeType === 'dark' ? '#3e4b4b' : '#E2FFFF';\r\n                                    }\r\n                                }\r\n\r\n                                if  (this.state.selectedRow && this.state.selectedRow.tableData.id === rowData.tableData.id) {\r\n                                    background = this.props.themeType === 'dark' ? '#212121' : '#EEE';\r\n                                }\r\n\r\n                                return {backgroundColor:  background}\r\n                            }\r\n                        }}\r\n                        editable={{\r\n                            onRowUpdate: (newData, oldData) => {\r\n                                if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\r\n                                    newData.name.nicknames = newData.name.nicknames.join(',');\r\n                                }\r\n                                this.editedSmartName = newData.name.nicknames;\r\n                                this.setState({editId: newData.id});\r\n\r\n                                return new Promise(resolve => {\r\n                                    this.setState({browse: true});\r\n\r\n                                    setTimeout(() => {\r\n                                        if (!newData.type || !newData.displayTraits) {\r\n                                            this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});\r\n                                        }\r\n\r\n                                        this.onGHParamsChange(newData, oldData);\r\n                                        resolve();\r\n                                        const devices = [...this.state.devices];\r\n                                        devices[devices.indexOf(oldData)] = newData;\r\n                                        this.setState({ ...this.state, devices});\r\n                                    }, 500);\r\n                                });\r\n                            },\r\n                            onRowDelete: (oldData) => {\r\n                                // if smartenum set smartname on false if not delete/reset smartname content\r\n                                if (oldData.smartEnum === 'X') {\r\n                                    this.setState({deleteId: oldData.id});\r\n                                } else {\r\n                                    this.props.socket.getObject(oldData.id)\r\n                                        .then(obj => {\r\n                                            if (obj && obj.common && obj.common['smartName']) {\r\n                                                delete obj.common['smartName']['ghTraits'];\r\n                                                delete obj.common['smartName']['ghType'];\r\n                                                delete obj.common['smartName']['ghAttributes'];\r\n                                            }\r\n                                            return this.props.socket.setObject(oldData.id, obj);\r\n                                        });\r\n                                }\r\n\r\n                                return new Promise(resolve => {\r\n                                    setTimeout(() => {\r\n                                        if (this.state.deleteId) {\r\n                                            this.onDelete();\r\n                                        } else {\r\n                                            this.informInstance(oldData.id);\r\n                                        }\r\n                                        resolve();\r\n                                        const devices = [...this.state.devices];\r\n                                        devices.splice(devices.indexOf(oldData), 1);\r\n                                        this.setState({ ...this.state, devices });\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {this.renderMessage()}\r\n            {this.getSelectIdDialog()}\r\n            {this.renderListOfDevices()}\r\n        </form>;\r\n    }\r\n}\r\n\r\nGoogleSmartNames.propTypes = {\r\n    common:      PropTypes.object.isRequired,\r\n    native:      PropTypes.object.isRequired,\r\n    instance:    PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError:     PropTypes.func,\r\n    onLoad:      PropTypes.func,\r\n    onChange:    PropTypes.func,\r\n    socket:      PropTypes.object.isRequired,\r\n    themeType:   PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GoogleSmartNames);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabExtended from './Tabs/Extended';\r\nimport TabServices from './Tabs/Services';\r\nimport TabEnums from './Tabs/Enums';\r\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\r\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\r\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    onConnectionReady() {\r\n        this.socket.getState(`${this.adapterName}.${this.instance}.info.ackTempPassword`)\r\n            .then(state => {\r\n                if (!state || !state.val) {\r\n                    this.setState({showAckTempPasswordDialog: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'enums') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'alexa') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'google') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'alisa') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'extended') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'services') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 3 + offset;\r\n        }\r\n    }\r\n\r\n    renderAckTempPasswordDialog() {\r\n        if (!this.state.showAckTempPasswordDialog) {\r\n            return null;\r\n        } else {\r\n            return <Dialog\r\n                open={true}\r\n                onClose={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{I18n.t('Information: The skill linking process was changed!')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {I18n.t('The linking process has been changed for a few months.')}\r\n                        {I18n.t('Now there is no temporary password that will be sent by email.')}<br/><br/>\r\n                        <b>{I18n.t('The password is equal with ioBroker.pro and with password that was entered here in the settings!')}</b>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => this.setState({showAckTempPasswordDialog: false}, () => setTimeout(() => this.setState({showAckTempPasswordDialog: true}), 1000))} autoFocus>\r\n                        {I18n.t('Not understood')}\r\n                    </Button>\r\n                    <Button onClick={() =>\r\n                        this.socket.setState(`${this.adapterName}.${this.instance}.info.ackTempPassword`, true, true)\r\n                            .then(() =>\r\n                                this.setState({showAckTempPasswordDialog: false}))\r\n                    } color=\"primary\" >\r\n                        {I18n.t('Roger that')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return (\r\n            <MuiThemeProvider theme={this.state.theme}>\r\n                <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                            <Tab label={I18n.t('Options')} data-name=\"options\" />\r\n                            <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\r\n                            {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\r\n                            {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\r\n                            {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\r\n                            <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\r\n                            <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\r\n                        </Tabs>\r\n                    </AppBar>\r\n\r\n                    <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                        {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                            key=\"options\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            onLoad={native => this.onLoadConfig(native)}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            changed={this.state.changed}\r\n                            onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                        />)}\r\n                        {this.state.selectedTab === 'enums' && (<TabEnums\r\n                            key=\"enums\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                        />)}\r\n                        {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\r\n                            key=\"alexa\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                            {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\r\n                            key=\"google\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                        {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\r\n                            key=\"alisa\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                        {this.state.selectedTab === 'extended' && (<TabExtended\r\n                            key=\"extended\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                        />)}\r\n                        {this.state.selectedTab === 'services' && (<TabServices\r\n                            key=\"services\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            onShowError={error => this.showError(error)}\r\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                        />)}\r\n                    </div>\r\n                    {this.renderError()}\r\n                    {this.renderSaveCloseButtons()}\r\n                    {this.renderAckTempPasswordDialog()}\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'iot';\r\nlet themeName = Utils.getThemeName();\r\n\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}