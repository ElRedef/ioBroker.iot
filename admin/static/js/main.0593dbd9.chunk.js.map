{"version":3,"sources":["i18n.js","Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["I18nExtended","I18n","translations","en","require","de","ru","pt","nl","fr","it","es","pl","zh-cn","Logo","evt","_this","this","f","target","files","r","window","FileReader","onload","e","contents","result","json","JSON","parse","native","common","name","props","onError","t","onLoad","toString","readAsText","alert","_id","instance","stringify","news","titleLang","desc","generateFile","_this2","input","document","createElement","setAttribute","addEventListener","handleFileSelect","click","_this3","react_default","a","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","index_esm","title","upload","fa_index_esm","download","filename","obj","el","encodeURIComponent","style","display","body","appendChild","removeChild","Component","withStyles","theme","marginRight","marginTop","float","padding","width","Options","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","inAction","forceUserCreate","showHint","toast","isInstanceAlive","socket","getObject","concat","adapterName","then","getState","setState","enabled","val","attr","type","TextField","label","value","onChange","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","ack","Promise","resolve","setObject","catch","err","_this4","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton","key","close","_this5","Message_default","text","_this6","FormControlLabel","assign","paddingTop","controlElement","control","Checkbox","checked","_this7","tab","Tabs_Logo","errorText","column","columnSettings","renderInput","renderCheckbox","variant","button","disabled","resetCerts","onForceUserCreate","fontWeight","columnLogo","renderCard","renderHint","renderToast","minHeight","minWidth","maxWidth","height","verticalAlign","ExtendedOptions","showSelectId","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","SelectID_default","prefix","connection","selected","statesOnly","onOk","renderSelect","marginLeft","getSelectIdDialog","marginBottom","Services","running","text2commandList","addValue","onKeyChangedBound","onKeyChanged","bind","assertThisInitialized","getAdapterInstances","list","replace","subscribeState","unsubscribeState","showError","chips","split","filter","pos","indexOf","splice","join","push","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","_this8","reissueUrlKey","fullSize","login","readOnly","copyToClipboard","CopyContentImg","renderChips","text2command","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","changed","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","match","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","i","length","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","fontSize","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","handleOk","aria-labelledby","DialogTitle","DialogContent","helperText","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","fontStyle","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editObjectName","deleteId","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","actions","sort","b","Icon","actionIcon","lineNum","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","_this9","_this10","group","channels","names","types","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","_loop","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","smartType","_this11","nameModified","devModified","devCount","ch","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","_this12","_this13","preventDefault","_this14","editedId","onKeyDown","defaultValue","_this15","_this16","toLowerCase","renderDevice","_this17","placeholder","renderDevices","renderConfirmDialog","devLineEnabled","paddingLeft","left","devSubLineEdit","OnOff","Brightness","RGB","AlisaDevices","iobID","main","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","GoogleSmartNames","traits","App","extendedProps","objectSpread","selectedTab","amazonAlexa","googleHome","yandexAlisa","loaded","AppBar","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","Tabs_Options","onLoadConfig","updateNativeValue","Tabs_Enums","Tabs_AlexaSmartNames","Tabs_GoogleSmartNames","AlisaSmartNames","Extended","Tabs_Services","onShowError","error","renderError","renderSaveCloseButtons","Loader_default","themeType","GenericApp","root","Boolean","location","hostname","build","ReactDOM","render","MuiThemeProvider","createTheme","src_App","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0593dbd9.chunk.js","sourcesContent":["/**\n * Copyright 2018 bluefox <dogafox@gmail.com>\n *\n * Licensed under the Creative Commons Attribution-NonCommercial License, Version 4.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://creativecommons.org/licenses/by-nc/4.0/legalcode.txt\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nclass I18nExtended extends I18n{\n    static translations = {\n        'en': require('./i18n/en'),\n        'de': require('./i18n/de'),\n        'ru': require('./i18n/ru'),\n        'pt': require('./i18n/pt'),\n        'nl': require('./i18n/nl'),\n        'fr': require('./i18n/fr'),\n        'it': require('./i18n/it'),\n        'es': require('./i18n/es'),\n        'pl': require('./i18n/pl'),\n        'zh-cn': require('./i18n/zh-cn'),\n    };\n}\n\nexport default I18nExtended;","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '../i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '../i18n';\nimport Logo from './Logo';\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            forceUserCreate: false,\n            showHint: false,\n            toast: '',\n            isInstanceAlive: false,\n        };\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts() {\n        this.setState({inAction: true});\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (this.state.forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    onForceUserCreate() {\n        this.setState({forceUserCreate: !this.state.forceUserCreate, showHint: !this.state.forceUserCreate});\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderHint() {\n        if (this.state.showHint) {\n            return (<Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n                                  control={\n                                      <Checkbox\n                                          checked={this.props.native[attr]}\n                                          onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                                          color=\"primary\"\n                                      />\n                                  }\n                                  label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Logo\n                    instance={this.props.instance}\n                    common={this.props.common}\n                    native={this.props.native}\n                    onError={text => this.setState({errorText: text})}\n                    onLoad={this.props.onLoad}\n                />\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnSettings}>\n                    {this.renderInput('ioBroker.pro Login', 'login')}<br/>\n                    {this.renderInput('ioBroker.pro Password', 'pass', 'password')}<br/>\n                    {this.renderCheckbox('Amazon Alexa', 'amazonAlexa', {marginTop: 10})}<br/>\n                    {this.renderCheckbox('Google Home', 'googleHome', {marginTop: 10})}<br/>\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa', {marginTop: 10})}<br/>\n                    <br/>\n                    <Button variant=\"outlined\"\n                            className={this.props.classes.button}\n                            disabled={this.state.inAction || !this.state.isInstanceAlive}\n                            title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                            onClick={() => this.resetCerts()}>\n                        <IconReload/>{I18n.t('Get new connection certificates')}\n                    </Button>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.forceUserCreate}\n                                onChange={() => this.onForceUserCreate()}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Request email with password one more time')}\n                    />\n                    <p style={{fontWeight: 'bold'}}>{Utils.renderTextWithA(I18n.t('help_tip'))}</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard()}</div>\n                {this.renderHint()}\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '../i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={this.props.native[attr]}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport CopyContentImg from '@iobroker/adapter-react/assets/copy-content.svg';\nimport I18n from '../i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            text2commandList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list => this.setState({text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))}));\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '../i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '../i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + state.val + '/' + state.ack);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        if (this.state.changed.indexOf(id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    }\n                }\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '../i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRGB = '#ff7ee3';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        minWidth: 100,\n        display: 'inline-block',\n        fontSize: 13,\n        paddingLeft: 70,\n        //width: 'calc(100% - 400px)'\n    },\n    devSubSubLine:  {\n        fontSize: 10,\n        fontStyle: 'italic',\n        display: 'inline-block',\n        marginLeft: 15\n    },\n    devSubLineSetId:  {\n        fontStyle: 'italic',\n        display: 'block',\n        color: '#999'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlisaDevices extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        console.log('Send BROWSE!');\n\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + state.val + '/' + state.ack);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.iobID === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.name;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName:smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'OnOff') return -1;\n            if (b === 'OnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].name);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        const id = dev.main.getId;\n        const name = dev.func;\n        let background = DEFAULT_CHANNEL_COLOR;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n            background = LAST_CHANGED_COLOR;\n        }*/\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\n            <div className={classes.devSubSubLine}>\n                <div>{dev.main.getId}</div>\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\n            </div>\n\n        </div>));\n\n        dev.attributes.forEach(attr => {\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\n                <div className={classes.devSubSubLine}>\n                    <div>{attr.getId}</div>\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\n                </div>\n            </div>));\n        });\n\n        /*if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n        }*/\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (dev.iobID === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        //const isComplex = dev.\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {dev.attributes.length ?\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\n\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlisaDevices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlisaDevices);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport I18n from '../i18n';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass GoogleSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + state.val + '/' + state.ack);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.traits) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.traits.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        if (this.state.changed.indexOf(id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    }\n                }\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nGoogleSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GoogleSmartNames);\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport TabOptions from './Tabs/Options';\nimport TabExtended from './Tabs/Extended';\nimport TabServices from './Tabs/Services';\nimport TabEnums from './Tabs/Enums';\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = {...props};\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n        super(extendedProps);\n    }\n    getSelectedTab() {\n        const tab = this.state.selectedTab;\n        if (!tab || tab === 'options') {\n            return 0;\n        } else\n        if (tab === 'enums') {\n            return 1;\n        } else\n        if (tab === 'alexa') {\n            return 2;\n        } else\n        if (tab === 'google') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\n            return 2 + offset;\n        }\n        if (tab === 'alisa') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'extended') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'services') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 3 + offset;\n        }\n    }\n    render() {\n        if (!this.state.loaded) {\n            return (<Loader theme={this.state.themeType}/>);\n        }\n\n        return (\n            <div className=\"App\">\n                <AppBar position=\"static\">\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\n                    </Tabs>\n                </AppBar>\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\n                        key=\"options\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        onLoad={native => this.onLoadConfig(native)}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                    {this.state.selectedTab === 'enums' && (<TabEnums\n                        key=\"enums\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                    />)}\n                    {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\n                        key=\"alexa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                        {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\n                        key=\"google\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\n                        key=\"alisa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'extended' && (<TabExtended\n                        key=\"extended\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                    {this.state.selectedTab === 'services' && (<TabServices\n                        key=\"services\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onShowError={error => this.showError(error)}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                </div>\n                {this.renderError()}\n                {this.renderSaveCloseButtons()}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createTheme from '@iobroker/adapter-react/createTheme';\n\nlet theme = 'light';\n\nfunction build() {\n    return ReactDOM.render(<MuiThemeProvider theme={createTheme(theme)}>\n        <App onThemeChange={_theme => {\n            theme = _theme;\n            build();\n        }}/>\n    </MuiThemeProvider>, document.getElementById('root'));\n}\n\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}