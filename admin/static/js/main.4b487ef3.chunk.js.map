{"version":3,"sources":["Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Logo","Component","filename","obj","el","window","document","createElement","setAttribute","encodeURIComponent","JSON","stringify","style","display","body","appendChild","click","removeChild","handleFileSelect","evt","f","target","files","r","FileReader","onload","e","contents","result","json","parse","native","common","name","this","props","onError","I18n","t","onLoad","toString","readAsText","alert","download","_id","instance","news","titleLang","desc","generateFile","upload","input","addEventListener","render","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","title","withStyles","theme","marginRight","marginTop","float","padding","width","Options","constructor","super","onAliveChanged","id","state","adapterName","setState","isInstanceAlive","val","inAction","toast","errorWithPercent","socket","getState","then","componentDidMount","subscribeState","componentWillUnmount","unsubscribeState","checkPassword","pass","length","match","renderInput","attr","type","error","TextField","label","value","helperText","onChange","margin","renderCard","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","resetCerts","forceUserCreate","ack","Promise","resolve","getObject","enabled","setObject","catch","err","renderToast","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","action","IconButton","key","close","renderCheckbox","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","tab","text","errorText","column","columnSettings","googleHome","newVal","changed","hintUnsaved","variant","button","disabled","fontWeight","columnLogo","minHeight","minWidth","marginBottom","maxWidth","height","verticalAlign","cannotUse","fontSize","fontStyle","ExtendedOptions","showSelectId","renderSelect","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","getSelectIdDialog","prefix","selected","types","onOk","marginLeft","Services","running","text2commandList","nightscoutList","addValue","onKeyChangedBound","onKeyChanged","bind","getAdapterInstances","list","nsList","replace","reissueUrlKey","showError","onChipsDelete","chips","split","filter","a","pos","indexOf","splice","join","onChipsAdd","push","calcNightscoutSecret","email","login","secret","nightscoutPass","renderChips","chipsDiv","onKeyUp","keyCode","trim","word","Chip","onDelete","chip","fullSize","readOnly","copyToClipboard","text2command","nightscout","normalSize","amazonAlexaBlood","paddingLeft","amazonAlexaBloodShortAnswer","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","informInstance","sendTo","addChanged","i","onToggleEnum","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","setTimeout","onEdit","getLanguage","en","getObjectNameFromObj","language","renderEnum","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","enumLineEdit","renderEnums","renderMessage","changeSmartName","startsWith","newObj","updateSmartName","undefined","renderEditDialog","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","autoFocus","CircularProgress","columnHeader","columnDiv","overflow","position","right","top","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editedSmartType","editObjectName","deleteId","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","group","smartType","onAskDelete","renderActions","actions","sort","b","Icon","actionIcon","onExpand","lineNum","renderSelectByOn","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","renderSelectTypeSelector","renderSelectType","renderChannels","channels","names","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","devSubLine","devLineActions","channelLineActions","devSubLineName","devSubSubLineName","devSubLineDelete","renderDevice","nameModified","devModified","devCount","ch","devLine","devLineNumber","devLineExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","preventDefault","editedId","onKeyDown","defaultValue","renderConfirmDialog","renderDevices","toLowerCase","placeholder","devLineEnabled","left","devSubLineEdit","OnOff","Brightness","RGB","AlisaDevices","iobID","main","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","GoogleSmartNames","myTableRef","React","createRef","columns","field","editable","cellStyle","wordBreak","lookup","editComponent","cols","rows","onGHParamsChange","newData","oldData","displayTraits","Array","isArray","ghTraits","ghType","displayAttributes","ghAttributes","conv2GH","ghConv2GH","displayConv2GH","conv2iob","ghConv2iob","displayConv2iob","manualModeHint","flex","tableRef","onRowClick","rowData","current","onTreeExpandChanged","tableData","path","parentChildData","row","element","parentId","data","icons","isLoading","actionsColumnIndex","paging","rowStyle","themeType","smartEnum","ioType","selectedRow","backgroundColor","onRowUpdate","nicknames","onRowDelete","App","GenericApp","extendedProps","encryptedFields","translations","require","getSelectedTab","selectedTab","amazonAlexa","yandexAlisa","loaded","default","AppBar","Tabs","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","onShowError","renderError","renderSaveCloseButtons","root","Boolean","location","hostname","themeName","getThemeName","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b487ef3.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from './Logo';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    checkPassword(pass) {\n        if (pass.length < 8 || !pass.match(/[a-z]/) || !pass.match(/[A-Z]/) || !pass.match(/\\d/)) {\n            return I18n.t('invalid_password_warning');\n        } else {\n            return false;\n        }\n    }\n\n    renderInput(title, attr, type) {\n        const error = attr === 'pass' && this.checkPassword(this.props.native[attr]);\n        return (<TextField\n            label={ I18n.t(title) }\n            error={ !!error  }\n            className={ this.props.classes.input }\n            value={ this.props.native[attr] }\n            type={ type || 'text' }\n            helperText={ error || '' }\n            onChange={ e => this.props.onChange(attr, e.target.value) }\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts(forceUserCreate) {\n        this.setState({ inAction: true });\n\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={ this.props.classes.tab }>\n                <Logo\n                    instance={ this.props.instance }\n                    common={ this.props.common }\n                    native={ this.props.native }\n                    onError={ text => this.setState({errorText: text}) }\n                    onLoad={ this.props.onLoad }\n                />\n                <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                    { this.renderInput('ioBroker.pro Login', 'login') }<br/>\n                    { this.renderInput('ioBroker.pro Password', 'pass', 'password') }<br/>\n                    { this.renderCheckbox('Amazon Alexa', 'amazonAlexa') }\n                    <FormControlLabel key=\"googleHome\" className={ this.props.classes.controlElement }\n                                      style={{ marginTop: 5 }}\n                        control={\n                          <Checkbox\n                              checked={this.props.native.googleHome}\n                              onChange={() => {\n                                  // activate alexa if google home is on (temporary)\n                                  const newVal = !this.props.native.googleHome;\n                                  this.props.onChange('googleHome', newVal, () =>\n                                      newVal && this.props.onChange('amazonAlexa', true));\n                              }}\n                              color=\"primary\"\n                          />\n                        }\n                        label={I18n.t('Google Home')}\n                    />\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa')}\n                    <br/>\n\n                    <p>{I18n.t('new_certs_tip')}</p>\n                    {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                    <Button variant=\"outlined\"\n                            className={ this.props.classes.button }\n                            disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                            title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                            onClick={ () => this.resetCerts() }>\n                        <IconReload style={{ marginRight: 8 }}/>{ I18n.t('Get new connection certificates') }\n                    </Button>\n\n                    <p>{I18n.t('new_credentials_tip')}</p>\n                    {this.props.changed ? <div className={this.props.classes.hintUnsaved}>{I18n.t('Save settings before pressing this button')}</div> : null}\n                    <Button variant=\"outlined\"\n                            className={ this.props.classes.button }\n                            disabled={ this.props.changed || this.state.inAction || !this.state.isInstanceAlive }\n                            title={ !this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : '' }\n                            onClick={ () => this.resetCerts(true) }>\n                        <IconReload  style={{ marginRight: 8 }}/>{ I18n.t('Create IoT credentials anew') }\n                    </Button>\n                    <p>{ Utils.renderTextWithA(I18n.t('forum_tip')) }</p>\n                    <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_tip')) }</p>\n                    <p style={{ fontWeight: 'bold', paddingTop: 20}}>{ Utils.renderTextWithA(I18n.t('help_link_tip1')) }</p>\n                    <p style={{ fontWeight: 'bold' }}>{ Utils.renderTextWithA(I18n.t('help_link_tip2')) }</p>\n                    <p style={{ fontWeight: 'bold', color: 'red'}}>{ Utils.renderTextWithA(I18n.t('help_link_tip3')) }</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard() }</div>\n                { this.renderToast() }\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport IconCopy from '@iobroker/adapter-react/Components/CopyIcon';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    normalSize: {\n        width: 'calc(30% - 64px)',\n        marginLeft: 10\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            showSelectId: false,\n            text2commandList: [],\n            nightscoutList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list =>\n                this.props.socket.getAdapterInstances('nightscout')\n                    .then(nsList => this.setState({\n                        nightscoutList: nsList.map(obj => obj._id.replace('system.adapter.nightscout.', '')),\n                        text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))\n                    })));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        state && this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    calcNightscoutSecret() {\n        const email = this.props.native.login.replace(/[^\\w\\d-_]/g, '_');\n        const secret = this.props.native.nightscoutPass;\n        return email + (secret ? '-' + secret : '');\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID3\"\n                prefix={'../..'}\n                socket={this.props.socket}\n                selected={this.props.native[attr]}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><IconCopy /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><IconCopy /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                <br/>\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.nightscout || '_'}\n                        onChange={e => this.props.onChange('nightscout', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"nightscout\" id=\"nightscout-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.nightscoutList.map(item => (<MenuItem key={'key-' + item} value={item}>nightscout.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use Nightscout instance')}</FormHelperText>\n                </FormControl>\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout password')}\n                    onChange={e => this.props.onChange('nightscoutPass', e.target.value.replace(/[^\\w\\d-_]/g, '_'))}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.props.native.nightscoutPass}\n                    type=\"text\"\n                    margin=\"normal\"\n                />) : null}\n                {this.props.native.nightscout ? (<TextField\n                    style={{marginTop: 3.5}}\n                    label={I18n.t('Nightscout api-secret')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.normalSize}\n                    value={this.calcNightscoutSecret()}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />) : null}\n                <br/>\n                <br/>\n                <div className={this.props.classes.controlElement}>\n                    <TextField\n                        label={I18n.t('Read blood sugar from')}\n                        className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n                        value={this.props.native.amazonAlexaBlood || ''}\n                        type=\"text\"\n                        onChange={e => this.props.onChange('amazonAlexaBlood', e.target.value)}\n                        margin=\"normal\"\n                    />\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab>\n                    <FormControlLabel  className={this.props.classes.controlElement}\n                        control={\n                            <Checkbox\n                                style={{paddingLeft: 30}}\n                                checked={this.props.native.amazonAlexaBloodShortAnswer || false}\n                                onChange={e => this.props.onChange('amazonAlexaBloodShortAnswer', e.target.checked)}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Short answer for blood sugar')}\n                    />\n                </div>\n                <br/>\n                {this.renderToast()}\n                {this.getSelectIdDialog('amazonAlexaBlood')}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({editId: ''})}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editedSmartType: null,\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\n            .then(list => {\n                this.browseTimer && clearTimeout(this.browseTimer);\n                this.browseTimerCount = 0;\n                this.browseTimer = null;\n                if (list && list.error) {\n                    this.setState({message: I18n.t(list.error)});\n                } else {\n                    if (this.waitForUpdateID) {\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                        }\n                        this.waitForUpdateID = null;\n                    }\n                    console.log('BROWSE received.');\n\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\n                }\n            })\n            .catch(e => this.setState({message: I18n.t('Error %s', e)}));\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + (state ? state.val + '/' + state.ack : 'null'));\n        if (state && state.ack === true && state.val === true) {\n            this.devTimer && clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    let editedSmartType = null;\n                    if (!device.additionalApplianceDetails.group) {\n                        editedSmartType = device.additionalApplianceDetails.smartType;\n                    }\n\n                    this.setState({editId: id, editedSmartType, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectTypeSelector(type, onChange) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => onChange(e.target.value === '_' ? '' : e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        return this.renderSelectTypeSelector(type, value => this.onParamsChange(id, undefined, value));\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            try {\n                channels && Object.keys(channels).forEach(chan =>\n                    chan && channels[chan].forEach(el => {\n                        if (this.state.changed.indexOf(el.id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === el.id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    })\n                );\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            const editedSmartType = this.state.editedSmartType;\n\n            this.setState({editId: '', editObjectName: '', lastChanged: id, editedSmartType: null});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, editedSmartType === null ? undefined : editedSmartType, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => {\n                    this.editedSmartName = null;\n                    this.setState({editId: '', editedSmartName: ''});\n                }}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                    {this.state.editedSmartType !== null ? this.renderSelectTypeSelector(this.state.editedSmartType, value => this.setState({editedSmartType: value})) : null}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.setState({showConfirmation: ''})}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                socket={this.props.socket}\n                selected={''}\n                types={['state']}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Input from '@material-ui/core/Input';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\nimport {MdClear as IconClear} from 'react-icons/md';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\r\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\r\n\r\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\r\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\r\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\r\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\r\nimport {FaPalette as IconColor} from 'react-icons/fa';\r\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\r\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\r\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\n\r\nconst colorOn = '#aba613';\r\nconst colorOff = '#444';\r\nconst colorSet = '#00c6ff';\r\nconst colorRGB = '#ff7ee3';\r\nconst colorRead = '#00bc00';\r\nconst CHANGED_COLOR = '#e7000040';\r\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\r\nconst LAST_CHANGED_COLOR = '#b4ffbe';\r\n\r\nconst actionsMapping = {\r\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\r\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\r\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\r\n\r\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\r\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\r\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\r\n\r\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\r\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\r\n\r\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\r\n\r\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\r\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\r\n\r\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\r\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\r\n\r\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\r\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\r\n};\r\n\r\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20,\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    columnDiv: {\r\n        height: 'calc(100% - 40px)',\r\n        overflow: 'auto',\r\n        minWidth: 300\r\n    },\r\n    filter: {\r\n        margin: 0\r\n    },\r\n    button: {\r\n        marginRight: 20\r\n    },\r\n    devLineExpand: {\r\n        marginRight: 10,\r\n    },\r\n    devLineEnabled: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n    },\r\n    devLineEdit: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 50\r\n    },\r\n    devLineDelete: {\r\n        position: 'absolute',\r\n        top: 5,\r\n        right: 0\r\n    },\r\n    devLineName: {\r\n\r\n    },\r\n    devLineNumber:{\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        width: 15,\r\n    },\r\n    editedId: {\r\n        fontStyle: 'italic'\r\n    },\r\n    enumLineSubName:{\r\n        fontStyle: 'italic',\r\n    },\r\n    devLine: {\r\n        height: 48,\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    devLineDescription: {\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    devLineActions: {\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        paddingLeft: 50,\r\n        display: 'inline-block',\r\n    },\r\n    devLineProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    channelLineActions: {\r\n        width: 80\r\n    },\r\n    devLineNameBlock: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 350px)'\r\n    },\r\n    columnHeader: {\r\n        background: theme.palette.primary.light,\r\n        padding: 10,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    devModified: {\r\n        fontStyle: 'italic'\r\n    },\r\n    actionIcon: {\r\n        width: 16\r\n    },\r\n\r\n    devSubLine: {\r\n        position: 'relative',\r\n        height: 48\r\n    },\r\n    devSubLineName: {\r\n        marginLeft: 5,\r\n        marginTop: 14,\r\n        minWidth: 100,\r\n        display: 'inline-block',\r\n        fontSize: 13,\r\n        paddingLeft: 70,\r\n        //width: 'calc(100% - 400px)'\r\n    },\r\n    devSubSubLine:  {\r\n        fontSize: 10,\r\n        fontStyle: 'italic',\r\n        display: 'inline-block',\r\n        marginLeft: 15\r\n    },\r\n    devSubLineSetId:  {\r\n        fontStyle: 'italic',\r\n        display: 'block',\r\n        color: '#999'\r\n    },\r\n    devSubLineByOn: {\r\n        marginLeft: 5\r\n    },\r\n    devSubLineDelete: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 12,\r\n        padding: 0\r\n    },\r\n    devSubLineEdit: {\r\n        position: 'absolute',\r\n        top: 12,\r\n        right: 62,\r\n        padding: 0\r\n    },\r\n    devSubLineTypeTitle: {\r\n        marginTop: 0\r\n    }\r\n});\r\n\r\nclass AlisaDevices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!actionsMapping.translated) {\r\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\r\n            actionsMapping.translated = true;\r\n        }\r\n\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.timerChanged = null;\r\n        this.browseTimer = null;\r\n        this.browseTimerCount = 0;\r\n        this.editedSmartName = '';\r\n\r\n        this.waitForUpdateID = null;\r\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) {\r\n            return;\r\n        }\r\n\r\n        this.lastBrowse = Date.now();\r\n\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n\r\n        this.browseTimer = setTimeout(() => {\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(id, state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.iobID === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.name;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName:smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onAskDelete(deleteId) {\r\n        this.setState({deleteId, showConfirmation: true});\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderActions(dev) {\r\n        // Type\r\n        const actions = [];\r\n        if (!dev.actions) {\r\n            console.log('Something went wrong');\r\n            return null;\r\n        }\r\n\r\n        dev.actions.sort((a, b) => {\r\n            if (a === b) return 0;\r\n            if (a === 'OnOff') return -1;\r\n            if (b === 'OnOff') return 1;\r\n            return 0;\r\n        });\r\n\r\n        Object.keys(actionsMapping).forEach(action => {\r\n            if (dev.actions.indexOf(action) !== -1) {\r\n                const Icon = actionsMapping[action].icon;\r\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\r\n            }\r\n        });\r\n        // add unknown actions\r\n        for (let a = 0; a < dev.actions.length; a++) {\r\n            if (!actionsMapping[dev.actions[a]]) {\r\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\r\n            }\r\n        }\r\n        return actions;\r\n    }\r\n\r\n    onExpand(lineNum) {\r\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\r\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\r\n        if (pos === -1) {\r\n            expanded.push(this.state.devices[lineNum].name);\r\n        } else {\r\n            expanded.splice(pos, 1);\r\n        }\r\n        this.setState({expanded});\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectType(dev, lineNum, id, type) {\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\r\n            ];\r\n            for (let i = 0; i < SMARTTYPES.length; i++) {\r\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\r\n            }\r\n            return (\r\n                <FormControl>\r\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\r\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\r\n                </FormControl>);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    renderChannels(dev, lineNum) {\r\n        const result = [];\r\n        const classes = this.props.classes;\r\n\r\n        const id = dev.main.getId;\r\n        const name = dev.func;\r\n        let background = DEFAULT_CHANNEL_COLOR;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n            background = LAST_CHANGED_COLOR;\r\n        }*/\r\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\r\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\r\n            <div className={classes.devSubSubLine}>\r\n                <div>{dev.main.getId}</div>\r\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\r\n            </div>\r\n\r\n        </div>));\r\n\r\n        dev.attributes.forEach(attr => {\r\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\r\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\r\n                <div className={classes.devSubSubLine}>\r\n                    <div>{attr.getId}</div>\r\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\r\n                </div>\r\n            </div>));\r\n        });\r\n\r\n        /*if (dev.additionalApplianceDetails.group) {\r\n            const channels   = dev.additionalApplianceDetails.channels;\r\n            const names      = dev.additionalApplianceDetails.names;\r\n            const types      = dev.additionalApplianceDetails.byONs;\r\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\r\n\r\n            let c = 0;\r\n            for (const chan in channels) {\r\n                if (channels.hasOwnProperty(chan)) {\r\n                    for (let i = 0; i < channels[chan].length; i++) {\r\n                        const id = channels[chan][i].id;\r\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\r\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\r\n                            background = LAST_CHANGED_COLOR;\r\n                        }\r\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\r\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\r\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\r\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\r\n                            </div>\r\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\r\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\r\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n                        </div>));\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n        }*/\r\n        return result;\r\n    }\r\n\r\n    renderDevice(dev, lineNum) {\r\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\r\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\r\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\r\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\r\n        if (changed) {\r\n            background = CHANGED_COLOR;\r\n        } else if (dev.iobID === this.state.lastChanged) {\r\n            background = LAST_CHANGED_COLOR;\r\n        }\r\n\r\n        //const isComplex = dev.\r\n\r\n        return [\r\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\r\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\r\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\r\n                    {dev.attributes.length ?\r\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\r\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\r\n                </IconButton>\r\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\r\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\r\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\r\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\r\n                </div>\r\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\r\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\r\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\r\n\r\n            </div>),\r\n            expanded ? this.renderChannels(dev, lineNum) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderEditDialog() {\r\n        if (this.state.editId) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => {\r\n                    this.editedSmartName = null;\r\n                    this.setState({editId: '', editedSmartName: ''});\r\n                }}\r\n                aria-labelledby=\"message-dialog-title\"\r\n                aria-describedby=\"message-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\r\n                <DialogContent>\r\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\r\n                    <TextField\r\n                        style={{width: '100%'}}\r\n                        label={I18n.t('Smart name')}\r\n                        onKeyDown={e =>\r\n                            e.keyCode === 13 && this.changeSmartName(e)}\r\n                        onChange={e => this.editedSmartName = e.target.value}\r\n                        defaultValue={this.state.editedSmartName}\r\n                        helperText={I18n.t('You can enter several names divided by comma')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => {\r\n                        this.editedSmartName = null;\r\n                        this.setState({editId: '', editedSmartName: ''});\r\n                    }}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (this.state.showConfirmation) {\r\n            return (<Dialog\r\n                open={true}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onClose={() => this.setState({showConfirmation: ''})}\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                aria-describedby=\"confirmation-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{I18n.t('Are you sure?')}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\r\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return (<DialogSelectID\r\n                key=\"dialogSelectAlisa\"\r\n                prefix={'../..'}\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n\r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => this.informInstance(obj._id))\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderDevices() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        const result = [];\r\n        for (let i = 0; i < this.state.devices.length; i++) {\r\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\r\n            result.push(this.renderDevice(this.state.devices[i], i));\r\n        }\r\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        return (\r\n            <form key=\"alexa\" className={this.props.classes.tab}>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\r\n\r\n                <Input\r\n                    placeholder={I18n.t('Filter')}\r\n                    className={this.state.filter}\r\n                    value={this.state.filter}\r\n                    onChange={e => this.setState({filter: e.target.value})}\r\n                />\r\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\r\n                {this.renderDevices()}\r\n                {this.renderMessage()}\r\n                {this.renderEditDialog()}\r\n                {this.getSelectIdDialog()}\r\n                {this.renderConfirmDialog()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAlisaDevices.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AlisaDevices);\r\n","import React, {Component, forwardRef} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport {MdAdd as IconAdd} from 'react-icons/md';\r\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst styles = () => ({});\r\n\r\nclass GoogleSmartNames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myTableRef =  React.createRef();\r\n        this.state = {\r\n            editedSmartName: '',\r\n            editId: '',\r\n            editObjectName: '',\r\n            deleteId: '',\r\n\r\n            showSelectId: false,\r\n            showConfirmation: '',\r\n            changed: [],\r\n            devices: [],\r\n            message: '',\r\n            filter: '',\r\n            loading: true,\r\n            browse: false,\r\n            expanded: [],\r\n            lastChanged: '',\r\n            columns: [\r\n                {title: 'Id', field: 'id', editable: 'never', cellStyle: {\r\n                    maxWidth: '12rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                }},\r\n                {title: 'Smartnames', field: 'name.nicknames'},\r\n                {title: 'ioBType', field: 'ioType',editable: 'never', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                }},\r\n                {title: 'Type', field: 'type',  lookup: {\r\n                    'action.devices.types.AC_UNIT':         'Air conditioning unit',\r\n                    'action.devices.types.AIRFRESHENER':    'Air Freshener',\r\n                    'action.devices.types.AIRPURIFIER':     'Air purifier',\r\n                    'action.devices.types.AWNING':          'Awning',\r\n                    'action.devices.types.BLINDS':          'Blinds',\r\n                    'action.devices.types.BOILER':          'Boiler',\r\n                    'action.devices.types.CAMERA':          'Camera',\r\n                    'action.devices.types.COFFEE_MAKER':    'Coffee maker',\r\n                    'action.devices.types.CURTAIN':         'Curtain',\r\n                    'action.devices.types.DISHWASHER':      'Dishwasher',\r\n                    'action.devices.types.DOOR':            'Door',\r\n                    'action.devices.types.DRYER':           'Dryer',\r\n                    'action.devices.types.FAN':             'Fan',\r\n                    'action.devices.types.FIREPLACE':       'Fireplace',\r\n                    'action.devices.types.GARAGE':          'Garage',\r\n                    'action.devices.types.GATE':            'Gate',\r\n                    'action.devices.types.HEATER':          'Heater',\r\n                    'action.devices.types.HOOD':            'Hood',\r\n                    'action.devices.types.KETTLE':          'Kettle',\r\n                    'action.devices.types.LIGHT':           'Light',\r\n                    'action.devices.types.LOCK':            'Lock',\r\n                    'action.devices.types.MOP':             'Mop',\r\n                    'action.devices.types.MICROWAVE':       'Microwave',\r\n                    'action.devices.types.OUTLET':          'Outlet',\r\n                    'action.devices.types.OVEN':            'Oven',\r\n                    'action.devices.types.PERGOLA':         'Pergola',\r\n                    'action.devices.types.REFRIGERATOR':    'Refrigerator',\r\n                    'action.devices.types.SCENE':           'Scene',\r\n                    'action.devices.types.SECURITYSYSTEM':  'Security System',\r\n                    'action.devices.types.SENSOR':          'Sensor',\r\n                    'action.devices.types.SHUTTER':         'Shutter',\r\n                    'action.devices.types.SHOWER':          'Shower',\r\n                    'action.devices.types.SPEAKER':         'Speaker',\r\n                    'action.devices.types.SPRINKLER':       'Sprinkler',\r\n                    'action.devices.types.SWITCH':          'Switch',\r\n                    'action.devices.types.THERMOSTAT':      'Thermostat',\r\n                    'action.devices.types.VACUUM':          'Vacuum',\r\n                    'action.devices.types.VALVE':           'Valve',\r\n                    'action.devices.types.WASHER':          'Washer',\r\n                    'action.devices.types.WATERHEATER':     'Water heater',\r\n                    'action.devices.types.WINDOW':          'Window'\r\n                }},\r\n                {title: 'Funktion/Trait', field: 'displayTraits',  lookup: {\r\n                    // 'action.devices.traits.ArmDisarm':   'ArmDisarm',\r\n                    'action.devices.traits.Brightness':     'Brightness',\r\n                    // 'action.devices.traits.CameraStream': 'CameraStream',\r\n                    'action.devices.traits.ColorSetting_temperature': 'ColorSetting_Temperature',\r\n                    'action.devices.traits.ColorSetting_spectrumRGB': 'ColorSetting_RGB',\r\n                    // 'action.devices.traits.Dock':        'Dock',\r\n                    'action.devices.traits.FanSpeed':       'FanSpeed',\r\n                    // 'action.devices.traits.LightEffects': 'LightEffects',\r\n                    // 'action.devices.traits.Locator':     'Locator',\r\n                    'action.devices.traits.LockUnlock':     'LockUnlock',\r\n                    'action.devices.traits.Modes':          'Modes',\r\n                    'action.devices.traits.OnOff':          'OnOff',\r\n                    'action.devices.traits.OpenClose':      'OpenClose',\r\n                    // 'action.devices.traits.RunCycle':    'RunCycle',\r\n                    'action.devices.traits.Scene':          'Scene',\r\n                    // 'action.devices.traits.Sensor':      'Sensor',\r\n                    'action.devices.traits.StartStop':      'StartStop',\r\n                    'action.devices.traits.TemperatureControl_temperatureSetpointCelsius':      'Oven_SetTemp',\r\n                    'action.devices.traits.TemperatureControl_temperatureAmbientCelsius':       'Oven_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatMode':                  'Thermostat_Mode',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureSetpoint':   'Thermostat_SetTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatTemperatureAmbient':    'Thermostat_StatusTemp',\r\n                    'action.devices.traits.TemperatureSetting_thermostatHumidityAmbient':       'Thermostat_StatusHumidity',\r\n                    // 'action.devices.traits.Timer':       'Timer',\r\n                    'action.devices.traits.Toggles':        'Toggles',\r\n                    'action.devices.traits.Volume':         'Volume',\r\n                    }},\r\n\r\n                {title: 'Attributes', field: 'displayAttributes',   cellStyle: {\r\n                        maxWidth: '12rem',\r\n                        overflow: 'hidden',\r\n                        wordBreak: 'break-all'\r\n                    },\r\n                    editComponent: props => (<textarea cols=\"40\" rows=\"20\"\r\n                          value={props.value}\r\n                          onChange={e => props.onChange(e.target.value)}\r\n                        />)\r\n                },\r\n                {title: 'Room', field: 'roomHint', editable: 'never'},\r\n                {title: 'Automatisch', field: 'smartEnum', editable: 'never',cellStyle: {\r\n                    maxWidth: '3rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                }},\r\n                {title: 'Conversation to GH', field: 'displayConv2GH',  cellStyle: {\r\n                        maxWidth: '4rem',\r\n                        overflow: 'hidden',\r\n                        wordBreak: 'break-all'\r\n                    },\r\n                    editComponent: props => (\r\n                        <div>Conversation to Google Home = function(value)&#123; <br/>\r\n                            <textarea cols=\"40\" rows=\"20\"\r\n                                value={props.value}\r\n                                onChange={e => props.onChange(e.target.value)}\r\n                            />\r\n                            &#125;\r\n                        </div>\r\n                    )\r\n                },\r\n                { title: 'Conversation to ioB', field: 'displayConv2iob', cellStyle: {\r\n                    maxWidth: '4rem',\r\n                    overflow: 'hidden',\r\n                    wordBreak: 'break-all'\r\n                    },  \r\n                    editComponent: props => (\r\n                        <div>Conversation to ioBroker = function(value)&#123; <br/>\r\n                            <textarea cols=\"40\" rows=\"20\"\r\n                                value={props.value}\r\n                                onChange={e => props.onChange(e.target.value)}\r\n                            />\r\n                            &#125;\r\n                        </div>\r\n                    )},\r\n              ]\r\n        };\r\n\r\n        this.timerChanged        = null;\r\n        this.browseTimer         = null;\r\n        this.browseTimerCount    = 0;\r\n        this.editedSmartName     = '';\r\n\r\n        this.waitForUpdateID     = null;\r\n        this.onReadyUpdateBound  = this.onReadyUpdate.bind(this);\r\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\r\n\r\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\r\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\r\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\r\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\r\n                } else {\r\n                    this.browse();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    browse(isIndicate) {\r\n        if (Date.now() - this.lastBrowse < 500) return;\r\n        this.lastBrowse = Date.now();\r\n        if (isIndicate) {\r\n            this.setState({loading: true, browse: true});\r\n        } else {\r\n            this.setState({browse: true});\r\n        }\r\n        console.log('Send BROWSE!');\r\n        this.browseTimer = setTimeout(() => {\r\n            console.log('Browse timeout!');\r\n            this.browseTimer = null;\r\n            this.browseTimerCount++;\r\n            if (this.browseTimerCount < 5) {\r\n                this.browse(isIndicate);\r\n            } else {\r\n                this.setState({message: I18n.t('Cannot read devices!')});\r\n            }\r\n        }, 10000);\r\n\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseGH', null)\r\n            .then(list => {\r\n                this.browseTimer && clearTimeout(this.browseTimer);\r\n                this.browseTimerCount = 0;\r\n                this.browseTimer = null;\r\n\r\n                if (list && list.error) {\r\n                    this.setState({message: I18n.t(list.error)});\r\n                } else {\r\n                    if (this.waitForUpdateID) {\r\n                        if (!this.onEdit(this.waitForUpdateID, list)) {\r\n                            this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\r\n                        }\r\n                        this.waitForUpdateID = null;\r\n                    }\r\n                    console.log('BROWSE received.');\r\n\r\n                    this.setState({devices: list, loading: false, changed: [], browse: false});\r\n                }\r\n            });\r\n    }\r\n\r\n    onReadyUpdate(id, state) {\r\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\r\n        if (state && state.ack === true && state.val === true) {\r\n            if (this.devTimer) clearTimeout(this.devTimer);\r\n            this.devTimer = setTimeout(() => {\r\n                this.devTimer = null;\r\n                this.browse();\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    onResultUpdate(state) {\r\n        state && state.ack === true && state.val && this.setState({message: state.val});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesGH`, this.onReadyUpdateBound);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\r\n        if (this.timerChanged) {\r\n            clearTimeout(this.timerChanged);\r\n            this.timerChanged = null;\r\n        }\r\n    }\r\n\r\n    informInstance(id) {\r\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\r\n    }\r\n\r\n    addChanged(id, cb) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        if (changed.indexOf(id) === -1) {\r\n            changed.push(id);\r\n            this.setState({changed}, () => cb && cb());\r\n        } else {\r\n            cb && cb();\r\n        }\r\n    }\r\n\r\n    removeChanged(id) {\r\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\r\n        const pos = changed.indexOf(id);\r\n\r\n        if (pos !== -1) {\r\n            changed.splice(pos, 1);\r\n            this.setState({changed});\r\n        }\r\n    }\r\n\r\n    onEdit(id, devices) {\r\n        devices = devices || this.state.devices;\r\n        const device = devices.find(dev => dev.id === id);\r\n        if (device) {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    let smartName = device.common && device.common.smartName ? device.common.smartName : device._id;\r\n                    if (typeof smartName === 'object' && smartName) {\r\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\r\n                    }\r\n                    this.editedSmartName = smartName;\r\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\r\n                });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onDelete() {\r\n        let id = this.state.deleteId;\r\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\r\n\r\n                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                    this.timerChanged = setTimeout(() => {\r\n                        this.setState({lastChanged: ''});\r\n                        this.timerChanged = null;\r\n                    }, 30000);\r\n\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderSelectByOn(id, type) {\r\n        // type = '-', 'stored', false or number [5-100]\r\n        if (type !== false) {\r\n            const items = [\r\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\r\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\r\n            ];\r\n            for (let i = 5; i <= 100; i += 5) {\r\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\r\n            }\r\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\r\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\r\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\r\n            </FormControl>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onParamsChange(id, byON, type) {\r\n        this.addChanged(id, () => {\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (this.state.lastChanged !== id) {\r\n                        this.setState({lastChanged: id});\r\n                        this.timerChanged && clearTimeout(this.timerChanged);\r\n                        this.timerChanged = setTimeout(() => {\r\n                            this.setState({lastChanged: ''});\r\n                            this.timerChanged = null;\r\n                        }, 30000);\r\n                    }\r\n\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    onGHParamsChange(newData, oldData) {\r\n        this.addChanged(newData.id, () => {\r\n            this.props.socket.getObject(newData.id)\r\n                .then(obj => {\r\n                    if (!obj || !obj.common) {\r\n                        return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, newData.id)});\r\n                    }\r\n                    //  id, newData.type, newData.displayTraits, newData.displayAttributes\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n\r\n                    if (JSON.stringify(newData.displayTraits) !== JSON.stringify(oldData.displayTraits)) {\r\n                        if (!Array.isArray(newData.displayTraits)) {\r\n                            newData.displayTraits=[newData.displayTraits]\r\n                        }\r\n\r\n                        obj.common.smartName.ghTraits = newData.displayTraits;\r\n                    }\r\n                    if (newData.type !== oldData.type) {\r\n                        obj.common.smartName.ghType = newData.type;\r\n                    }\r\n                    if (newData.displayAttributes !== oldData.displayAttributes ) {\r\n                        obj.common.smartName.ghAttributes = newData.displayAttributes;\r\n                        try {\r\n                            if (obj.common.smartName.ghAttributes) {\r\n                                JSON.parse(obj.common.smartName.ghAttributes)\r\n                            }\r\n                        } catch (error) {\r\n                            this.setState({message: I18n.t('Attributes has not correct JSON format.')});\r\n                        }\r\n                    }\r\n                    if (newData.conv2GH) {\r\n                        obj.common.smartName.ghConv2GH = newData.displayConv2GH;\r\n                    }\r\n                    if (newData.conv2iob) {\r\n                        obj.common.smartName.ghConv2iob = newData.displayConv2iob;\r\n                    }\r\n                    return this.props.socket.setObject(newData.id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(newData.id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    changeSmartName(e) {\r\n        e && e.preventDefault();\r\n        // Check if the name is duplicate\r\n        this.addChanged(this.state.editId, () => {\r\n            const id = this.state.editId;\r\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\r\n\r\n            this.timerChanged && clearTimeout(this.timerChanged);\r\n            this.timerChanged = setTimeout(() => {\r\n                this.setState({lastChanged: ''});\r\n                this.timerChanged = null;\r\n            }, 30000);\r\n\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                    return this.props.socket.setObject(id, obj);\r\n                })\r\n                .then(() => {\r\n                    // update obj\r\n                    this.informInstance(id);\r\n                })\r\n                .catch(err => this.props.onError(err));\r\n        });\r\n    }\r\n\r\n    getSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return (<DialogSelectID\r\n                key=\"dialogSelectGoogle\"\r\n                prefix={'../..'}\r\n                socket={this.props.socket}\r\n                selected={''}\r\n                types={['state']}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected) => {\r\n                    this.setState({showSelectId: false});\r\n\r\n                    this.props.socket.getObject(selected)\r\n                        .then(obj => {\r\n                            if (obj) {\r\n                                if (!obj.common) {\r\n                                    return this.setState({message: I18n.t(`Object %s is invalid. No common found.`, selected)});\r\n                                }\r\n\r\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\r\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\r\n                                this.addChanged(obj._id);\r\n                                this.waitForUpdateID = obj._id;\r\n\r\n                                if (this.state.lastChanged !== obj._id) {\r\n                                    this.setState({lastChanged: obj._id});\r\n                                    this.timerChanged && clearTimeout(this.timerChanged);\r\n                                    this.timerChanged = setTimeout(() => {\r\n                                        this.setState({lastChanged: ''});\r\n                                        this.timerChanged = null;\r\n                                    }, 30000);\r\n                                }\r\n                                \r\n                                if (!obj.common.smartName) {\r\n                                    obj.common.smartName = {ghType: 'action.devices.types.LIGHT'};\r\n                                    obj.common.smartName = {ghTraits: ['action.devices.traits.OnOff']}\r\n                                } else {\r\n                                    obj.common.smartName.ghType = 'action.devices.types.LIGHT';\r\n                                    obj.common.smartName.ghTraits = ['action.devices.traits.OnOff'];\r\n                                }\r\n                                \r\n                                this.props.socket.setObject(obj._id, obj)\r\n                                    .then(() => {\r\n                                        this.informInstance(obj._id);\r\n                                        this.setState({message: I18n.t('Please add type and trait to complete the Google Home state.')});\r\n                                    })\r\n                                    .catch(err => this.setState({message: err}));\r\n                            } else {\r\n                                this.setState({message: I18n.t('Invalid ID')});\r\n                            }\r\n                        });\r\n                }}\r\n            />);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<CircularProgress  key=\"alexaProgress\" />);\r\n        }\r\n\r\n        const manualModeHint = I18n.t('manualModeHint');\r\n\r\n        return (\r\n            <form key=\"gh\" className={this.props.classes.tab}>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\r\n                <Fab \r\n                style ={{marginLeft:\"1rem\"}} size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\r\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\r\n\r\n                {this.renderMessage()}\r\n                {this.getSelectIdDialog()}\r\n                <div style={{marginTop: \"4rem\", display: \"flex\"}}>\r\n                    <div style={{flex: \"50%\"}}>\r\n                        <div style={{fontWeight:\"bold\"}}>{I18n.t('Auto Mode')}</div>\r\n                        <div style={{marginTop: \"0.8rem\", marginRight: \"0.8rem\",}}>{I18n.t('To auto detect devices please assign a room and function to the channel if no channel available than assign to a device. Not only to the state or device. And enable them under SmartEnum/Intelligente Aufzählung')}</div>\r\n                    </div>\r\n                    <div style={{flex: \"50%\"}}>\r\n                        <div style={{fontWeight: \"bold\"}}>{I18n.t('Manual Mode')}</div>\r\n                        <span>{Utils.renderTextWithA(manualModeHint)}</span>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div style={{flex: \"100%\"}}>\r\n                    <div style={{fontWeight: \"bold\"}}>{Utils.renderTextWithA(I18n.t(\"For help use this forum <a target='_blank' rel='noopener noreferrer' href='https://forum.iobroker.net/topic/24061/google-home-assistant-iobroker-einrichten-nutzen/'>thread</a>\"))}</div>\r\n                </div>\r\n                <div>\r\n                    <MaterialTable\r\n                        style={{marginTop: '1rem', display: 'inline-block'}}\r\n                        title=\"\"\r\n                        tableRef={this.myTableRef}\r\n                        onRowClick={(e, rowData) => {\r\n                            this.myTableRef.current.onTreeExpandChanged(rowData.tableData.path, rowData)\r\n                        }}\r\n                        columns={this.state.columns}\r\n                        parentChildData={(row, rows) => {\r\n                            const result = rows.find((element) => {\r\n                                if (element.id && row.parentId && element.id === row.parentId) {\r\n                                    console.log(row.parentId);\r\n                                    return true;\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            });\r\n                            console.log(result);\r\n                            return result;\r\n                        }}\r\n                        data={this.state.devices}\r\n                        icons={tableIcons}\r\n                        isLoading={this.state.browse }\r\n                        options={{\r\n                            actionsColumnIndex: -1,\r\n                            paging: false,\r\n                            rowStyle: (rowData) => {\r\n                                let background = this.props.themeType === 'dark' ? '#000' : '#FFF';\r\n                                if (rowData.smartEnum) {\r\n                                    background = this.props.themeType === 'dark' ? '#1b1e18' : '#F7FFEA';\r\n                                }\r\n                                if (rowData.ioType === 'channel' || rowData.ioType === 'device') {\r\n                                    if (rowData.smartEnum) {\r\n                                        background = this.props.themeType === 'dark' ? '#3d3d3d' : '#eafff2';\r\n                                    } else {\r\n                                        background = this.props.themeType === 'dark' ? '#3e4b4b' : '#E2FFFF';\r\n                                    }\r\n                                }\r\n\r\n                                if  (this.state.selectedRow && this.state.selectedRow.tableData.id === rowData.tableData.id) {\r\n                                    background = this.props.themeType === 'dark' ? '#212121' : '#EEE';\r\n                                }\r\n\r\n                                return {backgroundColor:  background}\r\n                              }\r\n                          }}\r\n\r\n                        editable={{\r\n                            onRowUpdate: (newData, oldData) => {\r\n                                if (newData.name.nicknames && Array.isArray(newData.name.nicknames)) {\r\n                                    newData.name.nicknames = newData.name.nicknames.join(',');\r\n                                }\r\n                                this.editedSmartName = newData.name.nicknames;\r\n                                this.setState({editId: newData.id});\r\n\r\n                                return new Promise(resolve => {\r\n                                    this.setState({browse: true});\r\n\r\n                                    setTimeout(() => {\r\n                                        if (!newData.type || !newData.displayTraits) {\r\n                                            this.setState({message: I18n.t('Please add action and trait to complete the Google Home state.')});\r\n                                        }\r\n\r\n                                        this.onGHParamsChange(newData, oldData);\r\n                                        resolve();\r\n                                        const devices = [...this.state.devices];\r\n                                        devices[devices.indexOf(oldData)] = newData;\r\n                                        this.setState({ ...this.state, devices});\r\n                                    }, 500);\r\n                                });\r\n                            },\r\n                            onRowDelete: (oldData) => {\r\n                                // if smartenum set smartname on false if not delete/reset smartname content\r\n                                if (oldData.smartEnum=== 'X') {\r\n                                    this.setState({deleteId: oldData.id});\r\n                                } else {\r\n                                    this.props.socket.getObject(oldData.id)\r\n                                        .then(obj => {\r\n                                            if (obj && obj.common && obj.common['smartName']) {\r\n                                                delete obj.common['smartName']['ghTraits'];\r\n                                                delete obj.common['smartName']['ghType'];\r\n                                                delete obj.common['smartName']['ghAttributes'];\r\n                                            }\r\n                                            return this.props.socket.setObject(oldData.id, obj);\r\n                                        });\r\n                                }\r\n\r\n                                return new Promise(resolve => {\r\n                                    setTimeout(() => {\r\n                                        if (this.state.deleteId) {\r\n                                            this.onDelete();\r\n                                        } else {\r\n                                            this.informInstance(oldData.id);\r\n                                        }\r\n                                        resolve();\r\n                                        const devices = [...this.state.devices];\r\n                                        devices.splice(devices.indexOf(oldData), 1);\r\n                                        this.setState({ ...this.state, devices });\r\n                                    }, 600);\r\n                                })\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nGoogleSmartNames.propTypes = {\r\n    common:      PropTypes.object.isRequired,\r\n    native:      PropTypes.object.isRequired,\r\n    instance:    PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError:     PropTypes.func,\r\n    onLoad:      PropTypes.func,\r\n    onChange:    PropTypes.func,\r\n    socket:      PropTypes.object.isRequired,\r\n    themeType:   PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GoogleSmartNames);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabExtended from './Tabs/Extended';\r\nimport TabServices from './Tabs/Services';\r\nimport TabEnums from './Tabs/Enums';\r\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\r\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\r\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'enums') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'alexa') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'google') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'alisa') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'extended') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 2 + offset;\r\n        } else\r\n        if (tab === 'services') {\r\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\r\n            return 3 + offset;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return (\r\n            <MuiThemeProvider theme={this.state.theme}>\r\n                <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                            <Tab label={I18n.t('Options')} data-name=\"options\" />\r\n                            <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\r\n                            {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\r\n                            {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\r\n                            {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\r\n                            <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\r\n                            <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\r\n                        </Tabs>\r\n                    </AppBar>\r\n\r\n                    <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                        {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                            key=\"options\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            onLoad={native => this.onLoadConfig(native)}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            changed={this.state.changed}\r\n                            onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                        />)}\r\n                        {this.state.selectedTab === 'enums' && (<TabEnums\r\n                            key=\"enums\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                        />)}\r\n                        {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\r\n                            key=\"alexa\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                            {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\r\n                            key=\"google\"\r\n                            themeType={this.state.themeType}\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                        {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\r\n                            key=\"alisa\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            adapterName={this.adapterName}\r\n                            instance={this.instance}\r\n                        />)}\r\n                        {this.state.selectedTab === 'extended' && (<TabExtended\r\n                            key=\"extended\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                        />)}\r\n                        {this.state.selectedTab === 'services' && (<TabServices\r\n                            key=\"services\"\r\n                            common={this.common}\r\n                            socket={this.socket}\r\n                            native={this.state.native}\r\n                            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                            instance={this.instance}\r\n                            adapterName={this.adapterName}\r\n                            onShowError={error => this.showError(error)}\r\n                            onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                        />)}\r\n                    </div>\r\n                    {this.renderError()}\r\n                    {this.renderSaveCloseButtons()}\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'iot';\r\nlet themeName = Utils.getThemeName();\r\n\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}