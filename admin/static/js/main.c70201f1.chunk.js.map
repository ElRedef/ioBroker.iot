{"version":3,"sources":["Tabs/Logo.js","Tabs/Options.js","Tabs/Extended.js","Tabs/Services.js","Tabs/Enums.js","Tabs/AlexaSmartNames.js","Tabs/AlisaSmartNames.js","Tabs/GoogleSmartNames.js","App.js","serviceWorker.js","index.js"],"names":["Logo","evt","_this","this","f","target","files","r","window","FileReader","onload","e","contents","result","json","JSON","parse","native","common","name","props","onError","I18n","t","onLoad","toString","readAsText","alert","_id","instance","stringify","news","titleLang","desc","generateFile","_this2","input","document","createElement","setAttribute","addEventListener","handleFileSelect","click","_this3","react_default","a","icon","src","className","classes","logo","alt","readme","Fab","size","color","aria-label","buttons","onClick","open","focus","index_esm","title","upload","fa_index_esm","download","filename","obj","el","encodeURIComponent","style","display","body","appendChild","removeChild","Component","withStyles","theme","marginRight","marginTop","float","padding","width","Options","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","inAction","forceUserCreate","showHint","toast","isInstanceAlive","socket","getObject","concat","adapterName","then","getState","setState","enabled","val","attr","type","TextField","label","value","onChange","margin","Card","card","CardActionArea","CardMedia","media","image","CardContent","Utils","renderTextWithA","CardActions","textAlign","Button","ack","Promise","resolve","setObject","catch","err","_this4","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton","key","close","_this5","Message_default","text","_this6","FormControlLabel","assign","paddingTop","controlElement","control","Checkbox","checked","_this7","tab","Tabs_Logo","errorText","column","columnSettings","renderInput","renderCheckbox","googleHome","newVal","variant","button","disabled","resetCerts","onForceUserCreate","fontWeight","columnLogo","renderCard","renderHint","renderToast","minHeight","minWidth","maxWidth","height","verticalAlign","ExtendedOptions","showSelectId","options","FormControl","Select","Input","map","item","MenuItem","FormHelperText","SelectID_default","prefix","connection","selected","statesOnly","onOk","renderSelect","marginLeft","getSelectIdDialog","marginBottom","Services","running","text2commandList","addValue","onKeyChangedBound","onKeyChanged","bind","assertThisInitialized","getAdapterInstances","list","replace","subscribeState","unsubscribeState","showError","chips","split","filter","pos","indexOf","splice","join","push","chipsDiv","onKeyUp","keyCode","onChipsAdd","trim","word","Chip","onDelete","onChipsDelete","chip","_this8","reissueUrlKey","fullSize","login","readOnly","copyToClipboard","CopyContentImg","renderChips","text2command","border","borderRadius","Enums","editId","editedSmartName","funcs","rooms","changed","loading","onEnumUpdateBound","onEnumUpdate","getEnums","res","keys","forEach","match","subscribeObject","unsubscribeObject","removeChanged","updateObjInState","sendTo","i","length","find","smartName","getSmartNameFromObj","disableSmartName","noCommon","removeSmartName","addChanged","informInstance","setTimeout","getLanguage","en","getObjectNameFromObj","language","enumLine","background","enumLineName","opacity","enumLineSubName","enumLineId","Switch","enumLineEnabled","onToggleEnum","enumLineEdit","onEdit","fontSize","renderEnum","startsWith","newObj","updateSmartName","undefined","Dialog","fullWidth","handleOk","aria-labelledby","DialogTitle","DialogContent","helperText","DialogActions","changeSmartName","autoFocus","CircularProgress","columnHeader","columnDiv","renderEnums","renderMessage","renderEditDialog","overflow","position","right","top","fontStyle","palette","primary","light","contrastText","actionsMapping","turnOn","IconOn","turnOff","setTargetTemperature","IconTemperature","incrementTargetTemperature","IconUp","decrementTargetTemperature","IconDown","setPercentage","IconPercentage","incrementPercentage","decrementPercentage","setColor","IconColor","setColorTemperature","IconBulb","incrementColorTemperature","decrementColorTemperature","getTargetTemperature","IconThermometer","getTemperatureReading","setLockState","IconLock","getLockState","SMARTTYPES","AlexaSmartNames","translated","editObjectName","deleteId","showConfirmation","devices","browse","expanded","lastChanged","timerChanged","browseTimer","browseTimerCount","waitForUpdateID","onReadyUpdateBound","onReadyUpdate","onResultUpdateBound","onResultUpdate","isIndicate","Date","now","lastBrowse","console","log","clearTimeout","devTimer","cb","device","dev","additionalApplianceDetails","friendlyNames","friendlyName","actions","sort","b","Icon","actionIcon","lineNum","items","devSubLineByOn","devSubLineByOnSelect","onParamsChange","devSubLineTypeTitle","byON","_this9","_this10","group","channels","names","types","byONs","smarttypes","smartTypes","c","chan","hasOwnProperty","_loop","devSubLine","devLineActions","channelLineActions","renderActions","devSubLineName","devSubSubLineName","renderSelectType","renderSelectByOn","devSubLineDelete","onAskDelete","smartType","_this11","nameModified","devModified","devCount","ch","devLine","devLineNumber","devLineExpand","onExpand","Badge","badgeContent","devLineNameBlock","devLineName","devLineDescription","friendlyDescription","devLineProgress","devLineEdit","devLineDelete","renderChannels","_this12","_this13","preventDefault","_this14","editedId","onKeyDown","defaultValue","_this15","_this16","toLowerCase","renderDevice","_this17","placeholder","renderDevices","renderConfirmDialog","devLineEnabled","paddingLeft","left","devSubLineEdit","OnOff","Brightness","RGB","AlisaDevices","iobID","main","getId","func","toUpperCase","devSubSubLine","setId","devSubLineSetId","attributes","description","GoogleSmartNames","traits","App","extendedProps","objectSpread","encryptedFields","translations","require","de","ru","pt","nl","fr","it","es","pl","zh-cn","selectedTab","amazonAlexa","yandexAlisa","loaded","AppBar","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","Tabs_Options","onLoadConfig","updateNativeValue","Tabs_Enums","Tabs_AlexaSmartNames","Tabs_GoogleSmartNames","AlisaSmartNames","Extended","Tabs_Services","onShowError","error","renderError","renderSaveCloseButtons","Loader_default","themeType","GenericApp","root","Boolean","location","hostname","build","ReactDOM","render","MuiThemeProvider","createTheme","src_App","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"m/tGAuBMA,2LAeeC,GAAK,IAAAC,EAAAC,KACZC,EAAIH,EAAII,OAAOC,MAAM,GAC3B,GAAIF,EAAG,CACH,IAAMG,EAAI,IAAIC,OAAOC,WACrBF,EAAEG,OAAS,SAAAC,GACP,IAAMC,EAAWD,EAAEN,OAAOQ,OAC1B,IACI,IAAMC,EAAOC,KAAKC,MAAMJ,GACpBE,EAAKG,QAAUH,EAAKI,OAChBJ,EAAKI,OAAOC,OAASjB,EAAKkB,MAAMF,OAAOC,KACvCjB,EAAKkB,MAAMC,QAAQC,IAAKC,EAAE,cAAeT,EAAKI,OAAOC,OAErDjB,EAAKkB,MAAMI,OAAOV,EAAKG,QAG3Bf,EAAKkB,MAAMC,QAAQC,IAAKC,EAAE,kBAEhC,MAAOZ,GACLT,EAAKkB,MAAMC,QAAQV,EAAEc,cAG7BlB,EAAEmB,WAAWtB,QAEbuB,MAAM,+DAKV,IAAMd,EAAS,CACXe,IAAK,kBAAoBzB,KAAKiB,MAAMF,OAAOC,KAAO,IAAMhB,KAAKiB,MAAMS,SACnEX,OAAQH,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKiB,MAAMF,SAC7CD,OAAQd,KAAKiB,MAAMH,QAGnBJ,EAAOK,OAAOa,aACPlB,EAAOK,OAAOa,KAErBlB,EAAOK,OAAOc,kBACPnB,EAAOK,OAAOc,UAErBnB,EAAOK,OAAOe,aACPpB,EAAOK,OAAOe,KAIzBjC,EAAKkC,aAAarB,EAAOe,IAAM,QAASf,oCAGnC,IAAAsB,EAAAhC,KACCiC,EAAQ5B,OAAO6B,SAASC,cAAc,SAC5CF,EAAMG,aAAa,OAAQ,QAC3BH,EAAMG,aAAa,KAAM,SACzBH,EAAMG,aAAa,UAAW,GAC9BH,EAAMI,iBAAiB,SAAU,SAAA7B,GAAC,OAAIwB,EAAKM,iBAAiB9B,EAAG,gBAAW,GACzEyB,EAAMM,yCAGF,IAAAC,EAAAxC,KACL,OAAQyC,EAAAC,EAAAP,cAAA,WACHnC,KAAKiB,MAAMF,OAAO4B,MAASF,EAAAC,EAAAP,cAAA,OAAKS,IAAK5C,KAAKiB,MAAMF,OAAO4B,KAAME,UAAW7C,KAAKiB,MAAM6B,QAAQC,KAAMC,IAAI,SACrGhD,KAAKiB,MAAMF,OAAOkC,QACdR,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,OAAOR,UAAW7C,KAAKiB,MAAM6B,QAAQQ,QAASC,QAAS,WACrFlD,OAAOmD,KAAKhB,EAAKvB,MAAMF,OAAOkC,OAAQ,UAC9CQ,UACLhB,EAAAC,EAAAP,cAACuB,EAAA,cAAD,OACPjB,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,cAAcR,UAAW7C,KAAKiB,MAAM6B,QAAQQ,QAASK,MAAOxC,IAAKC,EAAE,gCAAiCmC,QAAS,kBAAMf,EAAKoB,WAAUnB,EAAAC,EAAAP,cAAC0B,EAAA,aAAD,OAC/KpB,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,cAAcR,UAAW7C,KAAKiB,MAAM6B,QAAQQ,QAASK,MAAOxC,IAAKC,EAAE,8BAA+BmC,QAAS,kBAAMf,EAAKsB,aAAYrB,EAAAC,EAAAP,cAAC0B,EAAA,eAAD,+CA/EnKE,EAAUC,GAC1B,IAAMC,EAAK5D,OAAO6B,SAASC,cAAc,KACzC8B,EAAG7B,aAAa,OAAQ,uCAAyC8B,mBAAmBtD,KAAKe,UAAUqC,EAAK,KAAM,KAC9GC,EAAG7B,aAAa,WAAY2B,GAE5BE,EAAGE,MAAMC,QAAU,OACnB/D,OAAO6B,SAASmC,KAAKC,YAAYL,GAEjCA,EAAG1B,QAEHlC,OAAO6B,SAASmC,KAAKE,YAAYN,UAZtBO,aA8FJC,cA1GA,SAAAC,GAAK,MAAK,CACrBpB,QAAS,CACLqB,YAAa,EACbC,UAAW,EACXC,MAAO,SAEX9B,KAAM,CACF+B,QAAS,EACTC,MAAO,MAkGAN,CAAmB5E,oBC9D5BmF,cACF,SAAAA,EAAY/D,GAAO,IAAAlB,EAAA,OAAAkF,OAAAC,EAAA,EAAAD,CAAAjF,KAAAgF,IACfjF,EAAAkF,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAArF,KAAMiB,KAEDqE,MAAQ,CACTC,UAAU,EACVC,iBAAiB,EACjBC,UAAU,EACVC,MAAO,GACPC,iBAAiB,GAGrB5F,EAAKkB,MAAM2E,OAAOC,UAAlB,kBAAAC,OAA8C/F,EAAKkB,MAAM8E,YAAzD,KAAAD,OAAwE/F,EAAKkB,MAAMS,WAAYsE,KAAK,SAAAhC,GAAG,OACnGjE,EAAKkB,MAAM2E,OAAOK,SAAlB,kBAAAH,OAA6C/F,EAAKkB,MAAM8E,YAAxD,KAAAD,OAAuE/F,EAAKkB,MAAMS,SAAlF,WAAoGsE,KAAK,SAAAV,GAAK,OAC1GvF,EAAKmG,SAAS,CAACP,gBAAiB3B,GAAOA,EAAIjD,QAAUiD,EAAIjD,OAAOoF,SAAWb,GAASA,EAAMc,UAbnFrG,2EAiBP4D,EAAO0C,EAAMC,GAAM,IAAAtE,EAAAhC,KAC3B,OAAQyC,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACJC,MAAOrF,IAAKC,EAAEuC,GACdd,UAAW7C,KAAKiB,MAAM6B,QAAQb,MAC9BwE,MAAOzG,KAAKiB,MAAMH,OAAOuF,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAlG,GAAC,OAAIwB,EAAKf,MAAMyF,SAASL,EAAM7F,EAAEN,OAAOuG,QAClDE,OAAO,gDAKX,OAAQlE,EAAAC,EAAAP,cAACyE,EAAA,EAAD,CAAM/D,UAAW7C,KAAKiB,MAAM6B,QAAQ+D,MACxCpE,EAAAC,EAAAP,cAAC2E,EAAA,EAAD,KACIrE,EAAAC,EAAAP,cAAC4E,EAAA,EAAD,CACIlE,UAAW7C,KAAKiB,MAAM6B,QAAQkE,MAC9BC,MAAM,gBACNtD,MAAM,eAEVlB,EAAAC,EAAAP,cAAC+E,EAAA,EAAD,KAAcC,IAAMC,gBAAgBjG,IAAKC,EAAE,kBAE/CqB,EAAAC,EAAAP,cAACkF,EAAA,EAAD,CAAalD,MAAO,CAACmD,UAAW,WAC5B7E,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQpE,KAAK,QAAQC,MAAM,UAAUe,MAAO,CAACmD,UAAW,UAAW/D,QAAS,WAC5DlD,OAAOmD,KAAK,qEAAsE,UAC1FC,UACJtC,IAAKC,EAAE,kDAKV,IAAAoB,EAAAxC,KACTA,KAAKkG,SAAS,CAACX,UAAU,IACzBvF,KAAKiB,MAAM2E,OAAOM,SAAS,OAASlG,KAAKiB,MAAMS,SAAW,iBAAkB,CAAC0E,IAAK,GAAIoB,KAAK,IACtFxB,KAAK,kBAAMxD,EAAKvB,MAAM2E,OAAOM,SAAS,OAAS1D,EAAKvB,MAAMS,SAAW,YAAa,CAAC0E,IAAK,GAAIoB,KAAK,MACjGxB,KAAK,kBAAMxD,EAAKvB,MAAM2E,OAAOM,SAAS,OAAS1D,EAAKvB,MAAMS,SAAW,gBAAiB,CAAC0E,IAAK,GAAIoB,KAAK,MACrGxB,KAAK,kBAAMxD,EAAKvB,MAAM2E,OAAOM,SAAS,OAAS1D,EAAKvB,MAAMS,SAAW,qBAAsB,CAAC0E,IAAK,GAAIoB,KAAK,MAC1GxB,KAAK,WACF,OAAIxD,EAAK8C,MAAME,gBACJhD,EAAKvB,MAAM2E,OAAOM,SAAS,OAAS1D,EAAKvB,MAAMS,SAAW,yBAA0B,CAAC0E,KAAK,EAAMoB,KAAK,IAErGC,QAAQC,YAItB1B,KAAK,kBAAMxD,EAAKvB,MAAM2E,OAAOC,UAAU,sBAAwBrD,EAAKvB,MAAMS,YAC1EsE,KAAK,SAAAhC,GACF,OAAKA,GAAQA,EAAIjD,QAAWiD,EAAIjD,OAAOoF,QAK5B3D,EAAKvB,MAAM2E,OAAO+B,UAAU,sBAAwBnF,EAAKvB,MAAMS,SAAUsC,GAHzEyD,QAAQC,YAMtB1B,KAAK,kBAAMxD,EAAK0D,SAAS,CAACR,MAAOvE,IAAKC,EAAE,gDACxCwG,MAAM,SAAAC,GAAG,OAAIrF,EAAKvB,MAAMC,QAAQ2G,KAChC7B,KAAK,kBAAMxD,EAAK0D,SAAS,CAACX,UAAU,kDAIzCvF,KAAKkG,SAAS,CAACV,iBAAkBxF,KAAKsF,MAAME,gBAAiBC,UAAWzF,KAAKsF,MAAME,wDAGzE,IAAAsC,EAAA9H,KACV,OAAKA,KAAKsF,MAAMI,MAEZjD,EAAAC,EAAAP,cAAC4F,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB1E,MAAM,EACN2E,iBAAkB,IAClBC,QAAS,kBAAMN,EAAK5B,SAAS,CAACR,MAAO,MACrC2C,aAAc,CACVC,mBAAoB,cAExBC,QAAS9F,EAAAC,EAAAP,cAAA,QAAMqG,GAAG,cAAcxI,KAAKsF,MAAMI,OAC3C+C,OAAQ,CACJhG,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CACIC,IAAI,QACJtF,aAAW,QACXD,MAAM,UACNP,UAAW7C,KAAKiB,MAAM6B,QAAQ8F,MAC9BrF,QAAS,kBAAMuE,EAAK5B,SAAS,CAACR,MAAO,OAErCjD,EAAAC,EAAAP,cAACuB,EAAA,QAAD,UAtBc,0CA4BrB,IAAAmF,EAAA7I,KACT,OAAIA,KAAKsF,MAAMG,SACHhD,EAAAC,EAAAP,cAAC2G,EAAApG,EAAD,CAASqG,KAAM5H,IAAKC,EAAE,+EAAgFgH,QAAS,kBAAMS,EAAK3C,SAAS,CAACT,UAAU,OAE/I,4CAIA9B,EAAO0C,EAAMlC,GAAO,IAAA6E,EAAAhJ,KAC/B,OAAQyC,EAAAC,EAAAP,cAAC8G,EAAA,EAAD,CAAkBN,IAAKtC,EAAMlC,MAAOc,OAAOiE,OAAO,CAACC,WAAY,GAAIhF,GAAQtB,UAAW7C,KAAKiB,MAAM6B,QAAQsG,eAC3GC,QACI5G,EAAAC,EAAAP,cAACmH,EAAA,EAAD,CACIC,QAASvJ,KAAKiB,MAAMH,OAAOuF,GAC3BK,SAAU,kBAAMsC,EAAK/H,MAAMyF,SAASL,GAAO2C,EAAK/H,MAAMH,OAAOuF,KAC7DjD,MAAM,YAGdoD,MAAOrF,IAAKC,EAAEuC,sCAIf,IAAA6F,EAAAxJ,KACL,OACIyC,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQ2G,KAChChH,EAAAC,EAAAP,cAACuH,EAAD,CACIhI,SAAU1B,KAAKiB,MAAMS,SACrBX,OAAQf,KAAKiB,MAAMF,OACnBD,OAAQd,KAAKiB,MAAMH,OACnBI,QAAS,SAAA6H,GAAI,OAAIS,EAAKtD,SAAS,CAACyD,UAAWZ,KAC3C1H,OAAQrB,KAAKiB,MAAMI,SAEvBoB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQ8G,OAAS,IAAM5J,KAAKiB,MAAM6B,QAAQ+G,gBAChE7J,KAAK8J,YAAY,qBAAsB,SAASrH,EAAAC,EAAAP,cAAA,WAChDnC,KAAK8J,YAAY,wBAAyB,OAAQ,YAAYrH,EAAAC,EAAAP,cAAA,WAC9DnC,KAAK+J,eAAe,eAAgB,cAAe,CAACnF,UAAW,KAAKnC,EAAAC,EAAAP,cAAA,WACrEM,EAAAC,EAAAP,cAAC8G,EAAA,EAAD,CAAkBN,IAAI,aAAaxE,MAAO,CAACgF,WAAY,GAAItG,UAAW7C,KAAKiB,MAAM6B,QAAQsG,eACrFC,QACE5G,EAAAC,EAAAP,cAACmH,EAAA,EAAD,CACIC,QAASvJ,KAAKiB,MAAMH,OAAOkJ,WAC3BtD,SAAU,WAEN,IAAMuD,GAAUT,EAAKvI,MAAMH,OAAOkJ,WAClCR,EAAKvI,MAAMyF,SAAS,aAAcuD,EAAQ,kBACtCA,GAAUT,EAAKvI,MAAMyF,SAAS,eAAe,MAErDtD,MAAM,YAGZoD,MAAOrF,IAAKC,EAAE,iBAEqDqB,EAAAC,EAAAP,cAAA,WACtEnC,KAAK+J,eAAe,wCAAgB,cAAe,CAACnF,UAAW,KAAKnC,EAAAC,EAAAP,cAAA,WACrEM,EAAAC,EAAAP,cAAA,WACAM,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQ2C,QAAQ,WACRrH,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAC9BC,SAAUpK,KAAKsF,MAAMC,WAAavF,KAAKsF,MAAMK,gBAC7ChC,MAAQ3D,KAAKsF,MAAMK,gBAAuD,GAArCxE,IAAKC,EAAE,4BAC5CmC,QAAS,kBAAMiG,EAAKa,eACxB5H,EAAAC,EAAAP,cAACuB,EAAA,UAAD,MAAcvC,IAAKC,EAAE,oCAEzBqB,EAAAC,EAAAP,cAAC8G,EAAA,EAAD,CACII,QACI5G,EAAAC,EAAAP,cAACmH,EAAA,EAAD,CACIC,QAASvJ,KAAKsF,MAAME,gBACpBkB,SAAU,kBAAM8C,EAAKc,qBACrBlH,MAAM,YAGdoD,MAAOrF,IAAKC,EAAE,+CAElBqB,EAAAC,EAAAP,cAAA,KAAGgC,MAAO,CAACoG,WAAY,SAAUpD,IAAMC,gBAAgBjG,IAAKC,EAAE,eAElEqB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQ8G,OAAS,IAAM5J,KAAKiB,MAAM6B,QAAQ0H,YAAaxK,KAAKyK,cACtFzK,KAAK0K,aACL1K,KAAK2K,sBAxLAnG,aAyMPC,cAzOA,SAAAC,GAAK,MAAK,CACrB+E,IAAK,CACD1E,MAAO,OACP6F,UAAW,QAEf3I,MAAO,CACH4I,SAAU,KAEdV,OAAQ,CACJxF,YAAa,IAEjBkC,KAAM,CACFiE,SAAU,IACVxD,UAAW,UAEfN,MAAO,CACH+D,OAAQ,KAEZnB,OAAQ,CACJxF,QAAS,eACT4G,cAAe,MACfrG,YAAa,IAEjB6F,WAAY,CACRzF,MAAO,IACPJ,YAAa,GAEjBkF,eAAgB,CACZ9E,MAAO,wBA6MAN,CAAmBO,iECxM5BiG,cACF,SAAAA,EAAYhK,GAAO,IAAAlB,EAAA,OAAAkF,OAAAC,EAAA,EAAAD,CAAAjF,KAAAiL,IACflL,EAAAkF,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAAgG,GAAA5F,KAAArF,KAAMiB,KAEDqE,MAAQ,CACT4F,cAAc,GAJHnL,2EASP4D,EAAO0C,EAAMC,GAAM,IAAAtE,EAAAhC,KAC3B,OAAQyC,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACJC,MAAOrF,IAAKC,EAAEuC,GACdd,UAAW7C,KAAKiB,MAAM6B,QAAQb,MAAQ,IAAMjC,KAAKiB,MAAM6B,QAAQsG,eAC/D3C,MAAOzG,KAAKiB,MAAMH,OAAOuF,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAlG,GAAC,OAAIwB,EAAKf,MAAMyF,SAASL,EAAM7F,EAAEN,OAAOuG,QAClDE,OAAO,gDAIFhD,EAAO0C,EAAM8E,EAAShH,GAAO,IAAA3B,EAAAxC,KACtC,OAAQyC,EAAAC,EAAAP,cAACiJ,EAAA,EAAD,CAAavI,UAAW7C,KAAKiB,MAAM6B,QAAQb,MAAQ,IAAMjC,KAAKiB,MAAM6B,QAAQsG,eAAgBjF,MAAOc,OAAOiE,OAAO,CAACC,WAAY,GAAIhF,IACtI1B,EAAAC,EAAAP,cAACkJ,EAAA,EAAD,CACI5E,MAAOzG,KAAKiB,MAAMH,OAAOuF,IAAS,IAClCK,SAAU,SAAAlG,GAAC,OAAIgC,EAAKvB,MAAMyF,SAASL,EAAyB,MAAnB7F,EAAEN,OAAOuG,MAAgB,GAAKjG,EAAEN,OAAOuG,QAChFxE,MAAOQ,EAAAC,EAAAP,cAACmJ,EAAA,EAAD,CAAOtK,KAAMqF,EAAMmC,GAAInC,EAAO,aAEpC8E,EAAQI,IAAI,SAAAC,GAAI,OAAK/I,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAK,OAAS6C,EAAK/E,MAAOA,MAAO+E,EAAK/E,OAAS,KAAMtF,IAAKC,EAAEoK,EAAK7H,WAErGlB,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,KAAiBvK,IAAKC,EAAEuC,4CAIjBA,EAAO0C,EAAMlC,GAAO,IAAA2D,EAAA9H,KAC/B,OAAQyC,EAAAC,EAAAP,cAAC8G,EAAA,EAAD,CAAkBN,IAAKtC,EAAMlC,MAAOc,OAAOiE,OAAO,CAACC,WAAY,GAAIhF,GAAQtB,UAAW7C,KAAKiB,MAAM6B,QAAQsG,eAC7GC,QACI5G,EAAAC,EAAAP,cAACmH,EAAA,EAAD,CACIC,QAASvJ,KAAKiB,MAAMH,OAAOuF,GAC3BK,SAAU,kBAAMoB,EAAK7G,MAAMyF,SAASL,GAAOyB,EAAK7G,MAAMH,OAAOuF,KAC7DjD,MAAM,YAGdoD,MAAOrF,IAAKC,EAAEuC,+CAIJ0C,GAAM,IAAAwC,EAAA7I,KACpB,OAAIA,KAAKsF,MAAM4F,aACHzI,EAAAC,EAAAP,cAACwJ,EAAAjJ,EAAD,CACJiG,IAAI,kBACJiD,OAAQ,QACRC,WAAY7L,KAAKiB,MAAM2E,OACvBkG,SAAU9L,KAAKiB,MAAMH,OAAOuF,GAC5B0F,YAAY,EACZ3D,QAAS,kBAAMS,EAAK3C,SAAS,CAACgF,cAAc,KAC5Cc,KAAM,SAAAF,GACFjD,EAAK3C,SAAS,CAACgF,cAAc,IAC7BrC,EAAK5H,MAAMyF,SAASL,EAAMyF,MAI3B,sCAIN,IAAA9C,EAAAhJ,KACL,OACIyC,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQ2G,KAC/BzJ,KAAK8J,YAAY,YAAa,YAAYrH,EAAAC,EAAAP,cAAA,WAC1CnC,KAAKiM,aAAa,WAAY,WAAY,CACvC,CAACtI,MAAO,UAAW8C,MAAO,IAC1B,CAAC9C,MAAO,UAAW8C,MAAO,MAC1B,CAAC9C,MAAO,UAAW8C,MAAO,MAC1B,CAAC9C,MAAO,6CAAW8C,MAAO,OAC3B,CAAC7B,UAAW,KAAKnC,EAAAC,EAAAP,cAAA,WACnBnC,KAAK+J,eAAe,gCAAiC,gBAAiB,CAACnF,UAAW,KAAKnC,EAAAC,EAAAP,cAAA,WACvFnC,KAAK8J,YAAY,yBAA0B,cAAcrH,EAAAC,EAAAP,cAAA,WACzDnC,KAAK8J,YAAY,mBAAoB,YAAYrH,EAAAC,EAAAP,cAAA,WAClDM,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQsG,eAAgBjF,MAAO,CAACS,UAAW,KACjE5E,KAAK8J,YAAY,8BAA+B,kBACjDrH,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,KAAiBvK,IAAKC,EAAE,wCAE5BqB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQsG,gBAC9BpJ,KAAK8J,YAAY,oBAAqB,eACvCrH,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYG,QAAS,kBAAMyF,EAAK9C,SAAS,CAACgF,cAAc,KAAQ7H,aAAW,MAAMc,MAAO,CAAC+H,WAAY,EAAGtH,UAAW,KAAKnC,EAAAC,EAAAP,cAACuB,EAAA,MAAD,OAAiBjB,EAAAC,EAAAP,cAAA,YAErKM,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQsG,gBAC9BpJ,KAAK+J,eAAe,+BAAgC,YACrDtH,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,KAAiBvE,IAAMC,gBAAgBjG,IAAKC,EAAE,cAA8BqB,EAAAC,EAAAP,cAAA,YAE/EnC,KAAK+J,eAAe,gBAAiB,SACrC/J,KAAKmM,kBAAkB,uBA5FV3H,aA4GfC,eAjJA,SAAAC,GAAK,MAAK,CACrB+E,IAAK,CACD1E,MAAO,OACP6F,UAAW,QAEf3I,MAAO,CACH2C,UAAW,EACXiG,SAAU,KAEdV,OAAQ,CACJxF,YAAa,IAEjBkC,KAAM,CACFiE,SAAU,IACVxD,UAAW,UAEfN,MAAO,CACH+D,OAAQ,KAEZnB,OAAQ,CACJxF,QAAS,eACT4G,cAAe,MACfrG,YAAa,IAEjB6F,WAAY,CACRzF,MAAO,IACPJ,YAAa,GAEjBkF,eAAgB,CACZ9E,MAAO,sBAEXqE,eAAgB,CAEZgD,aAAc,KAgHP3H,CAAmBwG,0CCzF5BoB,eACF,SAAAA,EAAYpL,GAAO,IAAAlB,EAAA,OAAAkF,OAAAC,EAAA,EAAAD,CAAAjF,KAAAqM,IACftM,EAAAkF,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAAoH,GAAAhH,KAAArF,KAAMiB,KAEDqE,MAAQ,CACTgH,SAAS,EACT5G,MAAO,GACP6G,iBAAkB,GAClBC,SAAU,GACV7G,iBAAiB,GAErB5F,EAAK0M,kBAAoB1M,EAAK2M,aAAaC,KAAlB1H,OAAA2H,GAAA,EAAA3H,CAAAlF,IAEzBA,EAAKkB,MAAM2E,OAAOiH,oBAAoB,gBACjC7G,KAAK,SAAA8G,GAAI,OAAI/M,EAAKmG,SAAS,CAACqG,iBAAkBO,EAAKvB,IAAI,SAAAvH,GAAG,OAAIA,EAAIvC,IAAIsL,QAAQ,+BAAgC,UAbpGhN,oFAgBE,IAAAiC,EAAAhC,KACjBA,KAAKiB,MAAM2E,OAAOoH,eAAe,OAAShN,KAAKiB,MAAMS,SAAW,gBAAiB1B,KAAKyM,mBAEtFzM,KAAKiB,MAAM2E,OAAOC,UAAlB,kBAAAC,OAA8C9F,KAAKiB,MAAM8E,YAAzD,KAAAD,OAAwE9F,KAAKiB,MAAMS,WAAYsE,KAAK,SAAAhC,GAAG,OACnGhC,EAAKf,MAAM2E,OAAOK,SAAlB,kBAAAH,OAA6C9D,EAAKf,MAAM8E,YAAxD,KAAAD,OAAuE9D,EAAKf,MAAMS,SAAlF,WAAoGsE,KAAK,SAAAV,GAAK,OAC1GtD,EAAKkE,SAAS,CAACP,gBAAiB3B,GAAOA,EAAIjD,QAAUiD,EAAIjD,OAAOoF,SAAWb,GAASA,EAAMc,yDAIlGpG,KAAKiB,MAAM2E,OAAOqH,iBAAiB,OAASjN,KAAKiB,MAAMS,SAAW,gBAAiB1B,KAAKyM,wDAG/EjE,EAAIlD,GACbtF,KAAKkG,SAAS,CAACyC,IAAKrD,EAAMc,0CAGlBzC,EAAO0C,EAAMC,GAAM,IAAA9D,EAAAxC,KAC3B,OAAQyC,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACJC,MAAOrF,IAAKC,EAAEuC,GACdd,UAAW7C,KAAKiB,MAAM6B,QAAQb,MAAQ,IAAMjC,KAAKiB,MAAM6B,QAAQsG,eAC/D3C,MAAOzG,KAAKiB,MAAMH,OAAOuF,GACzBC,KAAMA,GAAQ,OACdI,SAAU,SAAAlG,GAAC,OAAIgC,EAAKvB,MAAMyF,SAASL,EAAM7F,EAAEN,OAAOuG,QAClDE,OAAO,mDAIC,IAAAmB,EAAA9H,KAEZ,OADAA,KAAKkG,SAAS,CAACoG,SAAS,IACjBtM,KAAKiB,MAAM2E,OAAOM,SAAS,OAASlG,KAAKiB,MAAMS,SAAW,gBAAiB,CAAC0E,IAAK,GAAIoB,KAAK,IAC5FxB,KAAK,kBAAM8B,EAAK7G,MAAM2E,OAAOC,UAAU,sBAAwBiC,EAAK7G,MAAMS,YAC1EsE,KAAK,SAAAhC,GACF,GAAKA,GAAQA,EAAIjD,QAAWiD,EAAIjD,OAAOoF,QAGnC,OAAO2B,EAAK7G,MAAM2E,OAAO+B,UAAU,sBAAwBG,EAAK7G,MAAMS,SAAUsC,GAFhF8D,EAAK5B,SAAS,CAACoG,SAAS,EAAO5G,MAAOvE,IAAKC,EAAE,uCAKpD4E,KAAK,kBAAM8B,EAAK5B,SAAS,CAACoG,SAAS,EAAO5G,MAAOvE,IAAKC,EAAE,4DACxDwG,MAAM,SAAAC,GACHC,EAAK5B,SAAS,CAACoG,SAAS,IACxBxE,EAAK7G,MAAMiM,UAAUrF,2CAInB,IAAAgB,EAAA7I,KACV,OAAKA,KAAKsF,MAAMI,MAEZjD,EAAAC,EAAAP,cAAC4F,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB1E,MAAM,EACN2E,iBAAkB,IAClBC,QAAS,kBAAMS,EAAK3C,SAAS,CAACR,MAAO,MACrC2C,aAAc,CACVC,mBAAoB,cAExBC,QAAS9F,EAAAC,EAAAP,cAAA,QAAMqG,GAAG,cAAcxI,KAAKsF,MAAMI,OAC3C+C,OAAQ,CACJhG,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CACIC,IAAI,QACJtF,aAAW,QACXD,MAAM,UACNP,UAAW7C,KAAKiB,MAAM6B,QAAQ8F,MAC9BrF,QAAS,kBAAMsF,EAAK3C,SAAS,CAACR,MAAO,OAErCjD,EAAAC,EAAAP,cAACuB,EAAA,QAAD,UAtBc,2CA4BpB2C,EAAMI,GAChB,IAAM0G,GAASnN,KAAKiB,MAAMH,OAAOuF,IAAS,IAAI+G,MAAM,UAAUC,OAAO,SAAA3K,GAAC,QAAMA,IACtE4K,EAAMH,EAAMI,QAAQ9G,IACb,IAAT6G,IACAH,EAAMK,OAAOF,EAAK,GAClBtN,KAAKiB,MAAMyF,SAASL,EAAM8G,EAAMM,KAAK,0CAIlCpH,GAAM,IAAA2C,EAAAhJ,KACPmN,GAASnN,KAAKiB,MAAMH,OAAOuF,IAAS,IAAI+G,MAAM,UAAUC,OAAO,SAAA3K,GAAC,QAAMA,KAE/D,IADDyK,EAAMI,QAAQvN,KAAKsF,MAAMkH,YAEjCW,EAAMO,KAAK1N,KAAKsF,MAAMkH,UACtBxM,KAAKkG,SAAS,CAACsG,SAAU,IAAK,kBAAMxD,EAAK/H,MAAMyF,SAASL,EAAM8G,EAAMM,KAAK,6CAIrEjH,EAAOH,GAAM,IAAAmD,EAAAxJ,KACrB,OAAQyC,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQ6K,UACvClL,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,KAAiBvE,IAAMC,gBAAgBjG,IAAKC,EAAEoF,KAC9C/D,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACIC,MAAOrF,IAAKC,EAAE,eACd+C,MAAO,CAACY,MAAO,KACfuB,KAAM,OACNG,MAAOzG,KAAKsF,MAAMkH,SAClBoB,QAAS,SAAApN,GAAC,OAAkB,KAAdA,EAAEqN,SAAkBrE,EAAKsE,WAAWzH,IAClDK,SAAU,SAAAlG,GAAC,OAAIgJ,EAAKtD,SAAS,CAACsG,SAAUhM,EAAEN,OAAOuG,MAAMsH,UACvDpH,OAAO,WAGXlE,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYgH,UAAWpK,KAAKsF,MAAMkH,SAAUjJ,QAAS,kBAAMiG,EAAKsE,WAAWzH,IAAOlC,MAAO,CAAC+H,WAAY,EAAGtH,WAAY,KAAKnC,EAAAC,EAAAP,cAACuB,EAAA,MAAD,OAElJjB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQqK,QAC7BnN,KAAKiB,MAAMH,OAAOuF,IAAS,IAAI+G,MAAM,UAAUC,OAAO,SAAA3K,GAAC,QAAMA,IAC9D6I,IAAI,SAAAyC,GAAI,OACJvL,EAAAC,EAAAP,cAAC8L,GAAA,EAAD,CACGtF,IAAKqF,EACL7K,KAAK,QACLqD,MAAOwH,EACPE,SAAU,kBAAM1E,EAAK2E,cAAc9H,EAAM2H,IACzCnL,UAAW2G,EAAKvI,MAAM6B,QAAQsL,4CAMzC,IAAAC,EAAArO,KACL,OACIyC,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQ2G,KAChChH,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CACI2C,QAAQ,WACRE,UAAWpK,KAAKsF,MAAMK,iBAAmB3F,KAAKsF,MAAMgH,QACpDlJ,MAAM,UACNO,MAAQ3D,KAAKsF,MAAMK,gBAAuD,GAArCxE,IAAKC,EAAE,4BAC5CmC,QAAS,kBAAM8K,EAAKC,kBACpB7L,EAAAC,EAAAP,cAACuB,EAAA,UAAD,MAAgBvC,IAAKC,EAAE,4BAClBqB,EAAAC,EAAAP,cAAA,WAERnC,KAAK8J,YAAY,YAAa,YAAYrH,EAAAC,EAAAP,cAAA,WAE3CM,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACIpC,MAAO,CAACS,UAAW,IACnB4B,MAAOrF,IAAKC,EAAE,gCACdyB,UAAW7C,KAAKiB,MAAM6B,QAAQb,MAAQ,IAAMjC,KAAKiB,MAAM6B,QAAQsG,eAAiB,IAAMpJ,KAAKiB,MAAM6B,QAAQyL,SACzG9H,MAAK,+DAAAX,OAAiE9F,KAAKsF,MAAMqD,IAA5E,UAAA7C,OAAwF5B,mBAAmBlE,KAAKiB,MAAMH,OAAO0N,QAClIlI,KAAK,OACLmI,UAAU,EACV9H,OAAO,WAEXlE,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQgB,MAAO,CAACS,UAAW,GAAIsH,WAAY,GAAI3I,QAAS,kBAAM4D,IAAMuH,gBAAN,+DAAA5I,OAAqFuI,EAAK/I,MAAMqD,IAAhG,UAAA7C,OAA4G5B,mBAAmBmK,EAAKpN,MAAMH,OAAO0N,WAAY/L,EAAAC,EAAAP,cAAA,OAAKS,IAAK+L,KAAgB3L,IAAI,UAAeP,EAAAC,EAAAP,cAAA,WAClRM,EAAAC,EAAAP,cAAA,WAECnC,KAAK4O,YAAY,0BAA2B,mBAAmBnM,EAAAC,EAAAP,cAAA,WAEhEM,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACIpC,MAAO,CAACS,UAAW,IACnB4B,MAAOrF,IAAKC,EAAE,yCACdyB,UAAW7C,KAAKiB,MAAM6B,QAAQb,MAAQ,IAAMjC,KAAKiB,MAAM6B,QAAQsG,eAAiB,IAAMpJ,KAAKiB,MAAM6B,QAAQyL,SACzG9H,MAAK,+EAAAX,OAAiF9F,KAAKsF,MAAMqD,IAA5F,UAAA7C,OAAwG5B,mBAAmBlE,KAAKiB,MAAMH,OAAO0N,OAA7I,qBACLlI,KAAK,OACLmI,UAAU,EACV9H,OAAO,WAEXlE,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQgB,MAAO,CAACS,UAAW,GAAIsH,WAAY,GAAI3I,QAAS,kBAAM4D,IAAMuH,gBAAN,+EAAA5I,OAAqGuI,EAAK/I,MAAMqD,IAAhH,UAAA7C,OAA4H5B,mBAAmBmK,EAAKpN,MAAMH,OAAO0N,OAAjK,wBAA6L/L,EAAAC,EAAAP,cAAA,OAAKS,IAAK+L,KAAgB3L,IAAI,UAAeP,EAAAC,EAAAP,cAAA,WAElTM,EAAAC,EAAAP,cAACiJ,EAAA,EAAD,CAAavI,UAAW7C,KAAKiB,MAAM6B,QAAQb,MAAQ,IAAMjC,KAAKiB,MAAM6B,QAAQsG,eAAgBjF,MAAO,CAACgF,WAAY,KAC5G1G,EAAAC,EAAAP,cAACkJ,EAAA,EAAD,CACI5E,MAAOzG,KAAKiB,MAAMH,OAAO+N,cAAgB,IACzCnI,SAAU,SAAAlG,GAAC,OAAI6N,EAAKpN,MAAMyF,SAAS,eAAmC,MAAnBlG,EAAEN,OAAOuG,MAAgB,GAAKjG,EAAEN,OAAOuG,QAC1FxE,MAAOQ,EAAAC,EAAAP,cAACmJ,EAAA,EAAD,CAAOtK,KAAK,eAAewH,GAAG,yBAErC/F,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAI,cAAclC,MAAO,KAAMtF,IAAKC,EAAE,aAC/CpB,KAAKsF,MAAMiH,iBAAiBhB,IAAI,SAAAC,GAAI,OAAK/I,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAK,OAAS6C,EAAM/E,MAAO+E,GAArC,gBAAyDA,MAEvG/I,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,KAAiBvK,IAAKC,EAAE,+BAE3BpB,KAAK2K,sBA5LCnG,aA8MRC,eAnQA,SAAAC,GAAK,MAAK,CACrB+E,IAAK,CACD1E,MAAO,OACP6F,UAAW,QAEf3I,MAAO,CACH2C,UAAW,EACXiG,SAAU,KAEd0D,SAAU,CACNxJ,MAAO,qBAEXoF,OAAQ,CACJxF,YAAa,IAEjBkC,KAAM,CACFiE,SAAU,IACVxD,UAAW,UAEfN,MAAO,CACH+D,OAAQ,KAEZnB,OAAQ,CACJxF,QAAS,eACT4G,cAAe,MACfrG,YAAa,IAEjB6F,WAAY,CACRzF,MAAO,IACPJ,YAAa,GAEjBkF,eAAgB,CACZ9E,MAAO,sBAEXqE,eAAgB,CAEZgD,aAAc,GAElBe,MAAO,CACH2B,OAAQ,iBACRC,aAAc,EACdhK,MAAO,qBACPX,QAAS,eACTU,QAAS,EACT8F,UAAW,GACXsB,WAAY,GACZtH,UAAW,IAEfwJ,KAAM,CACFzJ,YAAa,KAkNNF,CAAmB4H,gEC/M5B2C,eACF,SAAAA,EAAY/N,GAAO,IAAAlB,EAAA,OAAAkF,OAAAC,EAAA,EAAAD,CAAAjF,KAAAgP,IACfjP,EAAAkF,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAA+J,GAAA3J,KAAArF,KAAMiB,KAEDqE,MAAQ,CACTC,UAAU,EACV0J,OAAQ,GACRC,gBAAiB,GACjBC,MAAO,GACPC,MAAO,GACPC,QAAS,GACT9G,QAAS,GACT+G,SAAS,GAGbvP,EAAKwP,kBAAoBxP,EAAKyP,aAAa7C,KAAlB1H,OAAA2H,GAAA,EAAA3H,CAAAlF,IAEzBA,EAAKkB,MAAM2E,OAAO6J,WACbzJ,KAAK,SAAA0J,GACF,IAAMP,EAAQ,GACRC,EAAQ,GAWd,OAVAnK,OAAO0K,KAAKD,GAAKE,QAAQ,SAAApH,GACjBA,EAAGqH,MAAM,kBACTT,EAAM1B,KAAKgC,EAAIlH,IAEfA,EAAGqH,MAAM,uBACTV,EAAMzB,KAAKgC,EAAIlH,MAIvBzI,EAAKmG,SAAS,CAACiJ,QAAOC,QAAOE,SAAS,IAC/BvP,EAAKkB,MAAM2E,OAAOkK,gBAAgB,SAAU/P,EAAKwP,qBA9BjDxP,sFAmCfC,KAAKiB,MAAM2E,OAAOmK,kBAAkB,SAAU/P,KAAKuP,mBAAmBvJ,KAAK,mDAGlEwC,EAAIxE,GACbhE,KAAKgQ,cAAcxH,GACnBxI,KAAKiQ,iBAAiBzH,EAAIxE,0CAGfwE,GACXxI,KAAKiB,MAAM2E,OAAOsK,OAAOlQ,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU,SAAU8G,sCAGhFA,GACP,IAAM6G,EAAUzO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM+J,WACxB,IAAzBA,EAAQ9B,QAAQ/E,KAChB6G,EAAQ3B,KAAKlF,GACbxI,KAAKkG,SAAS,CAACmJ,mDAIT7G,GACV,IAAM6G,EAAUzO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM+J,UAC/C/B,EAAM+B,EAAQ9B,QAAQ/E,IAEf,IAAT8E,IACA+B,EAAQ7B,OAAOF,EAAK,GACpBtN,KAAKkG,SAAS,CAACmJ,sDAIN7G,EAAIxE,GAEjB,GAAIwE,EAAGqH,MAAM,uBACT,IAAK,IAAIM,EAAInQ,KAAKsF,MAAM6J,MAAMiB,OAAS,EAAGD,GAAK,EAAIA,IAC/C,GAAInQ,KAAKsF,MAAM6J,MAAMgB,GAAG1O,MAAQ+G,EAAI,CAChC,IAAM2G,EAAQvO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM6J,QAC/CnL,EACAmL,EAAMgB,GAAKnM,EAEXmL,EAAM3B,OAAO2C,EAAG,GAEpBnQ,KAAKkG,SAAS,CAACiJ,UACf,YAIZ,GAAI3G,EAAGqH,MAAM,kBACT,IAAK,IAAIM,EAAInQ,KAAKsF,MAAM8J,MAAMgB,OAAS,EAAGD,GAAK,EAAGA,IAC9C,GAAInQ,KAAKsF,MAAM8J,MAAMe,GAAG1O,MAAQ+G,EAAI,CAChC,IAAM4G,EAAQxO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM8J,QAC/CpL,EACAoL,EAAMe,GAAKnM,EAEXoL,EAAM5B,OAAO2C,EAAG,GAEpBnQ,KAAKkG,SAAS,CAACkJ,UACf,4CAMH5G,GAAI,IAAAxG,EAAAhC,KACTgE,EAAMhE,KAAKsF,MAAM6J,MAAMkB,KAAK,SAAA7P,GAAC,OAAIA,EAAEiB,MAAQ+G,KAAOxI,KAAKsF,MAAM8J,MAAMiB,KAAK,SAAA7P,GAAC,OAAIA,EAAEiB,MAAQ+G,IAEvF8H,EAAYnJ,IAAMoJ,oBAAoBvM,GAC1CA,EAAMpD,KAAKC,MAAMD,KAAKe,UAAUqC,KACd,IAAdsM,EACAnJ,IAAMqJ,iBAAiBxM,EAAKhE,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU1B,KAAKiB,MAAMH,OAAO2P,UAElGtJ,IAAMuJ,gBAAgB1M,EAAKhE,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU1B,KAAKiB,MAAMH,OAAO2P,UAGrGzQ,KAAK2Q,WAAWnI,GAEhBxI,KAAKiB,MAAM2E,OAAO+B,UAAUa,EAAIxE,GAC3BgC,KAAK,WAEFhE,EAAKiO,iBAAiBzH,EAAIxE,GAC1BhC,EAAK4O,eAAepI,GAEpBqI,WAAW,kBAAM7O,EAAKgO,cAAcxH,IAAK,sCAI9CA,GACH,IAAMxE,EAAMhE,KAAKsF,MAAM6J,MAAMkB,KAAK,SAAA7P,GAAC,OAAIA,EAAEiB,MAAQ+G,KAAOxI,KAAKsF,MAAM8J,MAAMiB,KAAK,SAAA7P,GAAC,OAAIA,EAAEiB,MAAQ+G,IACzF8H,EAAYnJ,IAAMoJ,oBAAoBvM,EAAKhE,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU1B,KAAKiB,MAAMH,OAAO2P,UAC5F,kBAAdH,GAA0BA,IACjCA,EAAYA,EAAUnP,IAAK2P,gBAAkBR,EAAUS,IAE3DT,EAAYA,GAAanJ,IAAM6J,qBAAqBhN,EAAK,KAAM,CAACiN,SAAU9P,IAAK2P,gBAC/E9Q,KAAKkG,SAAS,CAAC+I,OAAQzG,EAAI0G,gBAAiBoB,uCAGrCtM,GAAK,IAAAxB,EAAAxC,KACRsQ,EAAYnJ,IAAMoJ,oBAAoBvM,EAAKhE,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU1B,KAAKiB,MAAMH,OAAO2P,UAEjHH,GAAkC,kBAAdA,IACpBA,EAAYA,EAAUnP,IAAK2P,gBAAkBR,EAAUS,IAAM,IAEjE,IAAI/P,EAAOmG,IAAM6J,qBAAqBhN,GAEtC,OAAQvB,EAAAC,EAAAP,cAAA,OAAKwG,IAAK3E,EAAIvC,IAAKoB,UAAW7C,KAAKiB,MAAM6B,QAAQoO,SAAU/M,MAAO,CAACgN,YAAqD,IAAzCnR,KAAKsF,MAAM+J,QAAQ9B,QAAQvJ,EAAIvC,KAnMxG,YAmMsI,YAChJgB,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQsO,aAAcjN,MAAO,CAACkN,SAAuB,IAAdf,EAAsB,GAAK,IAAKA,GAAa,KAAMA,EAAa7N,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQwO,iBAApC,KAAwDtQ,EAAxD,KAAyEA,GAC5MyB,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQyO,WAAYpN,MAAO,CAACkN,SAAuB,IAAdf,EAAsB,GAAK,IAAKtM,EAAIvC,KACrGgB,EAAAC,EAAAP,cAACqP,GAAA,EAAD,CACI3O,UAAW7C,KAAKiB,MAAM6B,QAAQ2O,gBAC9BlI,SAAuB,IAAd+G,EACT5J,SAAU,kBAAMlE,EAAKkP,aAAa1N,EAAIvC,QAE1CgB,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,OAAOR,UAAW7C,KAAKiB,MAAM6B,QAAQ6O,aAAcpO,QAAS,kBAAMf,EAAKoP,OAAO5N,EAAIvC,OACrGgB,EAAAC,EAAAP,cAACuB,EAAA,OAAD,CAAUmO,SAAS,gDAMnB7Q,GAAM,IAAA8G,EAAA9H,KACd,OAAOA,KAAKsF,MAAMtE,GAAMuK,IAAI,SAAA/K,GAAC,OAAIsH,EAAKgK,WAAWtR,6CAGrC,IAAAqI,EAAA7I,KACZ,OAAIA,KAAKsF,MAAMiD,QACH9F,EAAAC,EAAAP,cAAC2G,EAAApG,EAAD,CAAeqG,KAAM/I,KAAKsF,MAAMiD,QAASH,QAAS,kBAAMS,EAAK3C,SAAS,CAACqC,QAAS,QAEjF,+CAIG,IAAAS,EAAAhJ,KAGd,IADYA,KAAKsF,MAAM2J,OAAO8C,WAAW,mBAAqB/R,KAAKsF,MAAM6J,MAAQnP,KAAKsF,MAAM8J,OAClFiB,KAAK,SAAArM,GAAG,OACdgF,EAAK1D,MAAM2J,SAAWjL,EAAIvC,MAC1BuH,EAAK1D,MAAM4J,kBAAoB/H,IAAM6J,qBAAqBhN,EAAK,KAAM,CAACiN,SAAU9P,IAAK2P,iBACrF9H,EAAK1D,MAAM4J,kBAAoB/H,IAAMoJ,oBAAoBvM,EAAKgF,EAAK/H,MAAM8E,YAAc,IAAMiD,EAAK/H,MAAMS,SAAUsH,EAAK/H,MAAMH,OAAO2P,aACpIzQ,KAAKkG,SAAS,CAACqC,QAASpH,IAAKC,EAAE,wBAC5B,CACHpB,KAAK2Q,WAAW3Q,KAAKsF,MAAM2J,QAC3B4B,WAAW,kBAAM7H,EAAKgH,cAAchH,EAAK1D,MAAM2J,SAAS,KACxD,IAEI+C,EAFExJ,EAAKxI,KAAKsF,MAAM2J,OACtBjP,KAAKkG,SAAS,CAAC+I,OAAQ,KAEvBjP,KAAKiB,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAGF,OAFAmD,IAAM8K,gBAAgBjO,EAAKgF,EAAK1D,MAAM4J,qBAAiBgD,OAAWA,EAAWlJ,EAAK/H,MAAM8E,YAAc,IAAMiD,EAAK/H,MAAMS,SAAUsH,EAAK/H,MAAMH,OAAO2P,UACnJuB,EAAShO,EACFgF,EAAK/H,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WAEFgD,EAAKiH,iBAAiBzH,EAAIwJ,GAC1BhJ,EAAK4H,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAImB,EAAK/H,MAAMC,QAAQ2G,iDAI1B,IAAA2B,EAAAxJ,KACf,GAAIA,KAAKsF,MAAM2J,OAAQ,CACnB,IAAMjL,EAAMhE,KAAKsF,MAAM6J,MAAMkB,KAAK,SAAA7P,GAAC,OAAIA,EAAEiB,MAAQ+H,EAAKlE,MAAM2J,UAAWjP,KAAKsF,MAAM8J,MAAMiB,KAAK,SAAA7P,GAAC,OAAIA,EAAEiB,MAAQ+H,EAAKlE,MAAM2J,SAEvH,OAAQxM,EAAAC,EAAAP,cAACgQ,GAAA,EAAD,CACJ3O,MAAM,EACNsH,SAAS,KACTsH,WAAW,EACXhK,QAAS,kBAAMoB,EAAK6I,YACpBC,kBAAgB,uBAChBhK,mBAAiB,8BAEjB7F,EAAAC,EAAAP,cAACoQ,GAAA,EAAD,CAAa/J,GAAG,wBAAwBxI,KAAKiB,MAAM0C,OAASxC,IAAKC,EAAE,oBAAqB+F,IAAM6J,qBAAqBhN,EAAK,KAAM,CAACiN,SAAU9P,IAAK2P,kBAC9IrO,EAAAC,EAAAP,cAACqQ,GAAA,EAAD,KACI/P,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACIpC,MAAO,CAACY,MAAO,QACfyB,MAAOrF,IAAKC,EAAE,cACdsF,SAAU,SAAAlG,GAAC,OAAIgJ,EAAKtD,SAAS,CAACgJ,gBAAiB1O,EAAEN,OAAOuG,SACxDA,MAAOzG,KAAKsF,MAAM4J,gBAClBuD,WAAYtR,IAAKC,EAAE,gDACnBuF,OAAO,YAGflE,EAAAC,EAAAP,cAACuQ,GAAA,EAAD,KACIjQ,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAMiG,EAAKmJ,mBAAmBvP,MAAM,UAAUwP,WAAS,GAAEzR,IAAKC,EAAE,OACjFqB,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAMiG,EAAKtD,SAAS,CAAC+I,OAAQ,OAAO9N,IAAKC,EAAE,aAIpE,OAAO,sCAKX,OAAIpB,KAAKsF,MAAMgK,QACH7M,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,MAGRpQ,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQ2G,KAChChH,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQ8G,QAC/BnH,EAAAC,EAAAP,cAAA,MAAIU,UAAW7C,KAAKiB,MAAM6B,QAAQgQ,cAAe3R,IAAKC,EAAE,UACxDqB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQiQ,WAAY/S,KAAKgT,YAAY,WAEpEvQ,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQ8G,QAC/BnH,EAAAC,EAAAP,cAAA,MAAIU,UAAW7C,KAAKiB,MAAM6B,QAAQgQ,cAAe3R,IAAKC,EAAE,cACxDqB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQiQ,WAAY/S,KAAKgT,YAAY,WAEnEhT,KAAKiT,gBACLjT,KAAKkT,2BAnPF1O,aAoQLC,eA1TA,SAAAC,GAAK,MAAK,CACrB+E,IAAK,CACD1E,MAAO,OACPgG,OAAQ,QAEZnB,OAAQ,CACJxF,QAAS,eACT4G,cAAe,MACfrG,YAAa,GACboG,OAAQ,OACRoI,SAAU,SACVpO,MAAO,mBACP8F,SAAU,IACVC,SAAU,KAEdiI,UAAW,CACPhI,OAAQ,oBACRoI,SAAU,OACVtI,SAAU,KAEd4G,gBAAiB,CACb2B,SAAU,WACVC,MAAO,EACPC,IAAK,GAET3B,aAAc,CAEVyB,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXjC,aAAc,GAGdE,gBAAgB,CACZiC,UAAW,UAEfrC,SAAU,CACNnG,OAAQ,GACRhG,MAAO,OACPqO,SAAU,YAEd7B,WAAY,CACRnN,QAAS,QACTmP,UAAW,SACX1B,SAAU,IAEdiB,aAAc,CACV3B,WAAYzM,EAAM8O,QAAQC,QAAQC,MAClC5O,QAAS,GACT1B,MAAOsB,EAAM8O,QAAQC,QAAQE,gBAwQtBlP,CAAmBuK,cC5R5B4E,GAAiB,CACnBC,OAAQ,CAACzQ,MATG,UASaT,KAAMmR,aAAQhS,KAAM,WAC7CiS,QAAS,CAAC3Q,MATG,OAScT,KAAMmR,aAAQhS,KAAM,YAE/CkS,qBAAsB,CAAC5Q,MAVV,UAU2BT,KAAMsR,oBAAiBnS,KAAM,0BACrEoS,2BAA4B,CAAC9Q,MAbjB,UAaiCT,KAAMwR,mBAAQrS,KAAM,gCACjEsS,2BAA4B,CAAChR,MAbhB,OAaiCT,KAAM0R,qBAAUvS,KAAM,gCAEpEwS,cAAe,CAAClR,MAdH,UAcoBT,KAAM4R,eAAgBzS,KAAM,kBAC7D0S,oBAAqB,CAACpR,MAjBV,UAiB0BT,KAAMwR,mBAAQrS,KAAM,wBAC1D2S,oBAAqB,CAACrR,MAjBT,OAiB0BT,KAAM0R,qBAAUvS,KAAM,wBAE7D4S,SAAU,CAACtR,MAlBE,UAkBeT,KAAMgS,YAAW7S,KAAM,aAEnD8S,oBAAqB,CAACxR,MApBT,UAoB0BT,KAAMkS,cAAU/S,KAAM,yBAC7DgT,0BAA2B,CAAC1R,MAvBhB,UAuBgCT,KAAMwR,mBAAQrS,KAAM,+BAChEiT,0BAA2B,CAAC3R,MAvBf,OAuBgCT,KAAM0R,qBAAUvS,KAAM,+BAEnEkT,qBAAsB,CAAC5R,MAvBT,UAuB2BT,KAAMsS,gBAAiBnT,KAAM,0BACtEoT,sBAAuB,CAAC9R,MAxBV,UAwB4BT,KAAMsS,gBAAiBnT,KAAM,0BAEvEqT,aAAc,CAAC/R,MA3BF,UA2BmBT,KAAMyS,aAAUtT,KAAM,kBACtDuT,aAAc,CAACjS,MA3BD,UA2BmBT,KAAMyS,aAAUtT,KAAM,oBAGrDwT,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,UAqI9GC,eACF,SAAAA,EAAYtU,GAAO,IAAAlB,EAAA,OAAAkF,OAAAC,EAAA,EAAAD,CAAAjF,KAAAuV,GACfxV,EAAAkF,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAAsQ,GAAAlQ,KAAArF,KAAMiB,IAED2S,GAAe4B,aAChBvQ,OAAO0K,KAAKiE,IAAgBhE,QAAQ,SAAAlN,GAAC,OAAIkR,GAAelR,GAAGZ,KAAOX,IAAKC,EAAEwS,GAAelR,GAAGZ,QAC3F8R,GAAe4B,YAAa,GAGhCzV,EAAKuF,MAAQ,CACT4J,gBAAiB,GACjBD,OAAQ,GACRwG,eAAgB,GAChBC,SAAU,GAEVxK,cAAc,EACdyK,iBAAkB,GAClBtG,QAAS,GACTuG,QAAS,GACTrN,QAAS,GACT8E,OAAQ,GACRiC,SAAS,EACTuG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjBhW,EAAKiW,aAAe,KACpBjW,EAAKkW,YAAc,KACnBlW,EAAKmW,iBAAmB,EACxBnW,EAAKmP,gBAAkB,GAEvBnP,EAAKoW,gBAAkB,KACvBpW,EAAKqW,mBAAqBrW,EAAKsW,cAAc1J,KAAnB1H,OAAA2H,GAAA,EAAA3H,CAAAlF,IAC1BA,EAAKuW,oBAAsBvW,EAAKwW,eAAe5J,KAApB1H,OAAA2H,GAAA,EAAA3H,CAAAlF,IAE3BA,EAAKkB,MAAM2E,OAAOC,UAAlB,kBAAAC,OAA8C/F,EAAKkB,MAAM8E,YAAzD,KAAAD,OAAwE/F,EAAKkB,MAAMS,WAAYsE,KAAK,SAAAhC,GAChGjE,EAAKkB,MAAM2E,OAAOK,SAAlB,kBAAAH,OAA6C/F,EAAKkB,MAAM8E,YAAxD,KAAAD,OAAuE/F,EAAKkB,MAAMS,SAAlF,WAAoGsE,KAAK,SAAAV,GAChGtB,GAAQA,EAAIjD,SAAYiD,EAAIjD,OAAOoF,SAAab,GAAUA,EAAMc,KAGjErG,EAAK8V,SAFL9V,EAAKmG,SAAS,CAACqC,QAASpH,IAAKC,EAAE,4BAA6BkO,SAAS,EAAOsG,QAAS,SAtClF7V,sEA8CZyW,GAAY,IAAAxU,EAAAhC,KACXyW,KAAKC,MAAQ1W,KAAK2W,WAAa,MACnC3W,KAAK2W,WAAaF,KAAKC,MACnBF,EACAxW,KAAKkG,SAAS,CAACoJ,SAAS,EAAMuG,QAAQ,IAEtC7V,KAAKkG,SAAS,CAAC2P,QAAQ,IAE3Be,QAAQC,IAAI,gBACZ7W,KAAKiW,YAAcpF,WAAW,WAC1B+F,QAAQC,IAAI,mBACZ7U,EAAKiU,YAAc,KACnBjU,EAAKkU,mBACDlU,EAAKkU,iBAAmB,EACxBlU,EAAK6T,OAAOW,GAEZxU,EAAKkE,SAAS,CAACqC,QAASpH,IAAKC,EAAE,2BAEpC,KAEHpB,KAAKiB,MAAM2E,OAAOsK,OAAOlQ,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU,SAAU,KAAM,SAAAoL,GACzF9K,EAAKiU,aAAea,aAAa9U,EAAKiU,aACtCjU,EAAKkU,iBAAmB,EACxBlU,EAAKiU,YAAc,KACfjU,EAAKmU,kBACAnU,EAAK4P,OAAO5P,EAAKmU,gBAAiBrJ,IACnC9K,EAAKkE,SAAS,CAACqC,QAASpH,IAAKC,EAAE,0BAA2BY,EAAKmU,mBAEnEnU,EAAKmU,gBAAkB,MAE3BS,QAAQC,IAAI,oBAEZ7U,EAAKkE,SAAS,CAAC0P,QAAS9I,EAAMwC,SAAS,EAAOD,QAAS,GAAIwG,QAAQ,6CAI7DrN,EAAIlD,GAAO,IAAA9C,EAAAxC,KACrB4W,QAAQC,IAAI,UAAYrO,EAAK,IAAMlD,EAAMc,IAAM,IAAMd,EAAMkC,KACvDlC,IAAuB,IAAdA,EAAMkC,MAA8B,IAAdlC,EAAMc,MACjCpG,KAAK+W,UAAUD,aAAa9W,KAAK+W,UACrC/W,KAAK+W,SAAWlG,WAAW,WACvBrO,EAAKuU,SAAW,KAChBvU,EAAKqT,UACN,6CAIIrN,EAAIlD,GACfA,IAAuB,IAAdA,EAAMkC,KAAgBlC,EAAMc,KAAOpG,KAAKkG,SAAS,CAACqC,QAASjD,EAAMc,mDAI1EpG,KAAKiB,MAAM2E,OAAOoH,eAAlB,GAAAlH,OAAoC9F,KAAKiB,MAAM8E,YAA/C,KAAAD,OAA8D9F,KAAKiB,MAAMS,SAAzE,kBAAmG1B,KAAKoW,oBACxGpW,KAAKiB,MAAM2E,OAAOoH,eAAlB,GAAAlH,OAAoC9F,KAAKiB,MAAM8E,YAA/C,KAAAD,OAA8D9F,KAAKiB,MAAMS,SAAzE,wBAAyG1B,KAAKsW,oEAI9GtW,KAAKiB,MAAM2E,OAAOqH,iBAAlB,GAAAnH,OAAsC9F,KAAKiB,MAAM8E,YAAjD,KAAAD,OAAgE9F,KAAKiB,MAAMS,SAA3E,kBAAqG1B,KAAKoW,oBAC1GpW,KAAKiB,MAAM2E,OAAOqH,iBAAlB,GAAAnH,OAAsC9F,KAAKiB,MAAM8E,YAAjD,KAAAD,OAAgE9F,KAAKiB,MAAMS,SAA3E,wBAA2G1B,KAAKsW,qBAC5GtW,KAAKgW,eACLc,aAAa9W,KAAKgW,cAClBhW,KAAKgW,aAAe,6CAIbxN,GACXxI,KAAKiB,MAAM2E,OAAOsK,OAAOlQ,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU,SAAU8G,sCAGhFA,EAAIwO,GACX,IAAM3H,EAAUzO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM+J,WACxB,IAAzBA,EAAQ9B,QAAQ/E,IAChB6G,EAAQ3B,KAAKlF,GACbxI,KAAKkG,SAAS,CAACmJ,WAAU,kBAAM2H,GAAMA,OAErCA,GAAMA,0CAIAxO,GACV,IAAM6G,EAAUzO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM+J,UAC/C/B,EAAM+B,EAAQ9B,QAAQ/E,IAEf,IAAT8E,IACA+B,EAAQ7B,OAAOF,EAAK,GACpBtN,KAAKkG,SAAS,CAACmJ,4CAIhB7G,EAAIoN,GAAS,IAAA9N,EAAA9H,KAEViX,GADNrB,EAAUA,GAAW5V,KAAKsF,MAAMsQ,SACTvF,KAAK,SAAA6G,GAAG,OAAIA,EAAIC,2BAA2B3O,KAAOA,IACzE,QAAIyO,IACAjX,KAAKiB,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GACF,IAAIsM,EAAY2G,EAAOE,2BAA2BC,cAAgBH,EAAOE,2BAA2BC,cAAgBH,EAAOI,aAClG,kBAAd/G,GAA0BA,IACjCA,EAAYA,EAAUnP,IAAK2P,gBAAkBR,EAAUS,IAE3DjJ,EAAKoH,gBAAkBoB,EACvBxI,EAAK5B,SAAS,CAAC+I,OAAQzG,EAAI0G,gBAAiBoB,EAAWmF,eAAgBtO,IAAM6J,qBAAqBhN,EAAK,KAAM,CAACiN,SAAU9P,IAAK2P,qBAE9H,uCAMH4E,GACR1V,KAAKkG,SAAS,CAACwP,WAAUC,kBAAkB,uCAGpC,IAAA9M,EAAA7I,KACHwI,EAAKxI,KAAKsF,MAAMoQ,SAEpB1V,KAAK2Q,WAAWnI,EAAI,WAChBK,EAAK5H,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAEF,OADAmD,IAAMqJ,iBAAiBxM,EAAK6E,EAAK5H,MAAM8E,YAAc,IAAM8C,EAAK5H,MAAMS,SAAUmH,EAAK5H,MAAMH,OAAO2P,UAC3F5H,EAAK5H,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WACF6C,EAAK3C,SAAS,CAACwP,SAAU,GAAIC,kBAAkB,EAAOI,YAAavN,IAEnEK,EAAKmN,cAAgBc,aAAajO,EAAKmN,cACvCnN,EAAKmN,aAAenF,WAAW,WAC3BhI,EAAK3C,SAAS,CAAC6P,YAAa,KAC5BlN,EAAKmN,aAAe,MACrB,KAGHnN,EAAK+H,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAIgB,EAAK5H,MAAMC,QAAQ2G,6CAI/BqP,GAAK,IAAAlO,EAAAhJ,KAETsX,EAAU,GAChB,IAAKJ,EAAII,QAEL,OADAV,QAAQC,IAAI,wBACL,KAEXK,EAAII,QAAQC,KAAK,SAAC7U,EAAG8U,GACjB,OAAI9U,IAAM8U,EAAU,EACV,WAAN9U,GAAwB,EAClB,WAAN8U,EAAuB,EAEjB,YAAN9U,GAAyB,EACnB,YAAN8U,EAAwB,EACrB,IAGXvS,OAAO0K,KAAKiE,IAAgBhE,QAAQ,SAAAnH,GAChC,IAAqC,IAAjCyO,EAAII,QAAQ/J,QAAQ9E,GAAgB,CACpC,IAAMgP,EAAO7D,GAAenL,GAAQ9F,KACpC2U,EAAQ5J,KAAMjL,EAAAC,EAAAP,cAAA,QAAMwG,IAAKF,EAAQ9E,MAAOiQ,GAAenL,GAAQ3G,MAAMW,EAAAC,EAAAP,cAACsV,EAAD,CAAM5U,UAAWmG,EAAK/H,MAAM6B,QAAQ4U,WAAYvT,MAAO,CAACf,MAAOwQ,GAAenL,GAAQrF,cAInK,IAAK,IAAIV,EAAI,EAAGA,EAAIwU,EAAII,QAAQlH,OAAQ1N,IAC/BkR,GAAesD,EAAII,QAAQ5U,KAC5B4U,EAAQ5J,KAAMjL,EAAAC,EAAAP,cAAA,QAAMwG,IAAKuO,EAAII,QAAQ5U,IAAKwU,EAAII,QAAQ5U,KAG9D,OAAO4U,mCAGFK,GACL,IAAM7B,EAAWlV,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAMwQ,WAChDxI,EAAMwI,EAASvI,QAAQvN,KAAKsF,MAAMsQ,QAAQ+B,GAASN,eAC5C,IAAT/J,EACAwI,EAASpI,KAAK1N,KAAKsF,MAAMsQ,QAAQ+B,GAASN,cAE1CvB,EAAStI,OAAOF,EAAK,GAEzBtN,KAAKkG,SAAS,CAAC4P,sDAGFoB,EAAKS,EAASnP,EAAIlC,GAAM,IAAAkD,EAAAxJ,KAErC,IAAa,IAATsG,EAAgB,CAKhB,IAJA,IAAMsR,EAAQ,CACTnV,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,IAAGhE,EAAAC,EAAAP,cAAA,UAAKhB,IAAKC,EAAE,aACvCqB,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAI,OAAOlC,MAAM,UAAUtF,IAAKC,EAAE,gBAExC+O,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3ByH,EAAMlK,KAAMjL,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAW9C,IAAKwH,EAAE7O,WAAYmF,MAAO0J,EAAE7O,YAAa6O,EAApD,MAEhB,OAAQ1N,EAAAC,EAAAP,cAACiJ,EAAA,EAAD,CAAavI,UAAW7C,KAAKiB,MAAM6B,QAAQ+U,gBAC/CpV,EAAAC,EAAAP,cAACkJ,EAAA,EAAD,CAAQxI,UAAW7C,KAAKiB,MAAM6B,QAAQgV,qBAAsBrR,OAAQH,GAAQ,IAAIhF,WAAYoF,SAAU,SAAAlG,GAAC,OAAIgJ,EAAKuO,eAAevP,EAAIhI,EAAEN,OAAOuG,SAASmR,GACrJnV,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,CAAgB7I,UAAW7C,KAAKiB,MAAM6B,QAAQkV,qBAAsB7W,IAAKC,EAAE,WAG/E,OAAO,4CAIAoH,EAAIyP,EAAM3R,GAAM,IAAA+H,EAAArO,KAC3BA,KAAK2Q,WAAWnI,EAAI,WAChB6F,EAAKpN,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAYF,OAXAmD,IAAM8K,gBAAgBjO,OAAKkO,EAAW+F,EAAM3R,EAAM+H,EAAKpN,MAAM8E,YAAc,IAAMsI,EAAKpN,MAAMS,SAAU2M,EAAKpN,MAAMH,OAAO2P,UAEpHpC,EAAK/I,MAAMyQ,cAAgBvN,IAC3B6F,EAAKnI,SAAS,CAAC6P,YAAavN,IAC5B6F,EAAK2H,cAAgBc,aAAazI,EAAK2H,cACvC3H,EAAK2H,aAAenF,WAAW,WAC3BxC,EAAKnI,SAAS,CAAC6P,YAAa,KAC5B1H,EAAK2H,aAAe,MACrB,MAGA3H,EAAKpN,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WAEFqI,EAAKuC,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAIwG,EAAKpN,MAAMC,QAAQ2G,gDAI5BqP,EAAKS,EAASnP,EAAIlC,GAAM,IAAA4R,EAAAlY,KACrC,IAAa,IAATsG,EAAgB,CAIhB,IAHA,IAAMsR,EAAQ,CACTnV,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,KAAIhE,EAAAC,EAAAP,cAAA,UAAKhB,IAAKC,EAAE,cAEpC+O,EAAI,EAAGA,EAAImF,GAAWlF,OAAQD,IACnCyH,EAAMlK,KAAMjL,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAW9C,IAAK2M,GAAWnF,GAAI1J,MAAO6O,GAAWnF,IAAI1N,EAAAC,EAAAP,cAAA,UAAKhB,IAAKC,EAAEkU,GAAWnF,OAE5F,OACI1N,EAAAC,EAAAP,cAACiJ,EAAA,EAAD,KACI3I,EAAAC,EAAAP,cAACkJ,EAAA,EAAD,CAAQ5E,MAAOH,GAAQ,IAAKI,SAAU,SAAAlG,GAAC,OAAI0X,EAAKH,eAAevP,OAAI0J,EAAW1R,EAAEN,OAAOuG,SAASmR,GAChGnV,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,CAAgB7I,UAAW7C,KAAKiB,MAAM6B,QAAQkV,qBAAsB7W,IAAKC,EAAE,WAGnF,MAAO,0CAIA8V,EAAKS,GAAS,IAAAQ,EAAAnY,KACnBU,EAAS,GACToC,EAAU9C,KAAKiB,MAAM6B,QAE3B,GAAIoU,EAAIC,2BAA2BiB,MAAO,CACtC,IAAMC,EAAanB,EAAIC,2BAA2BkB,SAC5CC,EAAapB,EAAIC,2BAA2BmB,MAC5CC,EAAarB,EAAIC,2BAA2BqB,MAC5CC,EAAavB,EAAIC,2BAA2BuB,WAE9CC,EAAI,EACR,IAAK,IAAMC,KAAQP,EACf,GAAIA,EAASQ,eAAeD,GACxB,IAD+B,IAAAE,EAAA,SACtB3I,GACL,IAAM3H,EAAK6P,EAASO,GAAMzI,GAAG3H,GACzB2I,GAAiD,IAApCgH,EAAK7S,MAAM+J,QAAQ9B,QAAQ/E,GAld9C,YACQ,UAkdF2P,EAAK7S,MAAMyQ,cAAgBvN,GAldzB,YAkd+B2I,IACjCA,EAldD,WAodHzQ,EAAOgN,KAAMjL,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,MAAQH,EAAI3F,UAAWC,EAAQiW,WAAY5U,MAAQwU,EAAI,EAAK,GAAK,CAACxH,eACrF1O,EAAAC,EAAAP,cAAA,OAAKU,UAAWsV,EAAKlX,MAAM6B,QAAQkW,eAAiB,IAAMb,EAAKlX,MAAM6B,QAAQmW,oBAAqBd,EAAKe,cAAcb,EAASO,GAAMzI,KACpI1N,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQqW,eAAgBxV,MAAO6E,GAAM8P,EAAM9P,IAAOA,EAC7DA,IAAO8P,EAAM9P,GAAO/F,EAAAC,EAAAP,cAAA,QAAMU,UAAWC,EAAQsW,mBAAoB5Q,GAAc,MAEnF2P,EAAKkB,iBAAiBnC,EAAKS,EAASnP,EAAIiQ,EAAWjQ,IACnD2P,EAAKmB,iBAAiBpC,EAAKS,EAASnP,EAAI+P,EAAM/P,IAC/C/F,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,SAASR,UAAWsV,EAAKlX,MAAM6B,QAAQyW,iBAAkBhW,QAAS,kBAAM4U,EAAKqB,YAAYhR,EAAImP,KAAUlV,EAAAC,EAAAP,cAACuB,EAAA,SAAD,CAAYmO,SAAS,cAEvJ8G,KAfKxI,EAAI,EAAGA,EAAIkI,EAASO,GAAMxI,OAAQD,IAAK2I,EAAvC3I,OAmBd,CACH,IAAM3H,EAAK0O,EAAIC,2BAA2B3O,GACpCxH,EAAOkW,EAAIC,2BAA2BnW,MAAQwH,EAChD2I,GAAiD,IAApCnR,KAAKsF,MAAM+J,QAAQ9B,QAAQ/E,GAtelC,YACQ,UAsedxI,KAAKsF,MAAMyQ,cAAgBvN,GAteb,YAsemB2I,IACjCA,EAteW,WAwefzQ,EAAOgN,KAAMjL,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,MAAQH,EAAI3F,UAAWC,EAAQiW,WAAY5U,MAAO,CAACgN,eACtE1O,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQkW,eAAiB,IAAMhZ,KAAKiB,MAAM6B,QAAQmW,mBAAoB9U,MAAO,CAACY,MAAO,KAAM/E,KAAKkZ,cAAchC,IACzIzU,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQqW,eAAgBxV,MAAQ6E,GAAM,IAAMxH,GAC3DhB,KAAKqZ,iBAAiBnC,EAAKS,EAASnP,EAAI0O,EAAIC,2BAA2BsC,WACvEzZ,KAAKsZ,iBAAiBpC,EAAKS,EAASnP,EAAI0O,EAAIC,2BAA2Bc,QAGhF,OAAOvX,uCAGEwW,EAAKS,GAAS,IAEnBhU,EAFmB+V,EAAA1Z,KACnBqX,EAAeH,EAAIG,aAGnB1T,GADCuT,EAAIC,2BAA2BiB,OAASlB,EAAIC,2BAA2BwC,aAChEtC,EAEC5U,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQ8W,YAAajW,MAAOxC,IAAKC,EAAE,aAAciW,GAG1F,IAAIwC,EAAW,EACf,IAAK,IAAMC,KAAM5C,EAAIC,2BAA2BkB,SACxCnB,EAAIC,2BAA2BkB,SAASQ,eAAeiB,KACvDD,GAAY3C,EAAIC,2BAA2BkB,SAASyB,GAAI1J,QAGhEyJ,EAAWA,GAAY,EACvB,IAAM/D,GAA0D,IAA/C9V,KAAKsF,MAAMwQ,SAASvI,QAAQ8J,GACvC7O,EAAK0O,EAAIC,2BAA2B3O,GAEtC2I,EAAcwG,EAAU,EAAK,UAAY,UACvCtI,GAA8C,IAApCrP,KAAKsF,MAAM+J,QAAQ9B,QAAQ/E,GAQ3C,GAPI6G,EACA8B,EA1gBU,YA2gBH3I,IAAOxI,KAAKsF,MAAMyQ,cACzB5E,EA1gBe,WA8gBf+F,EAAIC,2BAA2BiB,QAAU/I,GAAW7G,IAAOxI,KAAKsF,MAAMyQ,YAAa,CACnF,IAAMsC,EAAWnB,EAAIC,2BAA2BkB,SAChD,IAAK,IAAMO,KAAQP,EACf,GAAIA,EAASQ,eAAeD,GACxB,IAAK,IAAIzI,EAAI,EAAGA,EAAIkI,EAASO,GAAMxI,OAAQD,IAAK,CAC5C,IAAM3H,EAAK6P,EAASO,GAAMzI,GAAG3H,IACW,IAApCxI,KAAKsF,MAAM+J,QAAQ9B,QAAQ/E,GAC3B2I,EAvhBN,YAwhBanR,KAAKsF,MAAMyQ,cAAgBvN,IAClC2I,EAvhBD,YA8hBnB,MAAO,CACF1O,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,OAASgP,EAAS9U,UAAW7C,KAAKiB,MAAM6B,QAAQiX,QAAS5V,MAAO,CAACgN,eACxE1O,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQkX,eAAgBrC,EAAU,EAA7D,KACAlV,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAY7F,UAAW7C,KAAKiB,MAAM6B,QAAQmX,cAAe1W,QAAS,kBAAMmW,EAAKQ,SAASvC,KACjFkC,EAAW,EACPpX,EAAAC,EAAAP,cAACgY,GAAA,EAAD,CAAOC,aAAcP,EAAUzW,MAAM,WACjC0S,EAAYrT,EAAAC,EAAAP,cAACuB,EAAA,aAAD,MAAoBjB,EAAAC,EAAAP,cAACuB,EAAA,qBAAD,OAEpCoS,EAAYrT,EAAAC,EAAAP,cAACuB,EAAA,aAAD,MAAoBjB,EAAAC,EAAAP,cAACuB,EAAA,qBAAD,OAEzCjB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQuX,iBAAkBlW,MAAO,CAACC,QAAS,eAAgBgP,SAAU,aAC5F3Q,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQwX,aAAc3W,GAClDlB,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQyX,oBAAqBrD,EAAIsD,qBAC5DnL,EAAW5M,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAkBhQ,UAAW7C,KAAKiB,MAAM6B,QAAQ2X,gBAAiBtX,KAAM,KAAS,MAEhGV,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQkW,gBAAiBhZ,KAAKkZ,cAAchC,IACtEA,EAAIC,2BAA2BiB,MAC4H,KAAxJ3V,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,OAAOR,UAAW7C,KAAKiB,MAAM6B,QAAQ4X,YAAanX,QAAS,kBAAMmW,EAAK9H,OAAOpJ,KAAK/F,EAAAC,EAAAP,cAACuB,EAAA,OAAD,CAAUmO,SAAS,YAC/HqF,EAAIC,2BAA2BiB,MACuI,KAAnK3V,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,SAASR,UAAW7C,KAAKiB,MAAM6B,QAAQ6X,cAAepX,QAAS,kBAAMmW,EAAKF,YAAYhR,KAAK/F,EAAAC,EAAAP,cAACuB,EAAA,SAAD,CAAYmO,SAAS,aAEhJiE,EAAW9V,KAAK4a,eAAe1D,EAAKS,GAAW,8CAIvC,IAAAkD,EAAA7a,KACZ,OAAIA,KAAKsF,MAAMiD,QACH9F,EAAAC,EAAAP,cAAC2G,EAAApG,EAAD,CAAeqG,KAAM/I,KAAKsF,MAAMiD,QAASH,QAAS,kBAAMyS,EAAK3U,SAAS,CAACqC,QAAS,QAEjF,6CAIC/H,GAAG,IAAAsa,EAAA9a,KACfQ,GAAKA,EAAEua,iBAEP/a,KAAK2Q,WAAW3Q,KAAKsF,MAAM2J,OAAQ,WAC/B,IAAMzG,EAAKsS,EAAKxV,MAAM2J,OACtB6L,EAAK5U,SAAS,CAAC+I,OAAQ,GAAIwG,eAAgB,GAAIM,YAAavN,IAE5DsS,EAAK9E,cAAgBc,aAAagE,EAAK9E,cACvC8E,EAAK9E,aAAenF,WAAW,WAC3BiK,EAAK5U,SAAS,CAAC6P,YAAa,KAC5B+E,EAAK9E,aAAe,MACrB,KAEH8E,EAAK7Z,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAEF,OADAmD,IAAM8K,gBAAgBjO,EAAK8W,EAAK5L,qBAAiBgD,OAAWA,EAAW4I,EAAK7Z,MAAM8E,YAAc,IAAM+U,EAAK7Z,MAAMS,SAAUoZ,EAAK7Z,MAAMH,OAAO2P,UACtIqK,EAAK7Z,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WAEF8U,EAAKlK,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAIiT,EAAK7Z,MAAMC,QAAQ2G,kDAI1B,IAAAmT,EAAAhb,KACf,OAAIA,KAAKsF,MAAM2J,OACHxM,EAAAC,EAAAP,cAACgQ,GAAA,EAAD,CACJ3O,MAAM,EACNsH,SAAS,KACTsH,WAAW,EACXhK,QAAS,kBAAM4S,EAAK3I,YACpBC,kBAAgB,uBAChBhK,mBAAiB,8BAEjB7F,EAAAC,EAAAP,cAACoQ,GAAA,EAAD,CAAa/J,GAAG,wBAAwBxI,KAAKiB,MAAM0C,OAASxC,IAAKC,EAAE,oBAAqBpB,KAAKsF,MAAMmQ,iBACnGhT,EAAAC,EAAAP,cAACqQ,GAAA,EAAD,KACI/P,EAAAC,EAAAP,cAAA,SAAGM,EAAAC,EAAAP,cAAA,mBAAH,IAAoBM,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQmY,UAAWjb,KAAKsF,MAAM2J,SAC9ExM,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACIpC,MAAO,CAACY,MAAO,QACfyB,MAAOrF,IAAKC,EAAE,cACd8Z,UAAW,SAAA1a,GAAC,OACM,KAAdA,EAAEqN,SAAkBmN,EAAKrI,gBAAgBnS,IAC7CkG,SAAU,SAAAlG,GAAC,OAAIwa,EAAK9L,gBAAkB1O,EAAEN,OAAOuG,OAC/C0U,aAAcnb,KAAKsF,MAAM4J,gBACzBuD,WAAYtR,IAAKC,EAAE,gDACnBuF,OAAO,YAGflE,EAAAC,EAAAP,cAACuQ,GAAA,EAAD,KACIjQ,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAMyX,EAAKrI,mBAAmBvP,MAAM,UAAUwP,WAAS,GAAEzR,IAAKC,EAAE,OACjFqB,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,WACbyX,EAAK9L,gBAAkB,KACvB8L,EAAK9U,SAAS,CAAC+I,OAAQ,GAAIC,gBAAiB,OAC5C/N,IAAKC,EAAE,aAIZ,mDAIO,IAAAga,EAAApb,KAClB,OAAIA,KAAKsF,MAAMqQ,iBACHlT,EAAAC,EAAAP,cAACgQ,GAAA,EAAD,CACJ3O,MAAM,EACNsH,SAAS,KACTsH,WAAW,EACXhK,QAAS,kBAAMgT,EAAK/I,YACpBC,kBAAgB,4BAChBhK,mBAAiB,mCAEjB7F,EAAAC,EAAAP,cAACoQ,GAAA,EAAD,CAAa/J,GAAG,6BAA6BxI,KAAKiB,MAAM0C,OAASxC,IAAKC,EAAE,6BACxEqB,EAAAC,EAAAP,cAACqQ,GAAA,EAAD,KACI/P,EAAAC,EAAAP,cAAA,SAAIhB,IAAKC,EAAE,mBAEfqB,EAAAC,EAAAP,cAACuQ,GAAA,EAAD,KACIjQ,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAM6X,EAAKlN,YAAY9K,MAAM,UAAUwP,WAAS,GAAEzR,IAAKC,EAAE,OAC1EqB,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAM6X,EAAKlV,SAAS,CAACyP,iBAAkB,OAAOxU,IAAKC,EAAE,aAIvE,iDAIK,IAAAia,EAAArb,KAChB,OAAIA,KAAKsF,MAAM4F,aACHzI,EAAAC,EAAAP,cAACwJ,EAAAjJ,EAAD,CACJiG,IAAI,kBACJiD,OAAQ,QACRC,WAAY7L,KAAKiB,MAAM2E,OACvBkG,SAAU,GACVC,YAAY,EACZ3D,QAAS,kBAAMiT,EAAKnV,SAAS,CAACgF,cAAc,KAC5Cc,KAAM,SAACF,EAAU9K,GACbqa,EAAKnV,SAAS,CAACgF,cAAc,IAE7BmQ,EAAKpa,MAAM2E,OAAOC,UAAUiG,GACvB9F,KAAK,SAAAhC,GACF,GAAIA,EAAK,CACL,IAAMhD,EAAOmG,IAAM6J,qBAAqBhN,EAAK,KAAM,CAACiN,SAAU9P,IAAK2P,gBACnE3J,IAAM8K,gBAAgBjO,GAAMhD,GAAQG,IAAKC,EAAE,gBAAgB2L,QAAQ,UAAW,UAAMmF,OAAWA,EAAWmJ,EAAKpa,MAAM8E,YAAc,IAAMsV,EAAKpa,MAAMS,SAAU2Z,EAAKpa,MAAMH,OAAO2P,UAChL4K,EAAK1K,WAAW3M,EAAIvC,KACpB4Z,EAAKlF,gBAAkBnS,EAAIvC,IAEvB4Z,EAAK/V,MAAMyQ,cAAgB/R,EAAIvC,MAC/B4Z,EAAKnV,SAAS,CAAC6P,YAAa/R,EAAIvC,MAChC4Z,EAAKrF,cAAgBc,aAAauE,EAAKrF,cACvCqF,EAAKrF,aAAenF,WAAW,WAC3BwK,EAAKnV,SAAS,CAAC6P,YAAa,KAC5BsF,EAAKrF,aAAe,MACrB,MAGPqF,EAAKpa,MAAM2E,OAAO+B,UAAU3D,EAAIvC,IAAKuC,GAChCgC,KAAK,kBAAMqV,EAAKzK,eAAe5M,EAAIvC,OACnCmG,MAAM,SAAAC,GAAG,OAAIwT,EAAKnV,SAAS,CAACqC,QAASV,WAE1CwT,EAAKnV,SAAS,CAACqC,QAASpH,IAAKC,EAAE,qBAM5C,6CAOX,IAFA,IAAMiM,EAASrN,KAAKsF,MAAM+H,OAAOiO,cAC3B5a,EAAS,GACNyP,EAAI,EAAGA,EAAInQ,KAAKsF,MAAMsQ,QAAQxF,OAAQD,IACvCnQ,KAAKsF,MAAM+H,SAAgF,IAAtErN,KAAKsF,MAAMsQ,QAAQzF,GAAGkH,aAAaiE,cAAc/N,QAAQF,IAClF3M,EAAOgN,KAAK1N,KAAKub,aAAavb,KAAKsF,MAAMsQ,QAAQzF,GAAIA,IAEzD,OAAQ1N,EAAAC,EAAAP,cAAA,OAAKwG,IAAI,cAAc9F,UAAW7C,KAAKiB,MAAM6B,QAAQiQ,WAAYrS,oCAGpE,IAAA8a,EAAAxb,KACL,OAAIA,KAAKsF,MAAMgK,QACH7M,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAmBlK,IAAI,kBAI/BlG,EAAAC,EAAAP,cAAA,QAAMwG,IAAI,QAAQ9F,UAAW7C,KAAKiB,MAAM6B,QAAQ2G,KAC5ChH,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAAQ5G,QAAS,kBAAMiY,EAAKtV,SAAS,CAACgF,cAAc,MAAQzI,EAAAC,EAAAP,cAACuB,EAAA,MAAD,OAC/IjB,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAC/E5G,QAAS,kBAAMiY,EAAK3F,QAAO,IAAOzL,SAAUpK,KAAKsF,MAAMuQ,QAAS7V,KAAKsF,MAAMuQ,OAAUpT,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAkB1P,KAAM,KAAWV,EAAAC,EAAAP,cAACuB,EAAA,UAAD,OAE9HjB,EAAAC,EAAAP,cAACmJ,EAAA,EAAD,CACImQ,YAAata,IAAKC,EAAE,UACpByB,UAAW7C,KAAKsF,MAAM+H,OACtB5G,MAAOzG,KAAKsF,MAAM+H,OAClB3G,SAAU,SAAAlG,GAAC,OAAIgb,EAAKtV,SAAS,CAACmH,OAAQ7M,EAAEN,OAAOuG,WAEnDhE,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,QAAQR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAAQ5G,QAAS,kBAAMiY,EAAKtV,SAAS,CAACmH,OAAQ,OAAM5K,EAAAC,EAAAP,cAACuB,EAAA,QAAD,CAAWmO,SAAS,WACpI7R,KAAK0b,gBACL1b,KAAKiT,gBACLjT,KAAKkT,mBACLlT,KAAKmM,oBACLnM,KAAK2b,8BAjkBQnX,aAklBfC,eArtBA,SAAAC,GAAK,MAAK,CACrB+E,IAAK,CACD1E,MAAO,OACPgG,OAAQ,QAEZnB,OAAQ,CACJxF,QAAS,eACT4G,cAAe,MACfrG,YAAa,GACboG,OAAQ,OACRoI,SAAU,UAEdJ,UAAW,CACPhI,OAAQ,oBACRoI,SAAU,OACVtI,SAAU,KAEdwC,OAAQ,CACJ1G,OAAQ,GAEZwD,OAAQ,CACJxF,YAAa,IAEjBsV,cAAe,CACXtV,YAAa,IAEjBiX,eAAgB,CACZxI,SAAU,WACVC,MAAO,EACPC,IAAK,GAEToH,YAAa,CACTtH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXsH,cAAe,CACXvH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEXiH,YAAa,GAGbN,cAAc,CACV5V,QAAS,eACT4G,cAAe,SACfjG,MAAO,IAEXkW,SAAU,CACN1H,UAAW,UAEfjC,gBAAgB,CACZiC,UAAW,UAEfwG,QAAS,CACLhP,OAAQ,GACRhG,MAAO,OACPqO,SAAU,YAEdmH,mBAAoB,CAChBnW,QAAS,QACTmP,UAAW,SACX1B,SAAU,IAEdmH,eAAgB,CACZzF,UAAW,SACX1B,SAAU,GACVgK,YAAa,GACbzX,QAAS,gBAEbqW,gBAAiB,CACbrH,SAAU,WACVE,IAAK,EACLwI,KAAM,GAEV7C,mBAAoB,CAChBlU,MAAO,IAEXsV,iBAAkB,CACdjW,QAAS,eACTW,MAAO,sBAEX+N,aAAc,CACV3B,WAAYzM,EAAM8O,QAAQC,QAAQC,MAClC5O,QAAS,GACT1B,MAAOsB,EAAM8O,QAAQC,QAAQE,cAEjCiG,YAAa,CACTrG,UAAW,UAEfmE,WAAY,CACR3S,MAAO,IAGXgU,WAAY,CACR3F,SAAU,WACVrI,OAAQ,IAEZoO,eAAgB,CACZjN,WAAY,EACZtH,UAAW,GACXR,QAAS,eACTyN,SAAU,GACV9M,MAAO,sBAEXqU,kBAAoB,CAChBvH,SAAU,EACV0B,UAAW,SACXnP,QAAS,SAEbyT,eAAgB,CACZ3L,WAAY,GAEhBqN,iBAAkB,CACdnG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPvO,QAAS,GAEbiX,eAAgB,CACZ3I,SAAU,WACVE,IAAK,GACLD,MAAO,GACPvO,QAAS,GAEbkT,oBAAqB,CACjBpT,UAAW,KAslBJH,CAAmB8Q,IC/uB5B3B,GAAiB,CACnBoI,MAAO,CAAC5Y,MAVI,UAUYT,KAAMmR,aAAQhS,KAAM,UAC5Cma,WAAY,CAAC7Y,MATA,UASiBT,KAAMkS,cAAU/S,KAAM,UACpDoa,IAAK,CAAC9Y,MATO,UASUT,KAAMkS,cAAU/S,KAAM,aAE7CkS,qBAAsB,CAAC5Q,MAZV,UAY2BT,KAAMsR,oBAAiBnS,KAAM,0BACrEoS,2BAA4B,CAAC9Q,MAfjB,UAeiCT,KAAMwR,mBAAQrS,KAAM,gCACjEsS,2BAA4B,CAAChR,MAfhB,OAeiCT,KAAM0R,qBAAUvS,KAAM,gCAEpE0S,oBAAqB,CAACpR,MAlBV,UAkB0BT,KAAMwR,mBAAQrS,KAAM,wBAC1D2S,oBAAqB,CAACrR,MAlBT,OAkB0BT,KAAM0R,qBAAUvS,KAAM,wBAE7D4S,SAAU,CAACtR,MAnBE,UAmBeT,KAAMgS,YAAW7S,KAAM,aAEnDgT,0BAA2B,CAAC1R,MAvBhB,UAuBgCT,KAAMwR,mBAAQrS,KAAM,+BAChEiT,0BAA2B,CAAC3R,MAvBf,OAuBgCT,KAAM0R,qBAAUvS,KAAM,+BAEnEkT,qBAAsB,CAAC5R,MAtBT,UAsB2BT,KAAMsS,gBAAiBnT,KAAM,0BACtEoT,sBAAuB,CAAC9R,MAvBV,UAuB4BT,KAAMsS,gBAAiBnT,KAAM,0BAEvEqT,aAAc,CAAC/R,MA3BF,UA2BmBT,KAAMyS,aAAUtT,KAAM,kBACtDuT,aAAc,CAACjS,MA1BD,UA0BmBT,KAAMyS,aAAUtT,KAAM,oBAGrDwT,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,UA6I9G6G,eACF,SAAAA,EAAYlb,GAAO,IAAAlB,EAAA,OAAAkF,OAAAC,EAAA,EAAAD,CAAAjF,KAAAmc,GACfpc,EAAAkF,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAAkX,GAAA9W,KAAArF,KAAMiB,IAED2S,GAAe4B,aAChBvQ,OAAO0K,KAAKiE,IAAgBhE,QAAQ,SAAAlN,GAAC,OAAIkR,GAAelR,GAAGZ,KAAOX,IAAKC,EAAEwS,GAAelR,GAAGZ,QAC3F8R,GAAe4B,YAAa,GAGhCzV,EAAKuF,MAAQ,CACT4J,gBAAiB,GACjBD,OAAQ,GACRwG,eAAgB,GAChBC,SAAU,GAEVxK,cAAc,EACdyK,iBAAkB,GAClBtG,QAAS,GACTuG,QAAS,GACTrN,QAAS,GACT8E,OAAQ,GACRiC,SAAS,EACTuG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjBhW,EAAKiW,aAAe,KACpBjW,EAAKkW,YAAc,KACnBlW,EAAKmW,iBAAmB,EACxBnW,EAAKmP,gBAAkB,GAEvBnP,EAAKoW,gBAAkB,KACvBpW,EAAKqW,mBAAqBrW,EAAKsW,cAAc1J,KAAnB1H,OAAA2H,GAAA,EAAA3H,CAAAlF,IAC1BA,EAAKuW,oBAAsBvW,EAAKwW,eAAe5J,KAApB1H,OAAA2H,GAAA,EAAA3H,CAAAlF,IAE3BA,EAAKkB,MAAM2E,OAAOC,UAAlB,kBAAAC,OAA8C/F,EAAKkB,MAAM8E,YAAzD,KAAAD,OAAwE/F,EAAKkB,MAAMS,WAAYsE,KAAK,SAAAhC,GAChGjE,EAAKkB,MAAM2E,OAAOK,SAAlB,kBAAAH,OAA6C/F,EAAKkB,MAAM8E,YAAxD,KAAAD,OAAuE/F,EAAKkB,MAAMS,SAAlF,WAAoGsE,KAAK,SAAAV,GAChGtB,GAAQA,EAAIjD,SAAYiD,EAAIjD,OAAOoF,SAAab,GAAUA,EAAMc,KAGjErG,EAAK8V,SAFL9V,EAAKmG,SAAS,CAACqC,QAASpH,IAAKC,EAAE,4BAA6BkO,SAAS,EAAOsG,QAAS,SAtClF7V,sEA8CZyW,GAAY,IAAAxU,EAAAhC,KACXyW,KAAKC,MAAQ1W,KAAK2W,WAAa,MAEnC3W,KAAK2W,WAAaF,KAAKC,MACnBF,EACAxW,KAAKkG,SAAS,CAACoJ,SAAS,EAAMuG,QAAQ,IAEtC7V,KAAKkG,SAAS,CAAC2P,QAAQ,IAG3Be,QAAQC,IAAI,gBAEZ7W,KAAKiW,YAAcpF,WAAW,WAC1B+F,QAAQC,IAAI,mBACZ7U,EAAKiU,YAAc,KACnBjU,EAAKkU,mBACDlU,EAAKkU,iBAAmB,EACxBlU,EAAK6T,OAAOW,GAEZxU,EAAKkE,SAAS,CAACqC,QAASpH,IAAKC,EAAE,2BAEpC,KAEHpB,KAAKiB,MAAM2E,OAAOsK,OAAOlQ,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU,cAAe,KAAM,SAAAoL,GAC9F9K,EAAKiU,aAAea,aAAa9U,EAAKiU,aACtCjU,EAAKkU,iBAAmB,EACxBlU,EAAKiU,YAAc,KAEfjU,EAAKmU,kBACAnU,EAAK4P,OAAO5P,EAAKmU,gBAAiBrJ,IACnC9K,EAAKkE,SAAS,CAACqC,QAASpH,IAAKC,EAAE,0BAA2BY,EAAKmU,mBAEnEnU,EAAKmU,gBAAkB,MAG3BS,QAAQC,IAAI,oBAEZ7U,EAAKkE,SAAS,CAAC0P,QAAS9I,EAAMwC,SAAS,EAAOD,QAAS,GAAIwG,QAAQ,6CAI7DrN,EAAIlD,GAAO,IAAA9C,EAAAxC,KACrB4W,QAAQC,IAAI,UAAYrO,EAAK,IAAMlD,EAAMc,IAAM,IAAMd,EAAMkC,KACvDlC,IAAuB,IAAdA,EAAMkC,MAA8B,IAAdlC,EAAMc,MACjCpG,KAAK+W,UAAUD,aAAa9W,KAAK+W,UACrC/W,KAAK+W,SAAWlG,WAAW,WACvBrO,EAAKuU,SAAW,KAChBvU,EAAKqT,UACN,6CAIIrN,EAAIlD,GACfA,IAAuB,IAAdA,EAAMkC,KAAgBlC,EAAMc,KAAOpG,KAAKkG,SAAS,CAACqC,QAASjD,EAAMc,mDAI1EpG,KAAKiB,MAAM2E,OAAOoH,eAAlB,GAAAlH,OAAoC9F,KAAKiB,MAAM8E,YAA/C,KAAAD,OAA8D9F,KAAKiB,MAAMS,SAAzE,kBAAmG1B,KAAKoW,oBACxGpW,KAAKiB,MAAM2E,OAAOoH,eAAlB,GAAAlH,OAAoC9F,KAAKiB,MAAM8E,YAA/C,KAAAD,OAA8D9F,KAAKiB,MAAMS,SAAzE,wBAAyG1B,KAAKsW,oEAI9GtW,KAAKiB,MAAM2E,OAAOqH,iBAAlB,GAAAnH,OAAsC9F,KAAKiB,MAAM8E,YAAjD,KAAAD,OAAgE9F,KAAKiB,MAAMS,SAA3E,kBAAqG1B,KAAKoW,oBAC1GpW,KAAKiB,MAAM2E,OAAOqH,iBAAlB,GAAAnH,OAAsC9F,KAAKiB,MAAM8E,YAAjD,KAAAD,OAAgE9F,KAAKiB,MAAMS,SAA3E,wBAA2G1B,KAAKsW,qBAC5GtW,KAAKgW,eACLc,aAAa9W,KAAKgW,cAClBhW,KAAKgW,aAAe,6CAIbxN,GACXxI,KAAKiB,MAAM2E,OAAOsK,OAAOlQ,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU,SAAU8G,sCAGhFA,EAAIwO,GACX,IAAM3H,EAAUzO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM+J,WACxB,IAAzBA,EAAQ9B,QAAQ/E,IAChB6G,EAAQ3B,KAAKlF,GACbxI,KAAKkG,SAAS,CAACmJ,WAAU,kBAAM2H,GAAMA,OAErCA,GAAMA,0CAIAxO,GACV,IAAM6G,EAAUzO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM+J,UAC/C/B,EAAM+B,EAAQ9B,QAAQ/E,IAEf,IAAT8E,IACA+B,EAAQ7B,OAAOF,EAAK,GACpBtN,KAAKkG,SAAS,CAACmJ,4CAIhB7G,EAAIoN,GAAS,IAAA9N,EAAA9H,KAEViX,GADNrB,EAAUA,GAAW5V,KAAKsF,MAAMsQ,SACTvF,KAAK,SAAA6G,GAAG,OAAIA,EAAIkF,QAAU5T,IACjD,QAAIyO,IACAjX,KAAKiB,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GACF,IAAIsM,EAAY2G,EAAOjW,KACE,kBAAdsP,GAA0BA,IACjCA,EAAYA,EAAUnP,IAAK2P,gBAAkBR,EAAUS,IAE3DjJ,EAAKoH,gBAAkBoB,EACvBxI,EAAK5B,SAAS,CAAC+I,OAAQzG,EAAI0G,gBAAiBoB,EAAWmF,eAAenF,OAEvE,uCAMHoF,GACR1V,KAAKkG,SAAS,CAACwP,WAAUC,kBAAkB,uCAGpC,IAAA9M,EAAA7I,KACHwI,EAAKxI,KAAKsF,MAAMoQ,SAEpB1V,KAAK2Q,WAAWnI,EAAI,WAChBK,EAAK5H,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAEF,OADAmD,IAAMqJ,iBAAiBxM,EAAK6E,EAAK5H,MAAM8E,YAAc,IAAM8C,EAAK5H,MAAMS,SAAUmH,EAAK5H,MAAMH,OAAO2P,UAC3F5H,EAAK5H,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WACF6C,EAAK3C,SAAS,CAACwP,SAAU,GAAIC,kBAAkB,EAAOI,YAAavN,IAEnEK,EAAKmN,cAAgBc,aAAajO,EAAKmN,cACvCnN,EAAKmN,aAAenF,WAAW,WAC3BhI,EAAK3C,SAAS,CAAC6P,YAAa,KAC5BlN,EAAKmN,aAAe,MACrB,KAGHnN,EAAK+H,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAIgB,EAAK5H,MAAMC,QAAQ2G,6CAI/BqP,GAAK,IAAAlO,EAAAhJ,KAETsX,EAAU,GAChB,IAAKJ,EAAII,QAEL,OADAV,QAAQC,IAAI,wBACL,KAGXK,EAAII,QAAQC,KAAK,SAAC7U,EAAG8U,GACjB,OAAI9U,IAAM8U,EAAU,EACV,UAAN9U,GAAuB,EACjB,UAAN8U,EAAsB,EACnB,IAGXvS,OAAO0K,KAAKiE,IAAgBhE,QAAQ,SAAAnH,GAChC,IAAqC,IAAjCyO,EAAII,QAAQ/J,QAAQ9E,GAAgB,CACpC,IAAMgP,EAAO7D,GAAenL,GAAQ9F,KACpC2U,EAAQ5J,KAAMjL,EAAAC,EAAAP,cAAA,QAAMwG,IAAKF,EAAQ9E,MAAOiQ,GAAenL,GAAQ3G,MAAMW,EAAAC,EAAAP,cAACsV,EAAD,CAAM5U,UAAWmG,EAAK/H,MAAM6B,QAAQ4U,WAAYvT,MAAO,CAACf,MAAOwQ,GAAenL,GAAQrF,cAInK,IAAK,IAAIV,EAAI,EAAGA,EAAIwU,EAAII,QAAQlH,OAAQ1N,IAC/BkR,GAAesD,EAAII,QAAQ5U,KAC5B4U,EAAQ5J,KAAMjL,EAAAC,EAAAP,cAAA,QAAMwG,IAAKuO,EAAII,QAAQ5U,IAAKwU,EAAII,QAAQ5U,KAG9D,OAAO4U,mCAGFK,GACL,IAAM7B,EAAWlV,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAMwQ,WAChDxI,EAAMwI,EAASvI,QAAQvN,KAAKsF,MAAMsQ,QAAQ+B,GAAS3W,OAC5C,IAATsM,EACAwI,EAASpI,KAAK1N,KAAKsF,MAAMsQ,QAAQ+B,GAAS3W,MAE1C8U,EAAStI,OAAOF,EAAK,GAEzBtN,KAAKkG,SAAS,CAAC4P,oDAGJtN,EAAIyP,EAAM3R,GAAM,IAAAkD,EAAAxJ,KAC3BA,KAAK2Q,WAAWnI,EAAI,WAChBgB,EAAKvI,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAYF,OAXAmD,IAAM8K,gBAAgBjO,OAAKkO,EAAW+F,EAAM3R,EAAMkD,EAAKvI,MAAM8E,YAAc,IAAMyD,EAAKvI,MAAMS,SAAU8H,EAAKvI,MAAMH,OAAO2P,UAEpHjH,EAAKlE,MAAMyQ,cAAgBvN,IAC3BgB,EAAKtD,SAAS,CAAC6P,YAAavN,IAC5BgB,EAAKwM,cAAgBc,aAAatN,EAAKwM,cACvCxM,EAAKwM,aAAenF,WAAW,WAC3BrH,EAAKtD,SAAS,CAAC6P,YAAa,KAC5BvM,EAAKwM,aAAe,MACrB,MAGAxM,EAAKvI,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WAEFwD,EAAKoH,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAI2B,EAAKvI,MAAMC,QAAQ2G,gDAI5BqP,EAAKS,EAASnP,EAAIlC,GAAM,IAAA+H,EAAArO,KACrC,IAAa,IAATsG,EAAgB,CAIhB,IAHA,IAAMsR,EAAQ,CACTnV,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,KAAIhE,EAAAC,EAAAP,cAAA,UAAKhB,IAAKC,EAAE,cAEpC+O,EAAI,EAAGA,EAAImF,GAAWlF,OAAQD,IACnCyH,EAAMlK,KAAMjL,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAW9C,IAAK2M,GAAWnF,GAAI1J,MAAO6O,GAAWnF,IAAI1N,EAAAC,EAAAP,cAAA,UAAKhB,IAAKC,EAAEkU,GAAWnF,OAE5F,OACI1N,EAAAC,EAAAP,cAACiJ,EAAA,EAAD,KACI3I,EAAAC,EAAAP,cAACkJ,EAAA,EAAD,CAAQ5E,MAAOH,GAAQ,IAAKI,SAAU,SAAAlG,GAAC,OAAI6N,EAAK0J,eAAevP,OAAI0J,EAAW1R,EAAEN,OAAOuG,SAASmR,GAChGnV,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,CAAgB7I,UAAW7C,KAAKiB,MAAM6B,QAAQkV,qBAAsB7W,IAAKC,EAAE,WAGnF,MAAO,0CAIA8V,EAAKS,GAChB,IAAMjX,EAAS,GACToC,EAAU9C,KAAKiB,MAAM6B,QAErB0F,EAAK0O,EAAImF,KAAKC,MACdtb,EAAOkW,EAAIqF,KAsDjB,OAjDA7b,EAAOgN,KAAMjL,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,MAAQH,EAAI3F,UAAWC,EAAQiW,WAAY5U,MAAO,CAACgN,WAncpD,YAoclB1O,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQqW,gBAAiBnY,EAAKwb,eAC9C/Z,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQ2Z,eACpBha,EAAAC,EAAAP,cAAA,WAAM+U,EAAImF,KAAKC,OACdpF,EAAImF,KAAKK,OAASxF,EAAImF,KAAKK,QAAUxF,EAAImF,KAAKC,MAAS7Z,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQ6Z,iBAAkBzF,EAAImF,KAAKK,OAAgB,QAKnIxF,EAAI0F,WAAWhN,QAAQ,SAAAvJ,GACnB3F,EAAOgN,KAAMjL,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,MAAQtC,EAAKiW,MAAOzZ,UAAWC,EAAQiW,WAAY5U,MAAO,CAACgN,WA7chE,YA8cd1O,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQqW,gBAAiB9S,EAAKrF,KAAKwb,eACnD/Z,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQ2Z,eACpBha,EAAAC,EAAAP,cAAA,WAAMkE,EAAKiW,OACVjW,EAAKqW,OAASrW,EAAKqW,QAAUrW,EAAKiW,MAAS7Z,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQ6Z,iBAAkBtW,EAAKqW,OAAgB,UAmChHhc,uCAGEwW,EAAKS,GAAS,IAAAO,EAAAlY,KAEjB8V,GAAsD,IAA3C9V,KAAKsF,MAAMwQ,SAASvI,QAAQ2J,EAAIlW,MAC7CmQ,EAAcwG,EAAU,EAAK,UAAY,UACvCtI,GAAqD,IAA3CrP,KAAKsF,MAAM+J,QAAQ9B,QAAQ2J,EAAIkF,OAS/C,OARI/M,EACA8B,EA9fU,YA+fH+F,EAAIkF,QAAUpc,KAAKsF,MAAMyQ,cAChC5E,EA9fe,WAmgBZ,CACF1O,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,OAASgP,EAAS9U,UAAW7C,KAAKiB,MAAM6B,QAAQiX,QAAS5V,MAAO,CAACgN,eACxE1O,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQkX,eAAgBrC,EAAU,EAA7D,KACAlV,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAY7F,UAAW7C,KAAKiB,MAAM6B,QAAQmX,cAAe1W,QAAS,kBAAM2U,EAAKgC,SAASvC,KACjFT,EAAI0F,WAAWxM,OACX3N,EAAAC,EAAAP,cAACgY,GAAA,EAAD,CAAOC,aAAclD,EAAI0F,WAAWxM,OAAQhN,MAAM,WAAW0S,EAAYrT,EAAAC,EAAAP,cAACuB,EAAA,aAAD,MAAoBjB,EAAAC,EAAAP,cAACuB,EAAA,qBAAD,OAC7FoS,EAAYrT,EAAAC,EAAAP,cAACuB,EAAA,aAAD,MAAoBjB,EAAAC,EAAAP,cAACuB,EAAA,qBAAD,OAEzCjB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQuX,iBAAkBlW,MAAO,CAACC,QAAS,eAAgBgP,SAAU,aAC5F3Q,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQwX,aAAcpD,EAAIlW,MACtDyB,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQyX,oBAAqBrD,EAAI2F,aAC5DxN,EAAW5M,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAkBhQ,UAAW7C,KAAKiB,MAAM6B,QAAQ2X,gBAAiBtX,KAAM,KAAS,MAEhGV,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQkW,gBAAiBhZ,KAAKkZ,cAAchC,IACxEzU,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,OAAOR,UAAW7C,KAAKiB,MAAM6B,QAAQ4X,YAAanX,QAAS,kBAAM2U,EAAKtG,OAAOsF,EAAIkF,SAAQ3Z,EAAAC,EAAAP,cAACuB,EAAA,OAAD,CAAUmO,SAAS,YACnIpP,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,SAASR,UAAW7C,KAAKiB,MAAM6B,QAAQ6X,cAAepX,QAAS,kBAAM2U,EAAKsB,YAAYtC,EAAIkF,SAAQ3Z,EAAAC,EAAAP,cAACuB,EAAA,SAAD,CAAYmO,SAAS,aAGlJiE,EAAW9V,KAAK4a,eAAe1D,EAAKS,GAAW,8CAIvC,IAAAQ,EAAAnY,KACZ,OAAIA,KAAKsF,MAAMiD,QACH9F,EAAAC,EAAAP,cAAC2G,EAAApG,EAAD,CAAeqG,KAAM/I,KAAKsF,MAAMiD,QAASH,QAAS,kBAAM+P,EAAKjS,SAAS,CAACqC,QAAS,QAEjF,6CAIC/H,GAAG,IAAAkZ,EAAA1Z,KACfQ,GAAKA,EAAEua,iBAEP/a,KAAK2Q,WAAW3Q,KAAKsF,MAAM2J,OAAQ,WAC/B,IAAMzG,EAAKkR,EAAKpU,MAAM2J,OACtByK,EAAKxT,SAAS,CAAC+I,OAAQ,GAAIwG,eAAgB,GAAIM,YAAavN,IAE5DkR,EAAK1D,cAAgBc,aAAa4C,EAAK1D,cACvC0D,EAAK1D,aAAenF,WAAW,WAC3B6I,EAAKxT,SAAS,CAAC6P,YAAa,KAC5B2D,EAAK1D,aAAe,MACrB,KAEH0D,EAAKzY,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAEF,OADAmD,IAAM8K,gBAAgBjO,EAAK0V,EAAKxK,qBAAiBgD,OAAWA,EAAWwH,EAAKzY,MAAM8E,YAAc,IAAM2T,EAAKzY,MAAMS,SAAUgY,EAAKzY,MAAMH,OAAO2P,UACtIiJ,EAAKzY,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WAEF0T,EAAK9I,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAI6R,EAAKzY,MAAMC,QAAQ2G,kDAI1B,IAAAgT,EAAA7a,KACf,OAAIA,KAAKsF,MAAM2J,OACHxM,EAAAC,EAAAP,cAACgQ,GAAA,EAAD,CACJ3O,MAAM,EACNsH,SAAS,KACTsH,WAAW,EACXhK,QAAS,kBAAMyS,EAAKxI,YACpBC,kBAAgB,uBAChBhK,mBAAiB,8BAEjB7F,EAAAC,EAAAP,cAACoQ,GAAA,EAAD,CAAa/J,GAAG,wBAAwBxI,KAAKiB,MAAM0C,OAASxC,IAAKC,EAAE,oBAAqBpB,KAAKsF,MAAMmQ,iBACnGhT,EAAAC,EAAAP,cAACqQ,GAAA,EAAD,KACI/P,EAAAC,EAAAP,cAAA,SAAGM,EAAAC,EAAAP,cAAA,mBAAH,IAAoBM,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQmY,UAAWjb,KAAKsF,MAAM2J,SAC9ExM,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACIpC,MAAO,CAACY,MAAO,QACfyB,MAAOrF,IAAKC,EAAE,cACd8Z,UAAW,SAAA1a,GAAC,OACM,KAAdA,EAAEqN,SAAkBgN,EAAKlI,gBAAgBnS,IAC7CkG,SAAU,SAAAlG,GAAC,OAAIqa,EAAK3L,gBAAkB1O,EAAEN,OAAOuG,OAC/C0U,aAAcnb,KAAKsF,MAAM4J,gBACzBuD,WAAYtR,IAAKC,EAAE,gDACnBuF,OAAO,YAGflE,EAAAC,EAAAP,cAACuQ,GAAA,EAAD,KACIjQ,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAMsX,EAAKlI,mBAAmBvP,MAAM,UAAUwP,WAAS,GAAEzR,IAAKC,EAAE,OACjFqB,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,WACbsX,EAAK3L,gBAAkB,KACvB2L,EAAK3U,SAAS,CAAC+I,OAAQ,GAAIC,gBAAiB,OAC5C/N,IAAKC,EAAE,aAIZ,mDAIO,IAAA0Z,EAAA9a,KAClB,OAAIA,KAAKsF,MAAMqQ,iBACHlT,EAAAC,EAAAP,cAACgQ,GAAA,EAAD,CACJ3O,MAAM,EACNsH,SAAS,KACTsH,WAAW,EACXhK,QAAS,kBAAM0S,EAAKzI,YACpBC,kBAAgB,4BAChBhK,mBAAiB,mCAEjB7F,EAAAC,EAAAP,cAACoQ,GAAA,EAAD,CAAa/J,GAAG,6BAA6BxI,KAAKiB,MAAM0C,OAASxC,IAAKC,EAAE,6BACxEqB,EAAAC,EAAAP,cAACqQ,GAAA,EAAD,KACI/P,EAAAC,EAAAP,cAAA,SAAIhB,IAAKC,EAAE,mBAEfqB,EAAAC,EAAAP,cAACuQ,GAAA,EAAD,KACIjQ,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAMuX,EAAK5M,YAAY9K,MAAM,UAAUwP,WAAS,GAAEzR,IAAKC,EAAE,OAC1EqB,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAMuX,EAAK5U,SAAS,CAACyP,iBAAkB,OAAOxU,IAAKC,EAAE,aAIvE,iDAIK,IAAA4Z,EAAAhb,KAChB,OAAIA,KAAKsF,MAAM4F,aACHzI,EAAAC,EAAAP,cAACwJ,EAAAjJ,EAAD,CACJiG,IAAI,kBACJiD,OAAQ,QACRC,WAAY7L,KAAKiB,MAAM2E,OACvBkG,SAAU,GACVC,YAAY,EACZ3D,QAAS,kBAAM4S,EAAK9U,SAAS,CAACgF,cAAc,KAC5Cc,KAAM,SAACF,EAAU9K,GACbga,EAAK9U,SAAS,CAACgF,cAAc,IAE7B8P,EAAK/Z,MAAM2E,OAAOC,UAAUiG,GACvB9F,KAAK,SAAAhC,GACF,GAAIA,EAAK,CACL,IAAMhD,EAAOmG,IAAM6J,qBAAqBhN,EAAK,KAAM,CAACiN,SAAU9P,IAAK2P,gBACnE3J,IAAM8K,gBAAgBjO,GAAMhD,GAAQG,IAAKC,EAAE,gBAAgB2L,QAAQ,UAAW,UAAMmF,OAAWA,EAAW8I,EAAK/Z,MAAM8E,YAAc,IAAMiV,EAAK/Z,MAAMS,SAAUsZ,EAAK/Z,MAAMH,OAAO2P,UAChLuK,EAAKrK,WAAW3M,EAAIvC,KACpBuZ,EAAK7E,gBAAkBnS,EAAIvC,IAEvBuZ,EAAK1V,MAAMyQ,cAAgB/R,EAAIvC,MAC/BuZ,EAAK9U,SAAS,CAAC6P,YAAa/R,EAAIvC,MAChCuZ,EAAKhF,cAAgBc,aAAakE,EAAKhF,cACvCgF,EAAKhF,aAAenF,WAAW,WAC3BmK,EAAK9U,SAAS,CAAC6P,YAAa,KAC5BiF,EAAKhF,aAAe,MACrB,MAGPgF,EAAK/Z,MAAM2E,OAAO+B,UAAU3D,EAAIvC,IAAKuC,GAChCgC,KAAK,kBAAMgV,EAAKpK,eAAe5M,EAAIvC,OACnCmG,MAAM,SAAAC,GAAG,OAAImT,EAAK9U,SAAS,CAACqC,QAASV,WAE1CmT,EAAK9U,SAAS,CAACqC,QAASpH,IAAKC,EAAE,qBAM5C,6CAOX,IAFA,IAAMiM,EAASrN,KAAKsF,MAAM+H,OAAOiO,cAC3B5a,EAAS,GACNyP,EAAI,EAAGA,EAAInQ,KAAKsF,MAAMsQ,QAAQxF,OAAQD,IACvCnQ,KAAKsF,MAAM+H,SAAwE,IAA9DrN,KAAKsF,MAAMsQ,QAAQzF,GAAGnP,KAAKsa,cAAc/N,QAAQF,IAC1E3M,EAAOgN,KAAK1N,KAAKub,aAAavb,KAAKsF,MAAMsQ,QAAQzF,GAAIA,IAEzD,OAAQ1N,EAAAC,EAAAP,cAAA,OAAKwG,IAAI,cAAc9F,UAAW7C,KAAKiB,MAAM6B,QAAQiQ,WAAYrS,oCAGpE,IAAA0a,EAAApb,KACL,OAAIA,KAAKsF,MAAMgK,QACH7M,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAmBlK,IAAI,kBAI/BlG,EAAAC,EAAAP,cAAA,QAAMwG,IAAI,QAAQ9F,UAAW7C,KAAKiB,MAAM6B,QAAQ2G,KAC5ChH,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAAQ5G,QAAS,kBAAM6X,EAAKlV,SAAS,CAACgF,cAAc,MAAQzI,EAAAC,EAAAP,cAACuB,EAAA,MAAD,OAC/IjB,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAC/E5G,QAAS,kBAAM6X,EAAKvF,QAAO,IAAOzL,SAAUpK,KAAKsF,MAAMuQ,QAAS7V,KAAKsF,MAAMuQ,OAAUpT,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAkB1P,KAAM,KAAWV,EAAAC,EAAAP,cAACuB,EAAA,UAAD,OAE9HjB,EAAAC,EAAAP,cAACmJ,EAAA,EAAD,CACImQ,YAAata,IAAKC,EAAE,UACpByB,UAAW7C,KAAKsF,MAAM+H,OACtB5G,MAAOzG,KAAKsF,MAAM+H,OAClB3G,SAAU,SAAAlG,GAAC,OAAI4a,EAAKlV,SAAS,CAACmH,OAAQ7M,EAAEN,OAAOuG,WAEnDhE,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,QAAQR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAAQ5G,QAAS,kBAAM6X,EAAKlV,SAAS,CAACmH,OAAQ,OAAM5K,EAAAC,EAAAP,cAACuB,EAAA,QAAD,CAAWmO,SAAS,WACpI7R,KAAK0b,gBACL1b,KAAKiT,gBACLjT,KAAKkT,mBACLlT,KAAKmM,oBACLnM,KAAK2b,8BA5hBKnX,aA6iBZC,eAxrBA,SAAAC,GAAK,MAAK,CACrB+E,IAAK,CACD1E,MAAO,OACPgG,OAAQ,QAEZnB,OAAQ,CACJxF,QAAS,eACT4G,cAAe,MACfrG,YAAa,GACboG,OAAQ,OACRoI,SAAU,UAEdJ,UAAW,CACPhI,OAAQ,oBACRoI,SAAU,OACVtI,SAAU,KAEdwC,OAAQ,CACJ1G,OAAQ,GAEZwD,OAAQ,CACJxF,YAAa,IAEjBsV,cAAe,CACXtV,YAAa,IAEjBiX,eAAgB,CACZxI,SAAU,WACVC,MAAO,EACPC,IAAK,GAEToH,YAAa,CACTtH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXsH,cAAe,CACXvH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEXiH,YAAa,GAGbN,cAAc,CACV5V,QAAS,eACT4G,cAAe,SACfjG,MAAO,IAEXkW,SAAU,CACN1H,UAAW,UAEfjC,gBAAgB,CACZiC,UAAW,UAEfwG,QAAS,CACLhP,OAAQ,GACRhG,MAAO,OACPqO,SAAU,YAEdmH,mBAAoB,CAChBnW,QAAS,QACTmP,UAAW,SACX1B,SAAU,IAEdmH,eAAgB,CACZzF,UAAW,SACX1B,SAAU,GACVgK,YAAa,GACbzX,QAAS,gBAEbqW,gBAAiB,CACbrH,SAAU,WACVE,IAAK,EACLwI,KAAM,GAEV7C,mBAAoB,CAChBlU,MAAO,IAEXsV,iBAAkB,CACdjW,QAAS,eACTW,MAAO,sBAEX+N,aAAc,CACV3B,WAAYzM,EAAM8O,QAAQC,QAAQC,MAClC5O,QAAS,GACT1B,MAAOsB,EAAM8O,QAAQC,QAAQE,cAEjCiG,YAAa,CACTrG,UAAW,UAEfmE,WAAY,CACR3S,MAAO,IAGXgU,WAAY,CACR3F,SAAU,WACVrI,OAAQ,IAEZoO,eAAgB,CACZjN,WAAY,EACZtH,UAAW,GACXiG,SAAU,IACVzG,QAAS,eACTyN,SAAU,GACVgK,YAAa,IAGjBY,cAAgB,CACZ5K,SAAU,GACV0B,UAAW,SACXnP,QAAS,eACT8H,WAAY,IAEhByQ,gBAAkB,CACdpJ,UAAW,SACXnP,QAAS,QACThB,MAAO,QAEXyU,eAAgB,CACZ3L,WAAY,GAEhBqN,iBAAkB,CACdnG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPvO,QAAS,GAEbiX,eAAgB,CACZ3I,SAAU,WACVE,IAAK,GACLD,MAAO,GACPvO,QAAS,GAEbkT,oBAAqB,CACjBpT,UAAW,KAijBJH,CAAmB0X,ICntB5BvI,GAAiB,CACnBC,OAAQ,CAACzQ,MATG,UASaT,KAAMmR,aAAQhS,KAAM,WAC7CiS,QAAS,CAAC3Q,MATG,OAScT,KAAMmR,aAAQhS,KAAM,YAE/CkS,qBAAsB,CAAC5Q,MAVV,UAU2BT,KAAMsR,oBAAiBnS,KAAM,0BACrEoS,2BAA4B,CAAC9Q,MAbjB,UAaiCT,KAAMwR,mBAAQrS,KAAM,gCACjEsS,2BAA4B,CAAChR,MAbhB,OAaiCT,KAAM0R,qBAAUvS,KAAM,gCAEpEwS,cAAe,CAAClR,MAdH,UAcoBT,KAAM4R,eAAgBzS,KAAM,kBAC7D0S,oBAAqB,CAACpR,MAjBV,UAiB0BT,KAAMwR,mBAAQrS,KAAM,wBAC1D2S,oBAAqB,CAACrR,MAjBT,OAiB0BT,KAAM0R,qBAAUvS,KAAM,wBAE7D4S,SAAU,CAACtR,MAlBE,UAkBeT,KAAMgS,YAAW7S,KAAM,aAEnD8S,oBAAqB,CAACxR,MApBT,UAoB0BT,KAAMkS,cAAU/S,KAAM,yBAC7DgT,0BAA2B,CAAC1R,MAvBhB,UAuBgCT,KAAMwR,mBAAQrS,KAAM,+BAChEiT,0BAA2B,CAAC3R,MAvBf,OAuBgCT,KAAM0R,qBAAUvS,KAAM,+BAEnEkT,qBAAsB,CAAC5R,MAvBT,UAuB2BT,KAAMsS,gBAAiBnT,KAAM,0BACtEoT,sBAAuB,CAAC9R,MAxBV,UAwB4BT,KAAMsS,gBAAiBnT,KAAM,0BAEvEqT,aAAc,CAAC/R,MA3BF,UA2BmBT,KAAMyS,aAAUtT,KAAM,kBACtDuT,aAAc,CAACjS,MA3BD,UA2BmBT,KAAMyS,aAAUtT,KAAM,oBAGrDwT,GAAa,CAAC,QAAS,SAAU,aAAc,mBAAoB,gBAAiB,YAAa,YAAa,UAqI9GwH,eACF,SAAAA,EAAY7b,GAAO,IAAAlB,EAAA,OAAAkF,OAAAC,EAAA,EAAAD,CAAAjF,KAAA8c,GACf/c,EAAAkF,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAA6X,GAAAzX,KAAArF,KAAMiB,IAED2S,GAAe4B,aAChBvQ,OAAO0K,KAAKiE,IAAgBhE,QAAQ,SAAAlN,GAAC,OAAIkR,GAAelR,GAAGZ,KAAOX,IAAKC,EAAEwS,GAAelR,GAAGZ,QAC3F8R,GAAe4B,YAAa,GAGhCzV,EAAKuF,MAAQ,CACT4J,gBAAiB,GACjBD,OAAQ,GACRwG,eAAgB,GAChBC,SAAU,GAEVxK,cAAc,EACdyK,iBAAkB,GAClBtG,QAAS,GACTuG,QAAS,GACTrN,QAAS,GACT8E,OAAQ,GACRiC,SAAS,EACTuG,QAAQ,EACRC,SAAU,GACVC,YAAa,IAGjBhW,EAAKiW,aAAe,KACpBjW,EAAKkW,YAAc,KACnBlW,EAAKmW,iBAAmB,EACxBnW,EAAKmP,gBAAkB,GAEvBnP,EAAKoW,gBAAkB,KACvBpW,EAAKqW,mBAAqBrW,EAAKsW,cAAc1J,KAAnB1H,OAAA2H,GAAA,EAAA3H,CAAAlF,IAC1BA,EAAKuW,oBAAsBvW,EAAKwW,eAAe5J,KAApB1H,OAAA2H,GAAA,EAAA3H,CAAAlF,IAE3BA,EAAKkB,MAAM2E,OAAOC,UAAlB,kBAAAC,OAA8C/F,EAAKkB,MAAM8E,YAAzD,KAAAD,OAAwE/F,EAAKkB,MAAMS,WAAYsE,KAAK,SAAAhC,GAChGjE,EAAKkB,MAAM2E,OAAOK,SAAlB,kBAAAH,OAA6C/F,EAAKkB,MAAM8E,YAAxD,KAAAD,OAAuE/F,EAAKkB,MAAMS,SAAlF,WAAoGsE,KAAK,SAAAV,GAChGtB,GAAQA,EAAIjD,SAAYiD,EAAIjD,OAAOoF,SAAab,GAAUA,EAAMc,KAGjErG,EAAK8V,SAFL9V,EAAKmG,SAAS,CAACqC,QAASpH,IAAKC,EAAE,4BAA6BkO,SAAS,EAAOsG,QAAS,SAtClF7V,sEA8CZyW,GAAY,IAAAxU,EAAAhC,KACXyW,KAAKC,MAAQ1W,KAAK2W,WAAa,MACnC3W,KAAK2W,WAAaF,KAAKC,MACnBF,EACAxW,KAAKkG,SAAS,CAACoJ,SAAS,EAAMuG,QAAQ,IAEtC7V,KAAKkG,SAAS,CAAC2P,QAAQ,IAE3Be,QAAQC,IAAI,gBACZ7W,KAAKiW,YAAcpF,WAAW,WAC1B+F,QAAQC,IAAI,mBACZ7U,EAAKiU,YAAc,KACnBjU,EAAKkU,mBACDlU,EAAKkU,iBAAmB,EACxBlU,EAAK6T,OAAOW,GAEZxU,EAAKkE,SAAS,CAACqC,QAASpH,IAAKC,EAAE,2BAEpC,KAEHpB,KAAKiB,MAAM2E,OAAOsK,OAAOlQ,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU,SAAU,KAAM,SAAAoL,GACzF9K,EAAKiU,aAAea,aAAa9U,EAAKiU,aACtCjU,EAAKkU,iBAAmB,EACxBlU,EAAKiU,YAAc,KACfjU,EAAKmU,kBACAnU,EAAK4P,OAAO5P,EAAKmU,gBAAiBrJ,IACnC9K,EAAKkE,SAAS,CAACqC,QAASpH,IAAKC,EAAE,0BAA2BY,EAAKmU,mBAEnEnU,EAAKmU,gBAAkB,MAE3BS,QAAQC,IAAI,oBAEZ7U,EAAKkE,SAAS,CAAC0P,QAAS9I,EAAMwC,SAAS,EAAOD,QAAS,GAAIwG,QAAQ,6CAI7DrN,EAAIlD,GAAO,IAAA9C,EAAAxC,KACrB4W,QAAQC,IAAR,UAAA/Q,OAAsB0C,EAAtB,KAAA1C,OAA4BR,EAAQA,EAAMc,IAAM,IAAMd,EAAMkC,IAAM,SAC9DlC,IAAuB,IAAdA,EAAMkC,MAA8B,IAAdlC,EAAMc,MACjCpG,KAAK+W,UAAUD,aAAa9W,KAAK+W,UACrC/W,KAAK+W,SAAWlG,WAAW,WACvBrO,EAAKuU,SAAW,KAChBvU,EAAKqT,UACN,6CAIIrN,EAAIlD,GACfA,IAAuB,IAAdA,EAAMkC,KAAgBlC,EAAMc,KAAOpG,KAAKkG,SAAS,CAACqC,QAASjD,EAAMc,mDAI1EpG,KAAKiB,MAAM2E,OAAOoH,eAAlB,GAAAlH,OAAoC9F,KAAKiB,MAAM8E,YAA/C,KAAAD,OAA8D9F,KAAKiB,MAAMS,SAAzE,kBAAmG1B,KAAKoW,oBACxGpW,KAAKiB,MAAM2E,OAAOoH,eAAlB,GAAAlH,OAAoC9F,KAAKiB,MAAM8E,YAA/C,KAAAD,OAA8D9F,KAAKiB,MAAMS,SAAzE,wBAAyG1B,KAAKsW,oEAI9GtW,KAAKiB,MAAM2E,OAAOqH,iBAAlB,GAAAnH,OAAsC9F,KAAKiB,MAAM8E,YAAjD,KAAAD,OAAgE9F,KAAKiB,MAAMS,SAA3E,kBAAqG1B,KAAKoW,oBAC1GpW,KAAKiB,MAAM2E,OAAOqH,iBAAlB,GAAAnH,OAAsC9F,KAAKiB,MAAM8E,YAAjD,KAAAD,OAAgE9F,KAAKiB,MAAMS,SAA3E,wBAA2G1B,KAAKsW,qBAC5GtW,KAAKgW,eACLc,aAAa9W,KAAKgW,cAClBhW,KAAKgW,aAAe,6CAIbxN,GACXxI,KAAKiB,MAAM2E,OAAOsK,OAAOlQ,KAAKiB,MAAM8E,YAAc,IAAM/F,KAAKiB,MAAMS,SAAU,SAAU8G,sCAGhFA,EAAIwO,GACX,IAAM3H,EAAUzO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM+J,WACxB,IAAzBA,EAAQ9B,QAAQ/E,IAChB6G,EAAQ3B,KAAKlF,GACbxI,KAAKkG,SAAS,CAACmJ,WAAU,kBAAM2H,GAAMA,OAErCA,GAAMA,0CAIAxO,GACV,IAAM6G,EAAUzO,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAM+J,UAC/C/B,EAAM+B,EAAQ9B,QAAQ/E,IAEf,IAAT8E,IACA+B,EAAQ7B,OAAOF,EAAK,GACpBtN,KAAKkG,SAAS,CAACmJ,4CAIhB7G,EAAIoN,GAAS,IAAA9N,EAAA9H,KAEViX,GADNrB,EAAUA,GAAW5V,KAAKsF,MAAMsQ,SACTvF,KAAK,SAAA6G,GAAG,OAAIA,EAAIC,2BAA2B3O,KAAOA,IACzE,QAAIyO,IACAjX,KAAKiB,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GACF,IAAIsM,EAAY2G,EAAOE,2BAA2BC,cAAgBH,EAAOE,2BAA2BC,cAAgBH,EAAOI,aAClG,kBAAd/G,GAA0BA,IACjCA,EAAYA,EAAUnP,IAAK2P,gBAAkBR,EAAUS,IAE3DjJ,EAAKoH,gBAAkBoB,EACvBxI,EAAK5B,SAAS,CAAC+I,OAAQzG,EAAI0G,gBAAiBoB,EAAWmF,eAAgBtO,IAAM6J,qBAAqBhN,EAAK,KAAM,CAACiN,SAAU9P,IAAK2P,qBAE9H,uCAMH4E,GACR1V,KAAKkG,SAAS,CAACwP,WAAUC,kBAAkB,uCAGpC,IAAA9M,EAAA7I,KACHwI,EAAKxI,KAAKsF,MAAMoQ,SAEpB1V,KAAK2Q,WAAWnI,EAAI,WAChBK,EAAK5H,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAEF,OADAmD,IAAMqJ,iBAAiBxM,EAAK6E,EAAK5H,MAAM8E,YAAc,IAAM8C,EAAK5H,MAAMS,SAAUmH,EAAK5H,MAAMH,OAAO2P,UAC3F5H,EAAK5H,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WACF6C,EAAK3C,SAAS,CAACwP,SAAU,GAAIC,kBAAkB,EAAOI,YAAavN,IAEnEK,EAAKmN,cAAgBc,aAAajO,EAAKmN,cACvCnN,EAAKmN,aAAenF,WAAW,WAC3BhI,EAAK3C,SAAS,CAAC6P,YAAa,KAC5BlN,EAAKmN,aAAe,MACrB,KAGHnN,EAAK+H,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAIgB,EAAK5H,MAAMC,QAAQ2G,6CAI/BqP,GAAK,IAAAlO,EAAAhJ,KAETsX,EAAU,GAChB,IAAKJ,EAAI6F,OAEL,OADAnG,QAAQC,IAAI,wBACL,KAEXK,EAAI6F,OAAOxF,KAAK,SAAC7U,EAAG8U,GAChB,OAAI9U,IAAM8U,EAAU,EACV,WAAN9U,GAAwB,EAClB,WAAN8U,EAAuB,EAEjB,YAAN9U,GAAyB,EACnB,YAAN8U,EAAwB,EACrB,IAGXvS,OAAO0K,KAAKiE,IAAgBhE,QAAQ,SAAAnH,GAChC,IAAqC,IAAjCyO,EAAII,QAAQ/J,QAAQ9E,GAAgB,CACpC,IAAMgP,EAAO7D,GAAenL,GAAQ9F,KACpC2U,EAAQ5J,KAAMjL,EAAAC,EAAAP,cAAA,QAAMwG,IAAKF,EAAQ9E,MAAOiQ,GAAenL,GAAQ3G,MAAMW,EAAAC,EAAAP,cAACsV,EAAD,CAAM5U,UAAWmG,EAAK/H,MAAM6B,QAAQ4U,WAAYvT,MAAO,CAACf,MAAOwQ,GAAenL,GAAQrF,cAInK,IAAK,IAAIV,EAAI,EAAGA,EAAIwU,EAAII,QAAQlH,OAAQ1N,IAC/BkR,GAAesD,EAAII,QAAQ5U,KAC5B4U,EAAQ5J,KAAMjL,EAAAC,EAAAP,cAAA,QAAMwG,IAAKuO,EAAII,QAAQ5U,IAAKwU,EAAII,QAAQ5U,KAG9D,OAAO4U,mCAGFK,GACL,IAAM7B,EAAWlV,KAAKC,MAAMD,KAAKe,UAAU3B,KAAKsF,MAAMwQ,WAChDxI,EAAMwI,EAASvI,QAAQvN,KAAKsF,MAAMsQ,QAAQ+B,GAASN,eAC5C,IAAT/J,EACAwI,EAASpI,KAAK1N,KAAKsF,MAAMsQ,QAAQ+B,GAASN,cAE1CvB,EAAStI,OAAOF,EAAK,GAEzBtN,KAAKkG,SAAS,CAAC4P,sDAGFoB,EAAKS,EAASnP,EAAIlC,GAAM,IAAAkD,EAAAxJ,KAErC,IAAa,IAATsG,EAAgB,CAKhB,IAJA,IAAMsR,EAAQ,CACTnV,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,IAAGhE,EAAAC,EAAAP,cAAA,UAAKhB,IAAKC,EAAE,aACvCqB,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAI,OAAOlC,MAAM,UAAUtF,IAAKC,EAAE,gBAExC+O,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3ByH,EAAMlK,KAAMjL,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAW9C,IAAKwH,EAAE7O,WAAYmF,MAAO0J,EAAE7O,YAAa6O,EAApD,MAEhB,OAAQ1N,EAAAC,EAAAP,cAACiJ,EAAA,EAAD,CAAavI,UAAW7C,KAAKiB,MAAM6B,QAAQ+U,gBAC/CpV,EAAAC,EAAAP,cAACkJ,EAAA,EAAD,CAAQxI,UAAW7C,KAAKiB,MAAM6B,QAAQgV,qBAAsBrR,OAAQH,GAAQ,IAAIhF,WAAYoF,SAAU,SAAAlG,GAAC,OAAIgJ,EAAKuO,eAAevP,EAAIhI,EAAEN,OAAOuG,SAASmR,GACrJnV,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,CAAgB7I,UAAW7C,KAAKiB,MAAM6B,QAAQkV,qBAAsB7W,IAAKC,EAAE,WAG/E,OAAO,4CAIAoH,EAAIyP,EAAM3R,GAAM,IAAA+H,EAAArO,KAC3BA,KAAK2Q,WAAWnI,EAAI,WAChB6F,EAAKpN,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAYF,OAXAmD,IAAM8K,gBAAgBjO,OAAKkO,EAAW+F,EAAM3R,EAAM+H,EAAKpN,MAAM8E,YAAc,IAAMsI,EAAKpN,MAAMS,SAAU2M,EAAKpN,MAAMH,OAAO2P,UAEpHpC,EAAK/I,MAAMyQ,cAAgBvN,IAC3B6F,EAAKnI,SAAS,CAAC6P,YAAavN,IAC5B6F,EAAK2H,cAAgBc,aAAazI,EAAK2H,cACvC3H,EAAK2H,aAAenF,WAAW,WAC3BxC,EAAKnI,SAAS,CAAC6P,YAAa,KAC5B1H,EAAK2H,aAAe,MACrB,MAGA3H,EAAKpN,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WAEFqI,EAAKuC,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAIwG,EAAKpN,MAAMC,QAAQ2G,gDAI5BqP,EAAKS,EAASnP,EAAIlC,GAAM,IAAA4R,EAAAlY,KACrC,IAAa,IAATsG,EAAgB,CAIhB,IAHA,IAAMsR,EAAQ,CACTnV,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAU9C,IAAI,IAAIlC,MAAM,KAAIhE,EAAAC,EAAAP,cAAA,UAAKhB,IAAKC,EAAE,cAEpC+O,EAAI,EAAGA,EAAImF,GAAWlF,OAAQD,IACnCyH,EAAMlK,KAAMjL,EAAAC,EAAAP,cAACsJ,EAAA,EAAD,CAAW9C,IAAK2M,GAAWnF,GAAI1J,MAAO6O,GAAWnF,IAAI1N,EAAAC,EAAAP,cAAA,UAAKhB,IAAKC,EAAEkU,GAAWnF,OAE5F,OACI1N,EAAAC,EAAAP,cAACiJ,EAAA,EAAD,KACI3I,EAAAC,EAAAP,cAACkJ,EAAA,EAAD,CAAQ5E,MAAOH,GAAQ,IAAKI,SAAU,SAAAlG,GAAC,OAAI0X,EAAKH,eAAevP,OAAI0J,EAAW1R,EAAEN,OAAOuG,SAASmR,GAChGnV,EAAAC,EAAAP,cAACuJ,EAAA,EAAD,CAAgB7I,UAAW7C,KAAKiB,MAAM6B,QAAQkV,qBAAsB7W,IAAKC,EAAE,WAGnF,MAAO,0CAIA8V,EAAKS,GAAS,IAAAQ,EAAAnY,KACnBU,EAAS,GACToC,EAAU9C,KAAKiB,MAAM6B,QAE3B,GAAIoU,EAAIC,2BAA2BiB,MAAO,CACtC,IAAMC,EAAanB,EAAIC,2BAA2BkB,SAC5CC,EAAapB,EAAIC,2BAA2BmB,MAC5CC,EAAarB,EAAIC,2BAA2BqB,MAC5CC,EAAavB,EAAIC,2BAA2BuB,WAE9CC,EAAI,EACR,IAAK,IAAMC,KAAQP,EACf,GAAIA,EAASQ,eAAeD,GACxB,IAD+B,IAAAE,EAAA,SACtB3I,GACL,IAAM3H,EAAK6P,EAASO,GAAMzI,GAAG3H,GACzB2I,GAAiD,IAApCgH,EAAK7S,MAAM+J,QAAQ9B,QAAQ/E,GAld9C,YACQ,UAkdF2P,EAAK7S,MAAMyQ,cAAgBvN,GAldzB,YAkd+B2I,IACjCA,EAldD,WAodHzQ,EAAOgN,KAAMjL,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,MAAQH,EAAI3F,UAAWC,EAAQiW,WAAY5U,MAAQwU,EAAI,EAAK,GAAK,CAACxH,eACrF1O,EAAAC,EAAAP,cAAA,OAAKU,UAAWsV,EAAKlX,MAAM6B,QAAQkW,eAAiB,IAAMb,EAAKlX,MAAM6B,QAAQmW,oBAAqBd,EAAKe,cAAcb,EAASO,GAAMzI,KACpI1N,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQqW,eAAgBxV,MAAO6E,GAAM8P,EAAM9P,IAAOA,EAC7DA,IAAO8P,EAAM9P,GAAO/F,EAAAC,EAAAP,cAAA,QAAMU,UAAWC,EAAQsW,mBAAoB5Q,GAAc,MAEnF2P,EAAKkB,iBAAiBnC,EAAKS,EAASnP,EAAIiQ,EAAWjQ,IACnD2P,EAAKmB,iBAAiBpC,EAAKS,EAASnP,EAAI+P,EAAM/P,IAC/C/F,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,SAASR,UAAWsV,EAAKlX,MAAM6B,QAAQyW,iBAAkBhW,QAAS,kBAAM4U,EAAKqB,YAAYhR,EAAImP,KAAUlV,EAAAC,EAAAP,cAACuB,EAAA,SAAD,CAAYmO,SAAS,cAEvJ8G,KAfKxI,EAAI,EAAGA,EAAIkI,EAASO,GAAMxI,OAAQD,IAAK2I,EAAvC3I,OAmBd,CACH,IAAM3H,EAAK0O,EAAIC,2BAA2B3O,GACpCxH,EAAOkW,EAAIC,2BAA2BnW,MAAQwH,EAChD2I,GAAiD,IAApCnR,KAAKsF,MAAM+J,QAAQ9B,QAAQ/E,GAtelC,YACQ,UAsedxI,KAAKsF,MAAMyQ,cAAgBvN,GAteb,YAsemB2I,IACjCA,EAteW,WAwefzQ,EAAOgN,KAAMjL,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,MAAQH,EAAI3F,UAAWC,EAAQiW,WAAY5U,MAAO,CAACgN,eACtE1O,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQkW,eAAiB,IAAMhZ,KAAKiB,MAAM6B,QAAQmW,mBAAoB9U,MAAO,CAACY,MAAO,KAAM/E,KAAKkZ,cAAchC,IACzIzU,EAAAC,EAAAP,cAAA,OAAKU,UAAWC,EAAQqW,eAAgBxV,MAAQ6E,GAAM,IAAMxH,GAC3DhB,KAAKqZ,iBAAiBnC,EAAKS,EAASnP,EAAI0O,EAAIC,2BAA2BsC,WACvEzZ,KAAKsZ,iBAAiBpC,EAAKS,EAASnP,EAAI0O,EAAIC,2BAA2Bc,QAGhF,OAAOvX,uCAGEwW,EAAKS,GAAS,IAEnBhU,EAFmB+V,EAAA1Z,KACnBqX,EAAeH,EAAIG,aAGnB1T,GADCuT,EAAIC,2BAA2BiB,OAASlB,EAAIC,2BAA2BwC,aAChEtC,EAEC5U,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQ8W,YAAajW,MAAOxC,IAAKC,EAAE,aAAciW,GAG1F,IAAIwC,EAAW,EACf,IAAK,IAAMC,KAAM5C,EAAIC,2BAA2BkB,SACxCnB,EAAIC,2BAA2BkB,SAASQ,eAAeiB,KACvDD,GAAY3C,EAAIC,2BAA2BkB,SAASyB,GAAI1J,QAGhEyJ,EAAWA,GAAY,EACvB,IAAM/D,GAA0D,IAA/C9V,KAAKsF,MAAMwQ,SAASvI,QAAQ8J,GACvC7O,EAAK0O,EAAIC,2BAA2B3O,GAEtC2I,EAAcwG,EAAU,EAAK,UAAY,UACvCtI,GAA8C,IAApCrP,KAAKsF,MAAM+J,QAAQ9B,QAAQ/E,GAQ3C,GAPI6G,EACA8B,EA1gBU,YA2gBH3I,IAAOxI,KAAKsF,MAAMyQ,cACzB5E,EA1gBe,WA8gBf+F,EAAIC,2BAA2BiB,QAAU/I,GAAW7G,IAAOxI,KAAKsF,MAAMyQ,YAAa,CACnF,IAAMsC,EAAWnB,EAAIC,2BAA2BkB,SAChD,IAAK,IAAMO,KAAQP,EACf,GAAIA,EAASQ,eAAeD,GACxB,IAAK,IAAIzI,EAAI,EAAGA,EAAIkI,EAASO,GAAMxI,OAAQD,IAAK,CAC5C,IAAM3H,EAAK6P,EAASO,GAAMzI,GAAG3H,IACW,IAApCxI,KAAKsF,MAAM+J,QAAQ9B,QAAQ/E,GAC3B2I,EAvhBN,YAwhBanR,KAAKsF,MAAMyQ,cAAgBvN,IAClC2I,EAvhBD,YA8hBnB,MAAO,CACF1O,EAAAC,EAAAP,cAAA,OAAKwG,IAAK,OAASgP,EAAS9U,UAAW7C,KAAKiB,MAAM6B,QAAQiX,QAAS5V,MAAO,CAACgN,eACxE1O,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQkX,eAAgBrC,EAAU,EAA7D,KACAlV,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAY7F,UAAW7C,KAAKiB,MAAM6B,QAAQmX,cAAe1W,QAAS,kBAAMmW,EAAKQ,SAASvC,KACjFkC,EAAW,EACPpX,EAAAC,EAAAP,cAACgY,GAAA,EAAD,CAAOC,aAAcP,EAAUzW,MAAM,WACjC0S,EAAYrT,EAAAC,EAAAP,cAACuB,EAAA,aAAD,MAAoBjB,EAAAC,EAAAP,cAACuB,EAAA,qBAAD,OAEpCoS,EAAYrT,EAAAC,EAAAP,cAACuB,EAAA,aAAD,MAAoBjB,EAAAC,EAAAP,cAACuB,EAAA,qBAAD,OAEzCjB,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAKiB,MAAM6B,QAAQuX,iBAAkBlW,MAAO,CAACC,QAAS,eAAgBgP,SAAU,aAC5F3Q,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQwX,aAAc3W,GAClDlB,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQyX,oBAAqBrD,EAAIsD,qBAC5DnL,EAAW5M,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAkBhQ,UAAW7C,KAAKiB,MAAM6B,QAAQ2X,gBAAiBtX,KAAM,KAAS,MAEhGV,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQkW,gBAAiBhZ,KAAKkZ,cAAchC,IACtEA,EAAIC,2BAA2BiB,MAC4H,KAAxJ3V,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,OAAOR,UAAW7C,KAAKiB,MAAM6B,QAAQ4X,YAAanX,QAAS,kBAAMmW,EAAK9H,OAAOpJ,KAAK/F,EAAAC,EAAAP,cAACuB,EAAA,OAAD,CAAUmO,SAAS,YAC/HqF,EAAIC,2BAA2BiB,MACuI,KAAnK3V,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,SAASR,UAAW7C,KAAKiB,MAAM6B,QAAQ6X,cAAepX,QAAS,kBAAMmW,EAAKF,YAAYhR,KAAK/F,EAAAC,EAAAP,cAACuB,EAAA,SAAD,CAAYmO,SAAS,aAEhJiE,EAAW9V,KAAK4a,eAAe1D,EAAKS,GAAW,8CAIvC,IAAAkD,EAAA7a,KACZ,OAAIA,KAAKsF,MAAMiD,QACH9F,EAAAC,EAAAP,cAAC2G,EAAApG,EAAD,CAAeqG,KAAM/I,KAAKsF,MAAMiD,QAASH,QAAS,kBAAMyS,EAAK3U,SAAS,CAACqC,QAAS,QAEjF,6CAIC/H,GAAG,IAAAsa,EAAA9a,KACfQ,GAAKA,EAAEua,iBAEP/a,KAAK2Q,WAAW3Q,KAAKsF,MAAM2J,OAAQ,WAC/B,IAAMzG,EAAKsS,EAAKxV,MAAM2J,OACtB6L,EAAK5U,SAAS,CAAC+I,OAAQ,GAAIwG,eAAgB,GAAIM,YAAavN,IAE5DsS,EAAK9E,cAAgBc,aAAagE,EAAK9E,cACvC8E,EAAK9E,aAAenF,WAAW,WAC3BiK,EAAK5U,SAAS,CAAC6P,YAAa,KAC5B+E,EAAK9E,aAAe,MACrB,KAEH8E,EAAK7Z,MAAM2E,OAAOC,UAAU2C,GACvBxC,KAAK,SAAAhC,GAEF,OADAmD,IAAM8K,gBAAgBjO,EAAK8W,EAAK5L,qBAAiBgD,OAAWA,EAAW4I,EAAK7Z,MAAM8E,YAAc,IAAM+U,EAAK7Z,MAAMS,SAAUoZ,EAAK7Z,MAAMH,OAAO2P,UACtIqK,EAAK7Z,MAAM2E,OAAO+B,UAAUa,EAAIxE,KAE1CgC,KAAK,WAEF8U,EAAKlK,eAAepI,KAEvBZ,MAAM,SAAAC,GAAG,OAAIiT,EAAK7Z,MAAMC,QAAQ2G,kDAI1B,IAAAmT,EAAAhb,KACf,OAAIA,KAAKsF,MAAM2J,OACHxM,EAAAC,EAAAP,cAACgQ,GAAA,EAAD,CACJ3O,MAAM,EACNsH,SAAS,KACTsH,WAAW,EACXhK,QAAS,kBAAM4S,EAAK3I,YACpBC,kBAAgB,uBAChBhK,mBAAiB,8BAEjB7F,EAAAC,EAAAP,cAACoQ,GAAA,EAAD,CAAa/J,GAAG,wBAAwBxI,KAAKiB,MAAM0C,OAASxC,IAAKC,EAAE,oBAAqBpB,KAAKsF,MAAMmQ,iBACnGhT,EAAAC,EAAAP,cAACqQ,GAAA,EAAD,KACI/P,EAAAC,EAAAP,cAAA,SAAGM,EAAAC,EAAAP,cAAA,mBAAH,IAAoBM,EAAAC,EAAAP,cAAA,QAAMU,UAAW7C,KAAKiB,MAAM6B,QAAQmY,UAAWjb,KAAKsF,MAAM2J,SAC9ExM,EAAAC,EAAAP,cAACoE,EAAA,EAAD,CACIpC,MAAO,CAACY,MAAO,QACfyB,MAAOrF,IAAKC,EAAE,cACd8Z,UAAW,SAAA1a,GAAC,OACM,KAAdA,EAAEqN,SAAkBmN,EAAKrI,gBAAgBnS,IAC7CkG,SAAU,SAAAlG,GAAC,OAAIwa,EAAK9L,gBAAkB1O,EAAEN,OAAOuG,OAC/C0U,aAAcnb,KAAKsF,MAAM4J,gBACzBuD,WAAYtR,IAAKC,EAAE,gDACnBuF,OAAO,YAGflE,EAAAC,EAAAP,cAACuQ,GAAA,EAAD,KACIjQ,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAMyX,EAAKrI,mBAAmBvP,MAAM,UAAUwP,WAAS,GAAEzR,IAAKC,EAAE,OACjFqB,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,WACbyX,EAAK9L,gBAAkB,KACvB8L,EAAK9U,SAAS,CAAC+I,OAAQ,GAAIC,gBAAiB,OAC5C/N,IAAKC,EAAE,aAIZ,mDAIO,IAAAga,EAAApb,KAClB,OAAIA,KAAKsF,MAAMqQ,iBACHlT,EAAAC,EAAAP,cAACgQ,GAAA,EAAD,CACJ3O,MAAM,EACNsH,SAAS,KACTsH,WAAW,EACXhK,QAAS,kBAAMgT,EAAK/I,YACpBC,kBAAgB,4BAChBhK,mBAAiB,mCAEjB7F,EAAAC,EAAAP,cAACoQ,GAAA,EAAD,CAAa/J,GAAG,6BAA6BxI,KAAKiB,MAAM0C,OAASxC,IAAKC,EAAE,6BACxEqB,EAAAC,EAAAP,cAACqQ,GAAA,EAAD,KACI/P,EAAAC,EAAAP,cAAA,SAAIhB,IAAKC,EAAE,mBAEfqB,EAAAC,EAAAP,cAACuQ,GAAA,EAAD,KACIjQ,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAM6X,EAAKlN,YAAY9K,MAAM,UAAUwP,WAAS,GAAEzR,IAAKC,EAAE,OAC1EqB,EAAAC,EAAAP,cAACoF,EAAA,EAAD,CAAQhE,QAAS,kBAAM6X,EAAKlV,SAAS,CAACyP,iBAAkB,OAAOxU,IAAKC,EAAE,aAIvE,iDAIK,IAAAia,EAAArb,KAChB,OAAIA,KAAKsF,MAAM4F,aACHzI,EAAAC,EAAAP,cAACwJ,EAAAjJ,EAAD,CACJiG,IAAI,kBACJiD,OAAQ,QACRC,WAAY7L,KAAKiB,MAAM2E,OACvBkG,SAAU,GACVC,YAAY,EACZ3D,QAAS,kBAAMiT,EAAKnV,SAAS,CAACgF,cAAc,KAC5Cc,KAAM,SAACF,EAAU9K,GACbqa,EAAKnV,SAAS,CAACgF,cAAc,IAE7BmQ,EAAKpa,MAAM2E,OAAOC,UAAUiG,GACvB9F,KAAK,SAAAhC,GACF,GAAIA,EAAK,CACL,IAAMhD,EAAOmG,IAAM6J,qBAAqBhN,EAAK,KAAM,CAACiN,SAAU9P,IAAK2P,gBACnE3J,IAAM8K,gBAAgBjO,GAAMhD,GAAQG,IAAKC,EAAE,gBAAgB2L,QAAQ,UAAW,UAAMmF,OAAWA,EAAWmJ,EAAKpa,MAAM8E,YAAc,IAAMsV,EAAKpa,MAAMS,SAAU2Z,EAAKpa,MAAMH,OAAO2P,UAChL4K,EAAK1K,WAAW3M,EAAIvC,KACpB4Z,EAAKlF,gBAAkBnS,EAAIvC,IAEvB4Z,EAAK/V,MAAMyQ,cAAgB/R,EAAIvC,MAC/B4Z,EAAKnV,SAAS,CAAC6P,YAAa/R,EAAIvC,MAChC4Z,EAAKrF,cAAgBc,aAAauE,EAAKrF,cACvCqF,EAAKrF,aAAenF,WAAW,WAC3BwK,EAAKnV,SAAS,CAAC6P,YAAa,KAC5BsF,EAAKrF,aAAe,MACrB,MAGPqF,EAAKpa,MAAM2E,OAAO+B,UAAU3D,EAAIvC,IAAKuC,GAChCgC,KAAK,kBAAMqV,EAAKzK,eAAe5M,EAAIvC,OACnCmG,MAAM,SAAAC,GAAG,OAAIwT,EAAKnV,SAAS,CAACqC,QAASV,WAE1CwT,EAAKnV,SAAS,CAACqC,QAASpH,IAAKC,EAAE,qBAM5C,6CAOX,IAFA,IAAMiM,EAASrN,KAAKsF,MAAM+H,OAAOiO,cAC3B5a,EAAS,GACNyP,EAAI,EAAGA,EAAInQ,KAAKsF,MAAMsQ,QAAQxF,OAAQD,IACvCnQ,KAAKsF,MAAM+H,SAAgF,IAAtErN,KAAKsF,MAAMsQ,QAAQzF,GAAGkH,aAAaiE,cAAc/N,QAAQF,IAClF3M,EAAOgN,KAAK1N,KAAKub,aAAavb,KAAKsF,MAAMsQ,QAAQzF,GAAIA,IAEzD,OAAQ1N,EAAAC,EAAAP,cAAA,OAAKwG,IAAI,cAAc9F,UAAW7C,KAAKiB,MAAM6B,QAAQiQ,WAAYrS,oCAGpE,IAAA8a,EAAAxb,KACL,OAAIA,KAAKsF,MAAMgK,QACH7M,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAmBlK,IAAI,kBAI/BlG,EAAAC,EAAAP,cAAA,QAAMwG,IAAI,QAAQ9F,UAAW7C,KAAKiB,MAAM6B,QAAQ2G,KAC5ChH,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,YAAYC,aAAW,MAAMR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAAQ5G,QAAS,kBAAMiY,EAAKtV,SAAS,CAACgF,cAAc,MAAQzI,EAAAC,EAAAP,cAACuB,EAAA,MAAD,OAC/IjB,EAAAC,EAAAP,cAACe,EAAA,EAAD,CAAKC,KAAK,QAAQC,MAAM,UAAUC,aAAW,UAAUR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAC/E5G,QAAS,kBAAMiY,EAAK3F,QAAO,IAAOzL,SAAUpK,KAAKsF,MAAMuQ,QAAS7V,KAAKsF,MAAMuQ,OAAUpT,EAAAC,EAAAP,cAAC0Q,GAAA,EAAD,CAAkB1P,KAAM,KAAWV,EAAAC,EAAAP,cAACuB,EAAA,UAAD,OAE9HjB,EAAAC,EAAAP,cAACmJ,EAAA,EAAD,CACImQ,YAAata,IAAKC,EAAE,UACpByB,UAAW7C,KAAKsF,MAAM+H,OACtB5G,MAAOzG,KAAKsF,MAAM+H,OAClB3G,SAAU,SAAAlG,GAAC,OAAIgb,EAAKtV,SAAS,CAACmH,OAAQ7M,EAAEN,OAAOuG,WAEnDhE,EAAAC,EAAAP,cAACuG,EAAA,EAAD,CAAYrF,aAAW,QAAQR,UAAW7C,KAAKiB,MAAM6B,QAAQqH,OAAQ5G,QAAS,kBAAMiY,EAAKtV,SAAS,CAACmH,OAAQ,OAAM5K,EAAAC,EAAAP,cAACuB,EAAA,QAAD,CAAWmO,SAAS,WACpI7R,KAAK0b,gBACL1b,KAAKiT,gBACLjT,KAAKkT,mBACLlT,KAAKmM,oBACLnM,KAAK2b,8BAjkBSnX,aAklBhBC,eArtBA,SAAAC,GAAK,MAAK,CACrB+E,IAAK,CACD1E,MAAO,OACPgG,OAAQ,QAEZnB,OAAQ,CACJxF,QAAS,eACT4G,cAAe,MACfrG,YAAa,GACboG,OAAQ,OACRoI,SAAU,UAEdJ,UAAW,CACPhI,OAAQ,oBACRoI,SAAU,OACVtI,SAAU,KAEdwC,OAAQ,CACJ1G,OAAQ,GAEZwD,OAAQ,CACJxF,YAAa,IAEjBsV,cAAe,CACXtV,YAAa,IAEjBiX,eAAgB,CACZxI,SAAU,WACVC,MAAO,EACPC,IAAK,GAEToH,YAAa,CACTtH,SAAU,WACVE,IAAK,EACLD,MAAO,IAEXsH,cAAe,CACXvH,SAAU,WACVE,IAAK,EACLD,MAAO,GAEXiH,YAAa,GAGbN,cAAc,CACV5V,QAAS,eACT4G,cAAe,SACfjG,MAAO,IAEXkW,SAAU,CACN1H,UAAW,UAEfjC,gBAAgB,CACZiC,UAAW,UAEfwG,QAAS,CACLhP,OAAQ,GACRhG,MAAO,OACPqO,SAAU,YAEdmH,mBAAoB,CAChBnW,QAAS,QACTmP,UAAW,SACX1B,SAAU,IAEdmH,eAAgB,CACZzF,UAAW,SACX1B,SAAU,GACVgK,YAAa,GACbzX,QAAS,gBAEbqW,gBAAiB,CACbrH,SAAU,WACVE,IAAK,EACLwI,KAAM,GAEV7C,mBAAoB,CAChBlU,MAAO,IAEXsV,iBAAkB,CACdjW,QAAS,eACTW,MAAO,sBAEX+N,aAAc,CACV3B,WAAYzM,EAAM8O,QAAQC,QAAQC,MAClC5O,QAAS,GACT1B,MAAOsB,EAAM8O,QAAQC,QAAQE,cAEjCiG,YAAa,CACTrG,UAAW,UAEfmE,WAAY,CACR3S,MAAO,IAGXgU,WAAY,CACR3F,SAAU,WACVrI,OAAQ,IAEZoO,eAAgB,CACZjN,WAAY,EACZtH,UAAW,GACXR,QAAS,eACTyN,SAAU,GACV9M,MAAO,sBAEXqU,kBAAoB,CAChBvH,SAAU,EACV0B,UAAW,SACXnP,QAAS,SAEbyT,eAAgB,CACZ3L,WAAY,GAEhBqN,iBAAkB,CACdnG,SAAU,WACVE,IAAK,GACLD,MAAO,GACPvO,QAAS,GAEbiX,eAAgB,CACZ3I,SAAU,WACVE,IAAK,GACLD,MAAO,GACPvO,QAAS,GAEbkT,oBAAqB,CACjBpT,UAAW,KAslBJH,CAAmBqY,ICnwB5BE,eACF,SAAAA,EAAY/b,GAAQgE,OAAAC,EAAA,EAAAD,CAAAjF,KAAAgd,GAChB,IAAMC,EAAahY,OAAAiY,EAAA,EAAAjY,CAAA,GAAOhE,GADX,OAEfgc,EAAcE,gBAAkB,CAAC,QACjCF,EAAcG,aAAe,CACzBrM,GAAMsM,EAAQ,KACdC,GAAMD,EAAQ,KACdE,GAAMF,EAAQ,KACdG,GAAMH,EAAQ,KACdI,GAAMJ,EAAQ,KACdK,GAAML,EAAQ,KACdM,GAAMN,EAAQ,KACdO,GAAMP,EAAQ,KACdQ,GAAMR,EAAQ,KACdS,QAAST,EAAQ,MAbNpY,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAA+X,GAAA3X,KAAArF,KAeTid,kFAIN,IAAMxT,EAAMzJ,KAAKsF,MAAMyY,YACvB,OAAKtU,GAAe,YAARA,EAGA,UAARA,EACO,EAEC,UAARA,EACO,EAEC,WAARA,EAEO,GADSzJ,KAAKsF,MAAMxE,OAAOkd,YAAc,EAAI,GAG5C,UAARvU,EAEO,IADSzJ,KAAKsF,MAAMxE,OAAOkd,YAAc,EAAI,IAAMhe,KAAKsF,MAAMxE,OAAOkJ,WAAa,EAAI,IAGrF,aAARP,EAEO,IADSzJ,KAAKsF,MAAMxE,OAAOkd,YAAc,EAAI,IAAMhe,KAAKsF,MAAMxE,OAAOkJ,WAAa,EAAI,IAAMhK,KAAKsF,MAAMxE,OAAOmd,YAAc,EAAI,IAG/H,aAARxU,EAEO,IADSzJ,KAAKsF,MAAMxE,OAAOkd,YAAc,EAAI,IAAMhe,KAAKsF,MAAMxE,OAAOkJ,WAAa,EAAI,IAAMhK,KAAKsF,MAAMxE,OAAOmd,YAAc,EAAI,SAD3I,EApBW,mCA0BN,IAAAle,EAAAC,KACL,OAAKA,KAAKsF,MAAM4Y,OAKZzb,EAAAC,EAAAP,cAAA,OAAKU,UAAU,OACXJ,EAAAC,EAAAP,cAACgc,EAAA,EAAD,CAAQ/K,SAAS,UACb3Q,EAAAC,EAAAP,cAACic,EAAA,EAAD,CAAM3X,MAAOzG,KAAKqe,iBAAkB3X,SAAU,SAAClG,EAAG8d,GAAJ,OAAcve,EAAKwe,UAAU/d,EAAEN,OAAOse,WAAWC,QAAQzd,KAAMsd,KACzG7b,EAAAC,EAAAP,cAACuc,EAAA,EAAD,CAAKlY,MAAOrF,IAAKC,EAAE,WAAYud,YAAU,YACzClc,EAAAC,EAAAP,cAACuc,EAAA,EAAD,CAAKlY,MAAOrF,IAAKC,EAAE,eAAgBud,YAAU,UAC5C3e,KAAKsF,MAAMxE,OAAOkd,aAAevb,EAAAC,EAAAP,cAACuc,EAAA,EAAD,CAAK5S,SAAqC,UAA3B9L,KAAKsF,MAAMyY,YAAyBvX,MAAOrF,IAAKC,EAAE,iBAAkBud,YAAU,UAC9H3e,KAAKsF,MAAMxE,OAAOkJ,YAAcvH,EAAAC,EAAAP,cAACuc,EAAA,EAAD,CAAK5S,SAAqC,WAA3B9L,KAAKsF,MAAMyY,YAA0BvX,MAAOrF,IAAKC,EAAE,kBAAmBud,YAAU,WAC/H3e,KAAKsF,MAAMxE,OAAOmd,aAAexb,EAAAC,EAAAP,cAACuc,EAAA,EAAD,CAAK5S,SAAqC,UAA3B9L,KAAKsF,MAAMyY,YAAyBvX,MAAOrF,IAAKC,EAAE,iBAAkBud,YAAU,UAC/Hlc,EAAAC,EAAAP,cAACuc,EAAA,EAAD,CAAKlY,MAAOrF,IAAKC,EAAE,oBAAqBud,YAAU,aAClDlc,EAAAC,EAAAP,cAACuc,EAAA,EAAD,CAAKlY,MAAOrF,IAAKC,EAAE,sBAAuBud,YAAU,eAI5Dlc,EAAAC,EAAAP,cAAA,OAAKU,UAAW7C,KAAK4e,SAAW5e,KAAKiB,MAAM6B,QAAQ+b,iBAAmB7e,KAAKiB,MAAM6B,QAAQgc,aACxD,YAA3B9e,KAAKsF,MAAMyY,cAA8B/d,KAAKsF,MAAMyY,cAAiBtb,EAAAC,EAAAP,cAAC4c,EAAD,CACnEpW,IAAI,UACJ5H,OAAQf,KAAKe,OACb6E,OAAQ5F,KAAK4F,OACb9E,OAAQd,KAAKsF,MAAMxE,OACnBI,QAAS,SAAA6H,GAAI,OAAIhJ,EAAKmG,SAAS,CAACyD,UAAWZ,KAC3C1H,OAAQ,SAAAP,GAAM,OAAIf,EAAKif,aAAale,IACpCY,SAAU1B,KAAK0B,SACfqE,YAAa/F,KAAK+F,YAClBW,SAAU,SAACL,EAAMI,EAAOuQ,GAAd,OAAqBjX,EAAKkf,kBAAkB5Y,EAAMI,EAAOuQ,MAE3C,UAA3BhX,KAAKsF,MAAMyY,aAA4Btb,EAAAC,EAAAP,cAAC+c,GAAD,CACpCvW,IAAI,QACJ5H,OAAQf,KAAKe,OACb6E,OAAQ5F,KAAK4F,OACb9E,OAAQd,KAAKsF,MAAMxE,OACnBI,QAAS,SAAA6H,GAAI,OAAIhJ,EAAKmG,SAAS,CAACyD,UAAWZ,KAC3CrH,SAAU1B,KAAK0B,SACfqE,YAAa/F,KAAK+F,cAEM,UAA3B/F,KAAKsF,MAAMyY,aAA4Btb,EAAAC,EAAAP,cAACgd,GAAD,CACpCxW,IAAI,QACJ5H,OAAQf,KAAKe,OACb6E,OAAQ5F,KAAK4F,OACb9E,OAAQd,KAAKsF,MAAMxE,OACnBI,QAAS,SAAA6H,GAAI,OAAIhJ,EAAKmG,SAAS,CAACyD,UAAWZ,KAC3ChD,YAAa/F,KAAK+F,YAClBrE,SAAU1B,KAAK0B,WAEa,WAA3B1B,KAAKsF,MAAMyY,aAA6Btb,EAAAC,EAAAP,cAACid,GAAD,CACzCzW,IAAI,SACJ5H,OAAQf,KAAKe,OACb6E,OAAQ5F,KAAK4F,OACb9E,OAAQd,KAAKsF,MAAMxE,OACnBI,QAAS,SAAA6H,GAAI,OAAIhJ,EAAKmG,SAAS,CAACyD,UAAWZ,KAC3ChD,YAAa/F,KAAK+F,YAClBrE,SAAU1B,KAAK0B,WAES,UAA3B1B,KAAKsF,MAAMyY,aAA4Btb,EAAAC,EAAAP,cAACkd,GAAD,CACpC1W,IAAI,QACJ5H,OAAQf,KAAKe,OACb6E,OAAQ5F,KAAK4F,OACb9E,OAAQd,KAAKsF,MAAMxE,OACnBI,QAAS,SAAA6H,GAAI,OAAIhJ,EAAKmG,SAAS,CAACyD,UAAWZ,KAC3ChD,YAAa/F,KAAK+F,YAClBrE,SAAU1B,KAAK0B,WAES,aAA3B1B,KAAKsF,MAAMyY,aAA+Btb,EAAAC,EAAAP,cAACmd,GAAD,CACvC3W,IAAI,WACJ5H,OAAQf,KAAKe,OACb6E,OAAQ5F,KAAK4F,OACb9E,OAAQd,KAAKsF,MAAMxE,OACnBI,QAAS,SAAA6H,GAAI,OAAIhJ,EAAKmG,SAAS,CAACyD,UAAWZ,KAC3CrH,SAAU1B,KAAK0B,SACfqE,YAAa/F,KAAK+F,YAClBW,SAAU,SAACL,EAAMI,GAAP,OAAiB1G,EAAKkf,kBAAkB5Y,EAAMI,MAEhC,aAA3BzG,KAAKsF,MAAMyY,aAA+Btb,EAAAC,EAAAP,cAACod,GAAD,CACvC5W,IAAI,WACJ5H,OAAQf,KAAKe,OACb6E,OAAQ5F,KAAK4F,OACb9E,OAAQd,KAAKsF,MAAMxE,OACnBI,QAAS,SAAA6H,GAAI,OAAIhJ,EAAKmG,SAAS,CAACyD,UAAWZ,KAC3CrH,SAAU1B,KAAK0B,SACfqE,YAAa/F,KAAK+F,YAClByZ,YAAa,SAAAC,GAAK,OAAI1f,EAAKmN,UAAUuS,IACrC/Y,SAAU,SAACL,EAAMI,GAAP,OAAiB1G,EAAKkf,kBAAkB5Y,EAAMI,OAG/DzG,KAAK0f,cACL1f,KAAK2f,0BAxFFld,EAAAC,EAAAP,cAACyd,EAAAld,EAAD,CAAQgC,MAAO1E,KAAKsF,MAAMua,mBAlD5BC,KAgJHrb,eA9JA,SAAAC,GAAK,MAAK,CACrBqb,KAAM,GACNjB,WAAY,CACRha,QAAS,GACTiG,OAAQ,kCACRoI,SAAU,QAEd0L,iBAAkB,CACd/Z,QAAS,GACTiG,OAAQ,yCACRoI,SAAU,UAoJH1O,CAAmBuY,ICnKdgD,QACW,cAA7B3f,OAAO4f,SAASC,UAEe,UAA7B7f,OAAO4f,SAASC,UAEhB7f,OAAO4f,SAASC,SAASrQ,MACvB,oFCTFnL,GAAQ,SAEZ,SAASyb,IACL,OAAOC,IAASC,OAAO5d,EAAAC,EAAAP,cAACme,EAAA,EAAD,CAAkB5b,MAAO6b,KAAY7b,KACxDjC,EAAAC,EAAAP,cAACqe,GAAD,CAAKC,cAAe,SAAAC,GAChBhc,GAAQgc,EACRP,QAEaje,SAASye,eAAe,SAIjDR,GD4GM,kBAAmBS,WACrBA,UAAUC,cAAcC,MAAM9a,KAAK,SAAA+a,GACjCA,EAAaC","file":"static/js/main.c70201f1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport {MdHelpOutline as IconHelp} from 'react-icons/md';\nimport {FaFileDownload as IconDownload} from 'react-icons/fa';\nimport {FaFileUpload as IconUpload} from 'react-icons/fa';\n\nconst styles = theme => ({\n    buttons: {\n        marginRight: 5,\n        marginTop: 5,\n        float: 'right'\n    },\n    logo: {\n        padding: 8,\n        width: 64\n    }\n});\n\nclass Logo extends Component {\n\n    static generateFile(filename, obj) {\n        const el = window.document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        window.document.body.appendChild(el);\n\n        el.click();\n\n        window.document.body.removeChild(el);\n    }\n\n    handleFileSelect(evt) {\n        const f = evt.target.files[0];\n        if (f) {\n            const r = new window.FileReader();\n            r.onload = e => {\n                const contents = e.target.result;\n                try {\n                    const json = JSON.parse(contents);\n                    if (json.native && json.common) {\n                        if (json.common.name !== this.props.common.name) {\n                            this.props.onError(I18n.t('otherConfig', json.common.name));\n                        } else {\n                            this.props.onLoad(json.native);\n                        }\n                    } else {\n                        this.props.onError(I18n.t('invalidConfig'));\n                    }\n                } catch (e) {\n                    this.props.onError(e.toString());\n                }\n            };\n            r.readAsText(f);\n        } else {\n            alert('Failed to open JSON File');\n        }\n    }\n\n    download() {\n        const result = {\n            _id: 'system.adapter.' + this.props.common.name + '.' + this.props.instance,\n            common: JSON.parse(JSON.stringify(this.props.common)),\n            native: this.props.native\n        };\n        // remove unimportant information\n        if (result.common.news) {\n            delete result.common.news;\n        }\n        if (result.common.titleLang) {\n            delete result.common.titleLang;\n        }\n        if (result.common.desc) {\n            delete result.common.desc;\n        }\n\n        //window.open('data:application/iobroker; content-disposition=attachment; filename=' + result._id + '.json,' + JSON.stringify(result, null, 2));\n        Logo.generateFile(result._id + '.json', result);\n    }\n\n    upload() {\n        const input = window.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('id', 'files');\n        input.setAttribute('opacity', 0);\n        input.addEventListener('change', e => this.handleFileSelect(e, () => {}), false);\n        (input.click)();\n    }\n\n    render() {\n        return (<div>\n            {this.props.common.icon && (<img src={this.props.common.icon} className={this.props.classes.logo} alt=\"logo\"/>)}\n            {this.props.common.readme &&\n                (<Fab size=\"small\" color=\"primary\" aria-label=\"Help\" className={this.props.classes.buttons} onClick={() => {\n                    const win = window.open(this.props.common.readme, '_blank');\n                    win.focus();\n                }}><IconHelp /></Fab>)}\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Load config\" className={this.props.classes.buttons} title={I18n.t('Load configuration from file')} onClick={() => this.upload()}><IconUpload /></Fab>\n            <Fab size=\"small\" color=\"primary\" aria-label=\"Save config\" className={this.props.classes.buttons} title={I18n.t('Save configuration to file')} onClick={() => this.download()}><IconDownload /></Fab>\n        </div>);\n    }\n}\n\nLogo.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n};\n\nexport default withStyles(styles)(Logo);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from './Logo';\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            forceUserCreate: false,\n            showHint: false,\n            toast: '',\n            isInstanceAlive: false,\n        };\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderCard() {\n        return (<Card className={this.props.classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={this.props.classes.media}\n                    image=\"alexalogo.png\"\n                    title=\"Alexa logo\"\n                />\n                <CardContent>{Utils.renderTextWithA(I18n.t('amazon link'))}</CardContent>\n            </CardActionArea>\n            <CardActions style={{textAlign: 'center'}} >\n                <Button size=\"small\" color=\"primary\" style={{textAlign: 'center'}} onClick={() => {\n                    const win = window.open('http://alexa.amazon.de/spa/index.html#skills/dp/B07L66BFF9/reviews', '_blank');\n                    win.focus();\n                }}>{I18n.t('Review')}</Button>\n            </CardActions>\n        </Card>);\n    }\n\n    resetCerts() {\n        this.setState({inAction: true});\n        this.props.socket.setState('iot.' + this.props.instance + '.certs.private', {val: '', ack: true})\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.id', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.public', {val: '', ack: true}))\n            .then(() => this.props.socket.setState('iot.' + this.props.instance + '.certs.certificate', {val: '', ack: true}))\n            .then(() => {\n                if (this.state.forceUserCreate) {\n                    return this.props.socket.setState('iot.' + this.props.instance + '.certs.forceUserCreate', {val: true, ack: true});\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            // read actual instance object\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    // adapter is disabled, do not restart it\n                    return Promise.resolve();\n                } else {\n                    // restart adapter\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({toast: I18n.t('Certificates will be updated after start')}))\n            .catch(err => this.props.onError(err))\n            .then(() => this.setState({inAction: false}));\n    }\n\n    onForceUserCreate() {\n        this.setState({forceUserCreate: !this.state.forceUserCreate, showHint: !this.state.forceUserCreate});\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderHint() {\n        if (this.state.showHint) {\n            return (<Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n              control={\n                  <Checkbox\n                      checked={this.props.native[attr]}\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                      color=\"primary\"\n                  />\n              }\n              label={I18n.t(title)}\n        />);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Logo\n                    instance={this.props.instance}\n                    common={this.props.common}\n                    native={this.props.native}\n                    onError={text => this.setState({errorText: text})}\n                    onLoad={this.props.onLoad}\n                />\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnSettings}>\n                    {this.renderInput('ioBroker.pro Login', 'login')}<br/>\n                    {this.renderInput('ioBroker.pro Password', 'pass', 'password')}<br/>\n                    {this.renderCheckbox('Amazon Alexa', 'amazonAlexa', {marginTop: 10})}<br/>\n                    <FormControlLabel key=\"googleHome\" style={{paddingTop: 5}} className={this.props.classes.controlElement}\n                        control={\n                          <Checkbox\n                              checked={this.props.native.googleHome}\n                              onChange={() => {\n                                  // activate alexa if google home is on (temporary)\n                                  const newVal = !this.props.native.googleHome;\n                                  this.props.onChange('googleHome', newVal, () =>\n                                      newVal && this.props.onChange('amazonAlexa', true));\n                              }}\n                              color=\"primary\"\n                          />\n                        }\n                        label={I18n.t('Google Home')}\n                    />\n                    {/*this.renderCheckbox('Google Home', 'googleHome', {marginTop: 10})*/}<br/>\n                    {this.renderCheckbox('Yandex Алиса', 'yandexAlisa', {marginTop: 10})}<br/>\n                    <br/>\n                    <Button variant=\"outlined\"\n                            className={this.props.classes.button}\n                            disabled={this.state.inAction || !this.state.isInstanceAlive}\n                            title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                            onClick={() => this.resetCerts()}>\n                        <IconReload/>{I18n.t('Get new connection certificates')}\n                    </Button>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.forceUserCreate}\n                                onChange={() => this.onForceUserCreate()}\n                                color=\"primary\"\n                            />\n                        }\n                        label={I18n.t('Request email with password one more time')}\n                    />\n                    <p style={{fontWeight: 'bold'}}>{Utils.renderTextWithA(I18n.t('help_tip'))}</p>\n                </div>\n                <div className={this.props.classes.column + ' ' + this.props.classes.columnLogo}>{this.renderCard()}</div>\n                {this.renderHint()}\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    }\n});\n\nclass ExtendedOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelectId: false,\n        };\n\n    }\n    \n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    renderSelect(title, attr, options, style) {\n        return (<FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={Object.assign({paddingTop: 5}, style)}>\n            <Select\n                value={this.props.native[attr] || '_'}\n                onChange={e => this.props.onChange(attr, e.target.value === '_' ? '' : e.target.value)}\n                input={<Input name={attr} id={attr + '-helper'} />}\n            >\n                {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n            </Select>\n            <FormHelperText>{I18n.t(title)}</FormHelperText>\n        </FormControl>);\n    }\n\n    renderCheckbox(title, attr, style) {\n        return (<FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\n            control={\n                <Checkbox\n                    checked={this.props.native[attr]}\n                    onChange={() => this.props.onChange(attr, !this.props.native[attr])}\n                    color=\"primary\"\n                />\n            }\n            label={I18n.t(title)}\n        />);\n    }\n\n    getSelectIdDialog(attr) {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID2\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={this.props.native[attr]}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={selected => {\n                    this.setState({showSelectId: false});\n                    this.props.onChange(attr, selected);\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                {this.renderInput('Cloud URL', 'cloudUrl')}<br/>\n                {this.renderSelect('Language', 'language', [\n                    {title: 'default', value: ''},\n                    {title: 'english', value: 'en'},\n                    {title: 'Deutsch', value: 'de'},\n                    {title: 'русский', value: 'ru'}\n                ], {marginTop: 10})}<br/>\n                {this.renderCheckbox('Place function in names first', 'functionFirst', {marginTop: 10})}<br/>\n                {this.renderInput('Concatenate words with', 'concatWord')}<br/>\n                {this.renderInput('Replace in names', 'replaces')}<br/>\n                <div className={this.props.classes.controlElement} style={{marginTop: 15}}>\n                    {this.renderInput('OFF level for switches in %', 'deviceOffLevel')}\n                    <FormHelperText>{I18n.t('(Set to 0 if behavior not desired)')}</FormHelperText>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderInput('Write response to', 'responseOID')}\n                    <Fab size=\"small\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})} aria-label=\"Add\" style={{marginLeft: 5, marginTop: 10}}><IconAdd /></Fab><br/>\n                </div>\n                <div className={this.props.classes.controlElement}>\n                    {this.renderCheckbox('Personal settings (only pro)', 'noCommon')}\n                    <FormHelperText>{Utils.renderTextWithA(I18n.t('help_tip'))}</FormHelperText><br/>\n                </div>\n                {this.renderCheckbox('Debug outputs', 'debug')}\n                {this.getSelectIdDialog('responseOID')}\n            </form>\n        );\n    }\n}\n\nExtendedOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExtendedOptions);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Chip from '@material-ui/core/Chip';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\n\nimport CopyContentImg from '@iobroker/adapter-react/assets/copy-content.svg';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        marginTop: 0,\n        minWidth: 400\n    },\n    fullSize: {\n        width: 'calc(100% - 64px)'\n    },\n    button: {\n        marginRight: 20,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    controlElement: {\n        //background: '#d2d2d2',\n        marginBottom: 5\n    },\n    chips: {\n        border: '1px solid #DDD',\n        borderRadius: 1,\n        width: 'calc(100% - 250px)',\n        display: 'inline-block',\n        padding: 5,\n        minHeight: 32,\n        marginLeft: 10,\n        marginTop: 20\n    },\n    chip: {\n        marginRight: 5\n    }\n});\n\nclass Services extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            running: false,\n            toast: '',\n            text2commandList: [],\n            addValue: '',\n            isInstanceAlive: false\n        };\n        this.onKeyChangedBound = this.onKeyChanged.bind(this);\n\n        this.props.socket.getAdapterInstances('text2command')\n            .then(list => this.setState({text2commandList: list.map(obj => obj._id.replace('system.adapter.text2command.', ''))}));\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj =>\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state =>\n                this.setState({isInstanceAlive: obj && obj.common && obj.common.enabled && state && state.val})));\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState('iot.' + this.props.instance + '.certs.urlKey', this.onKeyChangedBound);\n    }\n\n    onKeyChanged(id, state) {\n        this.setState({key: state.val});\n    }\n\n    renderInput(title, attr, type) {\n        return (<TextField\n            label={I18n.t(title)}\n            className={this.props.classes.input + ' ' + this.props.classes.controlElement}\n            value={this.props.native[attr]}\n            type={type || 'text'}\n            onChange={e => this.props.onChange(attr, e.target.value)}\n            margin=\"normal\"\n        />);\n    }\n\n    reissueUrlKey() {\n        this.setState({running: true});\n        return this.props.socket.setState('iot.' + this.props.instance + '.certs.urlKey', {val: '', ack: true})\n            .then(() => this.props.socket.getObject('system.adapter.iot.' + this.props.instance))\n            .then(obj => {\n                if (!obj || !obj.common || !obj.common.enabled) {\n                    this.setState({running: false, toast: I18n.t('Key will be updated after start')});\n                } else {\n                    return this.props.socket.setObject('system.adapter.iot.' + this.props.instance, obj);\n                }\n            })\n            .then(() => this.setState({running: false, toast: I18n.t('Certificates will be updated after initiated restart')}))\n            .catch(err => {\n                this.setState({running: false});\n                this.props.showError(err);\n            });\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onChipsDelete(attr, value) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(value);\n        if (pos !== -1) {\n            chips.splice(pos, 1);\n            this.props.onChange(attr, chips.join(' '));\n        }\n    }\n\n    onChipsAdd(attr) {\n        const chips = (this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a);\n        const pos = chips.indexOf(this.state.addValue);\n        if (pos === -1) {\n            chips.push(this.state.addValue);\n            this.setState({addValue: ''}, () => this.props.onChange(attr, chips.join(' ')));\n        }\n    }\n\n    renderChips(label, attr) {\n        return (<div className={this.props.classes.chipsDiv}>\n            <FormHelperText>{Utils.renderTextWithA(I18n.t(label))}</FormHelperText>\n            <TextField\n                label={I18n.t('Add service')}\n                style={{width: 150}}\n                type={'text'}\n                value={this.state.addValue}\n                onKeyUp={e => e.keyCode === 13 && this.onChipsAdd(attr)}\n                onChange={e => this.setState({addValue: e.target.value.trim()})}\n                margin=\"normal\"\n            />\n\n            <Fab size=\"small\" color=\"secondary\" disabled={!this.state.addValue} onClick={() => this.onChipsAdd(attr)} style={{marginLeft: 5, marginTop: -15}}><IconAdd /></Fab>\n\n            <div className={this.props.classes.chips}>\n                {(this.props.native[attr] || '').split(/[,;\\s]/).filter(a => !!a)\n                .map(word =>\n                    (<Chip\n                        key={word}\n                        size=\"small\"\n                        label={word}\n                        onDelete={() => this.onChipsDelete(attr, word)}\n                        className={this.props.classes.chip}\n                    />))}\n            </div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Button\n                    variant=\"outlined\"\n                    disabled={!this.state.isInstanceAlive || this.state.running}\n                    color=\"primary\"\n                    title={!this.state.isInstanceAlive ? I18n.t('Instance must be enabled') : ''}\n                    onClick={() => this.reissueUrlKey()}>\n                    <IconRefresh />{I18n.t('Get new service URL key')}\n                </Button><br/>\n\n                {this.renderInput('IFTTT key', 'iftttKey')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for IFTTT')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=ifttt&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}`)} ><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n                <br/>\n\n                {this.renderChips('White list for services', 'allowedServices')}<br/>\n\n                <TextField\n                    style={{marginTop: 10}}\n                    label={I18n.t('Use following link for custom service')}\n                    className={this.props.classes.input + ' ' + this.props.classes.controlElement + ' ' + this.props.classes.fullSize}\n                    value={`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`}\n                    type=\"text\"\n                    readOnly={true}\n                    margin=\"normal\"\n                />\n                <Fab size=\"small\" style={{marginTop: 10, marginLeft: 5}} onClick={() => Utils.copyToClipboard(`https://service.iobroker.in/v1/iotService?service=custom_<SERVICE_NAME>&key=${this.state.key}&user=${encodeURIComponent(this.props.native.login)}&data=<SOME_TEXT>`)}><img src={CopyContentImg} alt=\"Copy\" /></Fab><br/>\n\n                <FormControl className={this.props.classes.input + ' ' + this.props.classes.controlElement} style={{paddingTop: 20}}>\n                    <Select\n                        value={this.props.native.text2command || '_'}\n                        onChange={e => this.props.onChange('text2command', e.target.value === '_' ? '' : e.target.value)}\n                        input={<Input name=\"text2command\" id=\"text2command-helper\" />}\n                    >\n                        <MenuItem key=\"key-default\" value={'_'}>{I18n.t('disabled')}</MenuItem>\n                        {this.state.text2commandList.map(item => (<MenuItem key={'key-' + item} value={item}>text2command.{item}</MenuItem>))}\n                    </Select>\n                    <FormHelperText>{I18n.t('Use text2command instance')}</FormHelperText>\n                </FormControl>\n                {this.renderToast()}\n            </form>\n        );\n    }\n}\n\nServices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    onShowError: PropTypes.func,\n};\n\nexport default withStyles(styles)(Services);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport {MdEdit as IconEdit} from 'react-icons/md';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CHANGED_COLOR = '#e7000040';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden',\n        width: 'calc(50% - 20px)',\n        minWidth: 300,\n        maxWidth: 450\n    },\n    columnDiv: {\n        height: 'calc(100% - 60px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    enumLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    enumLineEdit: {\n        //float: 'right'\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    enumLineName: {\n\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    enumLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    enumLineId: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    }\n});\n\nclass Enums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            editId: '',\n            editedSmartName: '',\n            funcs: [],\n            rooms: [],\n            changed: [],\n            message: '',\n            loading: true,\n        };\n\n        this.onEnumUpdateBound = this.onEnumUpdate.bind(this);\n\n        this.props.socket.getEnums()\n            .then(res => {\n                const funcs = [];\n                const rooms = [];\n                Object.keys(res).forEach(id => {\n                    if (id.match(/^enum\\.rooms\\./)) {\n                        rooms.push(res[id]);\n                    } else\n                    if (id.match(/^enum\\.functions\\./)) {\n                        funcs.push(res[id]);\n                    }\n                });\n\n                this.setState({funcs, rooms, loading: false});\n                return this.props.socket.subscribeObject('enum.*', this.onEnumUpdateBound);\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeObject('enum.*', this.onEnumUpdateBound).then(() => {});\n    }\n\n    onEnumUpdate(id, obj) {\n        this.removeChanged(id);\n        this.updateObjInState(id, obj);\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed});\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    updateObjInState(id, obj) {\n        // update obj\n        if (id.match(/^enum\\.functions\\./)) {\n            for (let i = this.state.funcs.length - 1; i >= 0 ; i--) {\n                if (this.state.funcs[i]._id === id) {\n                    const funcs = JSON.parse(JSON.stringify(this.state.funcs));\n                    if (obj) {\n                        funcs[i] = obj;\n                    } else {\n                        funcs.splice(i, 1);\n                    }\n                    this.setState({funcs});\n                    break;\n                }\n            }\n        } else\n        if (id.match(/^enum\\.rooms\\./)) {\n            for (let i = this.state.rooms.length - 1; i >= 0; i--) {\n                if (this.state.rooms[i]._id === id) {\n                    const rooms = JSON.parse(JSON.stringify(this.state.rooms));\n                    if (obj) {\n                        rooms[i] = obj;\n                    } else {\n                        rooms.splice(i, 1);\n                    }\n                    this.setState({rooms});\n                    break;\n                }\n            }\n        }\n    }\n\n    onToggleEnum(id) {\n        let obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n\n        let smartName = Utils.getSmartNameFromObj(obj);\n        obj = JSON.parse(JSON.stringify(obj));\n        if (smartName !== false) {\n            Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        } else {\n            Utils.removeSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        }\n\n        this.addChanged(id);\n\n        this.props.socket.setObject(id, obj)\n            .then(() => {\n                // update obj\n                this.updateObjInState(id, obj);\n                this.informInstance(id);\n\n                setTimeout(() => this.removeChanged(id), 500);\n            });\n    }\n\n    onEdit(id) {\n        const obj = this.state.funcs.find(e => e._id === id) || this.state.rooms.find(e => e._id === id);\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        if (typeof smartName === 'object' && smartName) {\n            smartName = smartName[I18n.getLanguage()] || smartName.en;\n        }\n        smartName = smartName || Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n        this.setState({editId: id, editedSmartName: smartName});\n    }\n\n    renderEnum(obj) {\n        let smartName = Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n        // convert old format\n        if (smartName && typeof smartName === 'object') {\n            smartName = smartName[I18n.getLanguage()] || smartName.en || '';\n        }\n        let name = Utils.getObjectNameFromObj(obj);\n\n        return (<div key={obj._id} className={this.props.classes.enumLine} style={{background: this.state.changed.indexOf(obj._id) !== -1 ? CHANGED_COLOR : 'inherit'}}>\n            <span className={this.props.classes.enumLineName} style={{opacity: smartName === false ? 0.5: 1}}>{smartName || null}{smartName ? (<span className={this.props.classes.enumLineSubName}> ({name})</span>) : name}</span>\n            <span className={this.props.classes.enumLineId} style={{opacity: smartName === false ? 0.5: 1}}>{obj._id}</span>\n            <Switch\n                className={this.props.classes.enumLineEnabled}\n                checked={smartName !== false}\n                onChange={() => this.onToggleEnum(obj._id)}\n            />\n            <IconButton aria-label=\"Edit\" className={this.props.classes.enumLineEdit} onClick={() => this.onEdit(obj._id)}>\n                <IconEdit fontSize=\"small\" />\n            </IconButton>\n\n        </div>);\n    }\n\n    renderEnums(name) {\n        return this.state[name].map(e => this.renderEnum(e));\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName() {\n        // Check if the name is duplicate\n        let enums = this.state.editId.startsWith('enum.functions.') ? this.state.funcs : this.state.rooms;\n        if (enums.find(obj =>\n            this.state.editId !== obj._id && (\n            this.state.editedSmartName === Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}) ||\n            this.state.editedSmartName === Utils.getSmartNameFromObj(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon)))) {\n            this.setState({message: I18n.t('Duplicate name')});\n        } else {\n            this.addChanged(this.state.editId);\n            setTimeout(() => this.removeChanged(this.state.editId), 500);\n            const id = this.state.editId;\n            this.setState({editId: ''});\n            let newObj;\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.state.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    newObj = obj;\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.updateObjInState(id, newObj);\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        }\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            const obj = this.state.funcs.find(e => e._id === this.state.editId) || this.state.rooms.find(e => e._id === this.state.editId);\n\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()}))}</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onChange={e => this.setState({editedSmartName: e.target.value})}\n                        value={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({editId: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress />);\n        }\n        return (\n            <form className={this.props.classes.tab}>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Rooms')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('rooms')}</div>\n                </div>\n                <div className={this.props.classes.column}>\n                    <h5 className={this.props.classes.columnHeader}>{I18n.t('Functions')}</h5>\n                    <div className={this.props.classes.columnDiv}>{this.renderEnums('funcs')}</div>\n                </div>\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n            </form>\n        );\n    }\n}\n\nEnums.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Enums);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlexaSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + state.val + '/' + state.ack);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        if (this.state.changed.indexOf(id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    }\n                }\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlexaSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlexaSmartNames);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRGB = '#ff7ee3';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    OnOff: {color: colorOn, icon: IconOn, desc: 'On/Off'},\n    Brightness: {color: colorSet, icon: IconBulb, desc: 'Dimmer'},\n    RGB: {color: colorRGB, icon: IconBulb, desc: 'Set color'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        minWidth: 100,\n        display: 'inline-block',\n        fontSize: 13,\n        paddingLeft: 70,\n        //width: 'calc(100% - 400px)'\n    },\n    devSubSubLine:  {\n        fontSize: 10,\n        fontStyle: 'italic',\n        display: 'inline-block',\n        marginLeft: 15\n    },\n    devSubLineSetId:  {\n        fontStyle: 'italic',\n        display: 'block',\n        color: '#999'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass AlisaDevices extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n\n        console.log('Send BROWSE!');\n\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browseAlisa', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log('Update ' + id + ' ' + state.val + '/' + state.ack);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.iobID === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.name;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName:smartName/* Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})*/});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.actions) {\n            console.log('Something went wrong');\n            return null;\n        }\n\n        dev.actions.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'OnOff') return -1;\n            if (b === 'OnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].name);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].name);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        const id = dev.main.getId;\n        const name = dev.func;\n        let background = DEFAULT_CHANNEL_COLOR;/*this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n            background = LAST_CHANGED_COLOR;\n        }*/\n        result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n            <div className={classes.devSubLineName}>{name.toUpperCase()}</div>\n            <div className={classes.devSubSubLine}>\n                <div>{dev.main.getId}</div>\n                {dev.main.setId && dev.main.setId !== dev.main.getId ? (<div className={classes.devSubLineSetId}>{dev.main.setId}</div>) : null}\n            </div>\n\n        </div>));\n\n        dev.attributes.forEach(attr => {\n            result.push((<div key={'sub' + attr.getId} className={classes.devSubLine} style={{background}}>\n                <div className={classes.devSubLineName}>{attr.name.toUpperCase()}</div>\n                <div className={classes.devSubSubLine}>\n                    <div>{attr.getId}</div>\n                    {attr.setId && attr.setId !== attr.getId ? (<div className={classes.devSubLineSetId}>{attr.setId}</div>) : null}\n                </div>\n            </div>));\n        });\n\n        /*if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n        }*/\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        //return (<div key={lineNum}>{JSON.stringify(dev)}</div>);\n        const expanded = this.state.expanded.indexOf(dev.name) !== -1;\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(dev.iobID) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (dev.iobID === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        //const isComplex = dev.\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {dev.attributes.length ?\n                        (<Badge badgeContent={dev.attributes.length} color=\"primary\">{expanded ? (<IconCollapse/>) : (<IconExpand />)}</Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{dev.name}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.description}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                <IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(dev.iobID)}><IconEdit fontSize=\"middle\" /></IconButton>\n                <IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(dev.iobID)}><IconDelete fontSize=\"middle\" /></IconButton>\n\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].name.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nAlisaDevices.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AlisaDevices);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Utils from '@iobroker/adapter-react/Components/Utils'\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from '@material-ui/core/Input';\nimport Badge from '@material-ui/core/Badge';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {MdAdd as IconAdd} from 'react-icons/md';\nimport {MdRefresh as IconRefresh} from 'react-icons/md';\nimport {MdClear as IconClear} from 'react-icons/md';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport {MdFormatAlignJustify as IconExpand} from 'react-icons/md';\nimport {MdDragHandle as IconCollapse} from 'react-icons/md';\n\nimport {FaPowerOff as IconOn} from 'react-icons/fa';\nimport {FaThermometerHalf as IconTemperature} from 'react-icons/fa';\nimport {FaLongArrowAltUp as IconUp} from 'react-icons/fa';\nimport {FaLongArrowAltDown as IconDown} from 'react-icons/fa';\nimport {FaPercentage as IconPercentage} from 'react-icons/fa';\nimport {FaPalette as IconColor} from 'react-icons/fa';\nimport {FaLightbulb as IconBulb} from 'react-icons/fa';\nimport {FaLockOpen as IconLock} from 'react-icons/fa';\nimport {FaThermometer as IconThermometer} from 'react-icons/fa';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\n\nconst colorOn = '#aba613';\nconst colorOff = '#444';\nconst colorSet = '#00c6ff';\nconst colorRead = '#00bc00';\nconst CHANGED_COLOR = '#e7000040';\nconst DEFAULT_CHANNEL_COLOR = '#e9e9e9';\nconst LAST_CHANGED_COLOR = '#b4ffbe';\n\nconst actionsMapping = {\n    turnOn: {color: colorOn, icon: IconOn, desc: 'Turn on'},\n    turnOff: {color: colorOff, icon: IconOn, desc: 'Turn off'},\n\n    setTargetTemperature: {color: colorSet, icon: IconTemperature, desc: 'Set target temperature'},\n    incrementTargetTemperature: {color: colorOn, icon: IconUp, desc: 'Increment target temperature'},\n    decrementTargetTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement target temperature'},\n\n    setPercentage: {color: colorSet, icon: IconPercentage, desc: 'Set percentage'},\n    incrementPercentage: {color: colorOn, icon: IconUp, desc: 'Increment percentage'},\n    decrementPercentage: {color: colorOff, icon: IconDown, desc: 'Decrement percentage'},\n\n    setColor: {color: colorSet, icon: IconColor, desc: 'Set color'},\n\n    setColorTemperature: {color: colorSet, icon: IconBulb, desc: 'Set color temperature'},\n    incrementColorTemperature: {color: colorOn, icon: IconUp, desc: 'Increment color temperature'},\n    decrementColorTemperature: {color: colorOff, icon: IconDown, desc: 'Decrement color temperature'},\n\n    getTargetTemperature: {color: colorRead, icon: IconThermometer, desc: 'Get target temperature'},\n    getTemperatureReading: {color: colorRead, icon: IconThermometer, desc: 'Get actual temperature'},\n\n    setLockState: {color: colorSet, icon: IconLock, desc: 'Set lock state'},\n    getLockState: {color: colorRead, icon: IconLock, desc: 'Read lock state'},\n};\n\nconst SMARTTYPES = ['LIGHT', 'SWITCH', 'THERMOSTAT', 'ACTIVITY_TRIGGER', 'SCENE_TRIGGER', 'SMARTPLUG', 'SMARTLOCK', 'CAMERA'];\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20,\n        height: '100%',\n        overflow: 'hidden'\n    },\n    columnDiv: {\n        height: 'calc(100% - 40px)',\n        overflow: 'auto',\n        minWidth: 300\n    },\n    filter: {\n        margin: 0\n    },\n    button: {\n        marginRight: 20\n    },\n    devLineExpand: {\n        marginRight: 10,\n    },\n    devLineEnabled: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n    devLineEdit: {\n        position: 'absolute',\n        top: 5,\n        right: 50\n    },\n    devLineDelete: {\n        position: 'absolute',\n        top: 5,\n        right: 0\n    },\n    devLineName: {\n\n    },\n    devLineNumber:{\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        width: 15,\n    },\n    editedId: {\n        fontStyle: 'italic'\n    },\n    enumLineSubName:{\n        fontStyle: 'italic',\n    },\n    devLine: {\n        height: 48,\n        width: '100%',\n        position: 'relative'\n    },\n    devLineDescription: {\n        display: 'block',\n        fontStyle: 'italic',\n        fontSize: 12\n    },\n    devLineActions: {\n        fontStyle: 'italic',\n        fontSize: 12,\n        paddingLeft: 50,\n        display: 'inline-block',\n    },\n    devLineProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    channelLineActions: {\n        width: 80\n    },\n    devLineNameBlock: {\n        display: 'inline-block',\n        width: 'calc(100% - 350px)'\n    },\n    columnHeader: {\n        background: theme.palette.primary.light,\n        padding: 10,\n        color: theme.palette.primary.contrastText\n    },\n    devModified: {\n        fontStyle: 'italic'\n    },\n    actionIcon: {\n        width: 16\n    },\n\n    devSubLine: {\n        position: 'relative',\n        height: 48\n    },\n    devSubLineName: {\n        marginLeft: 5,\n        marginTop: 14,\n        display: 'inline-block',\n        fontSize: 13,\n        width: 'calc(100% - 400px)'\n    },\n    devSubSubLineName:  {\n        fontSize: 8,\n        fontStyle: 'italic',\n        display: 'block'\n    },\n    devSubLineByOn: {\n        marginLeft: 5\n    },\n    devSubLineDelete: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        padding: 0\n    },\n    devSubLineEdit: {\n        position: 'absolute',\n        top: 12,\n        right: 62,\n        padding: 0\n    },\n    devSubLineTypeTitle: {\n        marginTop: 0\n    }\n});\n\nclass GoogleSmartNames extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!actionsMapping.translated) {\n            Object.keys(actionsMapping).forEach(a => actionsMapping[a].desc = I18n.t(actionsMapping[a].desc));\n            actionsMapping.translated = true;\n        }\n\n        this.state = {\n            editedSmartName: '',\n            editId: '',\n            editObjectName: '',\n            deleteId: '',\n\n            showSelectId: false,\n            showConfirmation: '',\n            changed: [],\n            devices: [],\n            message: '',\n            filter: '',\n            loading: true,\n            browse: false,\n            expanded: [],\n            lastChanged: ''\n        };\n\n        this.timerChanged = null;\n        this.browseTimer = null;\n        this.browseTimerCount = 0;\n        this.editedSmartName = '';\n\n        this.waitForUpdateID = null;\n        this.onReadyUpdateBound = this.onReadyUpdate.bind(this);\n        this.onResultUpdateBound = this.onResultUpdate.bind(this);\n\n        this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`).then(obj => {\n            this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`).then(state => {\n                if (!obj || !obj.common || (!obj.common.enabled && (!state || !state.val))) {\n                    this.setState({message: I18n.t('Instance must be enabled'), loading: false, devices: []});\n                } else {\n                    this.browse();\n                }\n            });\n        });\n    }\n\n    browse(isIndicate) {\n        if (Date.now() - this.lastBrowse < 500) return;\n        this.lastBrowse = Date.now();\n        if (isIndicate) {\n            this.setState({loading: true, browse: true});\n        } else {\n            this.setState({browse: true});\n        }\n        console.log('Send BROWSE!');\n        this.browseTimer = setTimeout(() => {\n            console.log('Browse timeout!');\n            this.browseTimer = null;\n            this.browseTimerCount++;\n            if (this.browseTimerCount < 5) {\n                this.browse(isIndicate);\n            } else {\n                this.setState({message: I18n.t('Cannot read devices!')});\n            }\n        }, 10000);\n\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null, list => {\n            this.browseTimer && clearTimeout(this.browseTimer);\n            this.browseTimerCount = 0;\n            this.browseTimer = null;\n            if (this.waitForUpdateID) {\n                if (!this.onEdit(this.waitForUpdateID, list)) {\n                    this.setState({message: I18n.t('Device %s was not added', this.waitForUpdateID)});\n                }\n                this.waitForUpdateID = null;\n            }\n            console.log('BROWSE received.');\n\n            this.setState({devices: list, loading: false, changed: [], browse: false});\n        });\n    }\n\n    onReadyUpdate(id, state) {\n        console.log(`Update ${id} ${state ? state.val + '/' + state.ack : 'null'}`);\n        if (state && state.ack === true && state.val === true) {\n            if (this.devTimer) clearTimeout(this.devTimer);\n            this.devTimer = setTimeout(() => {\n                this.devTimer = null;\n                this.browse();\n            }, 300);\n        }\n    }\n\n    onResultUpdate(id, state) {\n        state && state.ack === true && state.val && this.setState({message: state.val});\n    }\n\n    componentWillMount() {\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updates`, this.onReadyUpdateBound);\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.smart.updatesResult`, this.onResultUpdateBound);\n        if (this.timerChanged) {\n            clearTimeout(this.timerChanged);\n            this.timerChanged = null;\n        }\n    }\n\n    informInstance(id) {\n        this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'update', id);\n    }\n\n    addChanged(id, cb) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        if (changed.indexOf(id) === -1) {\n            changed.push(id);\n            this.setState({changed}, () => cb && cb());\n        } else {\n            cb && cb();\n        }\n    }\n\n    removeChanged(id) {\n        const changed = JSON.parse(JSON.stringify(this.state.changed));\n        const pos = changed.indexOf(id);\n\n        if (pos !== -1) {\n            changed.splice(pos, 1);\n            this.setState({changed});\n        }\n    }\n\n    onEdit(id, devices) {\n        devices = devices || this.state.devices;\n        const device = devices.find(dev => dev.additionalApplianceDetails.id === id);\n        if (device) {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    let smartName = device.additionalApplianceDetails.friendlyNames ? device.additionalApplianceDetails.friendlyNames : device.friendlyName;\n                    if (typeof smartName === 'object' && smartName) {\n                        smartName = smartName[I18n.getLanguage()] || smartName.en;\n                    }\n                    this.editedSmartName = smartName;\n                    this.setState({editId: id, editedSmartName: smartName, editObjectName: Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()})});\n                });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onAskDelete(deleteId) {\n        this.setState({deleteId, showConfirmation: true});\n    }\n\n    onDelete() {\n        let id = this.state.deleteId;\n        // const device = this.state.devices.find(dev => dev.additionalApplianceDetails.id === id);\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.disableSmartName(obj, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    this.setState({deleteId: '', showConfirmation: false, lastChanged: id});\n\n                    this.timerChanged && clearTimeout(this.timerChanged);\n                    this.timerChanged = setTimeout(() => {\n                        this.setState({lastChanged: ''});\n                        this.timerChanged = null;\n                    }, 30000);\n\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderActions(dev) {\n        // Type\n        const actions = [];\n        if (!dev.traits) {\n            console.log('Something went wrong');\n            return null;\n        }\n        dev.traits.sort((a, b) => {\n            if (a === b) return 0;\n            if (a === 'turnOn') return -1;\n            if (b === 'turnOn') return 1;\n\n            if (a === 'turnOff') return -1;\n            if (b === 'turnOff') return 1;\n            return 0;\n        });\n\n        Object.keys(actionsMapping).forEach(action => {\n            if (dev.actions.indexOf(action) !== -1) {\n                const Icon = actionsMapping[action].icon;\n                actions.push((<span key={action} title={actionsMapping[action].desc}><Icon className={this.props.classes.actionIcon} style={{color: actionsMapping[action].color}}/></span>));\n            }\n        });\n        // add unknown actions\n        for (let a = 0; a < dev.actions.length; a++) {\n            if (!actionsMapping[dev.actions[a]]) {\n                actions.push((<span key={dev.actions[a]}>{dev.actions[a]}</span>));\n            }\n        }\n        return actions;\n    }\n\n    onExpand(lineNum) {\n        const expanded = JSON.parse(JSON.stringify(this.state.expanded));\n        const pos = expanded.indexOf(this.state.devices[lineNum].friendlyName);\n        if (pos === -1) {\n            expanded.push(this.state.devices[lineNum].friendlyName);\n        } else {\n            expanded.splice(pos, 1);\n        }\n        this.setState({expanded});\n    }\n\n    renderSelectByOn(dev, lineNum, id, type) {\n        // type = '-', 'stored', false or number [5-100]\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"\"><em>{I18n.t('Default')}</em></MenuItem>),\n                (<MenuItem key=\"last\" value=\"stored\">{I18n.t('last value')}</MenuItem>)\n            ];\n            for (let i = 5; i <= 100; i += 5) {\n                items.push((<MenuItem  key={i.toString()} value={i.toString()}>{i}%</MenuItem>));\n            }\n            return (<FormControl className={this.props.classes.devSubLineByOn}>\n                <Select className={this.props.classes.devSubLineByOnSelect} value={(type || '').toString()} onChange={e => this.onParamsChange(id, e.target.value)}>{items}</Select>\n                <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('by ON')}</FormHelperText>\n            </FormControl>);\n        } else {\n            return null;\n        }\n    }\n\n    onParamsChange(id, byON, type) {\n        this.addChanged(id, () => {\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, undefined, byON, type, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n\n                    if (this.state.lastChanged !== id) {\n                        this.setState({lastChanged: id});\n                        this.timerChanged && clearTimeout(this.timerChanged);\n                        this.timerChanged = setTimeout(() => {\n                            this.setState({lastChanged: ''});\n                            this.timerChanged = null;\n                        }, 30000);\n                    }\n\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderSelectType(dev, lineNum, id, type) {\n        if (type !== false) {\n            const items = [\n                (<MenuItem key=\"_\" value=\"_\"><em>{I18n.t('no type')}</em></MenuItem>)\n            ];\n            for (let i = 0; i < SMARTTYPES.length; i++) {\n                items.push((<MenuItem  key={SMARTTYPES[i]} value={SMARTTYPES[i]}><em>{I18n.t(SMARTTYPES[i])}</em></MenuItem>));\n            }\n            return (\n                <FormControl>\n                    <Select value={type || '_'} onChange={e => this.onParamsChange(id, undefined, e.target.value)}>{items}</Select>\n                    <FormHelperText className={this.props.classes.devSubLineTypeTitle}>{I18n.t('Types')}</FormHelperText>\n                </FormControl>);\n        } else {\n            return '';\n        }\n    }\n\n    renderChannels(dev, lineNum) {\n        const result = [];\n        const classes = this.props.classes;\n\n        if (dev.additionalApplianceDetails.group) {\n            const channels   = dev.additionalApplianceDetails.channels;\n            const names      = dev.additionalApplianceDetails.names;\n            const types      = dev.additionalApplianceDetails.byONs;\n            const smarttypes = dev.additionalApplianceDetails.smartTypes;\n\n            let c = 0;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n                        if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                        result.push((<div key={'sub' + id} className={classes.devSubLine} style={(c % 2) ? {} : {background}}>\n                            <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions}>{this.renderActions(channels[chan][i])}</div>\n                            <div className={classes.devSubLineName} title={id}>{(names[id] || id)}\n                                {id !== names[id] ? (<span className={classes.devSubSubLineName}>{id}</span>) : null}\n                            </div>\n                            {this.renderSelectType(dev, lineNum, id, smarttypes[id])}\n                            {this.renderSelectByOn(dev, lineNum, id, types[id])}\n                            <IconButton aria-label=\"Delete\" className={this.props.classes.devSubLineDelete} onClick={() => this.onAskDelete(id, lineNum)}><IconDelete fontSize=\"middle\" /></IconButton>\n                        </div>));\n                        c++;\n                    }\n                }\n            }\n        } else {\n            const id = dev.additionalApplianceDetails.id;\n            const name = dev.additionalApplianceDetails.name || id;\n            let background = this.state.changed.indexOf(id) !== -1 ? CHANGED_COLOR : DEFAULT_CHANNEL_COLOR;\n            if (this.state.lastChanged === id && background === DEFAULT_CHANNEL_COLOR) {\n                background = LAST_CHANGED_COLOR;\n            }\n            result.push((<div key={'sub' + id} className={classes.devSubLine} style={{background}}>\n                <div className={this.props.classes.devLineActions + ' ' + this.props.classes.channelLineActions} style={{width: 80}}>{this.renderActions(dev)}</div>\n                <div className={classes.devSubLineName} title={(id || '')}>{name}</div>\n                {this.renderSelectType(dev, lineNum, id, dev.additionalApplianceDetails.smartType)}\n                {this.renderSelectByOn(dev, lineNum, id, dev.additionalApplianceDetails.byON)}\n            </div>));\n        }\n        return result;\n    }\n\n    renderDevice(dev, lineNum) {\n        let friendlyName = dev.friendlyName;\n        let title;\n        if (!dev.additionalApplianceDetails.group && dev.additionalApplianceDetails.nameModified) {\n            title = friendlyName;\n        } else {\n            title = (<span className={this.props.classes.devModified} title={I18n.t('modified')}>{friendlyName}</span>);\n        }\n\n        let devCount = 0;\n        for (const ch in dev.additionalApplianceDetails.channels) {\n            if (dev.additionalApplianceDetails.channels.hasOwnProperty(ch)) {\n                devCount += dev.additionalApplianceDetails.channels[ch].length;\n            }\n        }\n        devCount = devCount || 1;\n        const expanded = this.state.expanded.indexOf(friendlyName) !== -1;\n        const id = dev.additionalApplianceDetails.id;\n\n        let background = (lineNum % 2) ? '#f1f1f1' : 'inherit';\n        const changed = this.state.changed.indexOf(id) !== -1;\n        if (changed) {\n            background = CHANGED_COLOR;\n        } else if (id === this.state.lastChanged) {\n            background = LAST_CHANGED_COLOR;\n        }\n\n        // If some of sub channels in change list or in last changed\n        if (dev.additionalApplianceDetails.group && !changed && id !== this.state.lastChanged) {\n            const channels = dev.additionalApplianceDetails.channels;\n            for (const chan in channels) {\n                if (channels.hasOwnProperty(chan)) {\n                    for (let i = 0; i < channels[chan].length; i++) {\n                        const id = channels[chan][i].id;\n                        if (this.state.changed.indexOf(id) !== -1) {\n                            background = CHANGED_COLOR;\n                        } else if (this.state.lastChanged === id) {\n                            background = LAST_CHANGED_COLOR;\n                        }\n                    }\n                }\n            }\n        }\n\n        return [\n            (<div key={'line' + lineNum} className={this.props.classes.devLine} style={{background}}>\n                <div className={this.props.classes.devLineNumber}>{lineNum + 1}.</div>\n                <IconButton className={this.props.classes.devLineExpand} onClick={() => this.onExpand(lineNum)}>\n                    {devCount > 1 ?\n                        (<Badge badgeContent={devCount} color=\"primary\">\n                            {expanded ? (<IconCollapse/>) : (<IconExpand />)}\n                        </Badge>) :\n                        (expanded ? (<IconCollapse/>) : (<IconExpand />))}\n                </IconButton>\n                <div className={this.props.classes.devLineNameBlock} style={{display: 'inline-block', position: 'relative'}}>\n                    <span className={this.props.classes.devLineName}>{title}</span>\n                    <span className={this.props.classes.devLineDescription}>{dev.friendlyDescription}</span>\n                    {changed ? (<CircularProgress className={this.props.classes.devLineProgress} size={20}/>) : null}\n                </div>\n                <span className={this.props.classes.devLineActions}>{this.renderActions(dev)}</span>\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Edit\" className={this.props.classes.devLineEdit} onClick={() => this.onEdit(id)}><IconEdit fontSize=\"middle\" /></IconButton>) : null}\n                {!dev.additionalApplianceDetails.group ?\n                    (<IconButton aria-label=\"Delete\" className={this.props.classes.devLineDelete} onClick={() => this.onAskDelete(id)}><IconDelete fontSize=\"middle\" /></IconButton>) : null}\n            </div>),\n            expanded ? this.renderChannels(dev, lineNum) : null\n        ];\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\n        } else {\n            return null;\n        }\n    }\n\n    changeSmartName(e) {\n        e && e.preventDefault();\n        // Check if the name is duplicate\n        this.addChanged(this.state.editId, () => {\n            const id = this.state.editId;\n            this.setState({editId: '', editObjectName: '', lastChanged: id});\n\n            this.timerChanged && clearTimeout(this.timerChanged);\n            this.timerChanged = setTimeout(() => {\n                this.setState({lastChanged: ''});\n                this.timerChanged = null;\n            }, 30000);\n\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    Utils.updateSmartName(obj, this.editedSmartName, undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                    return this.props.socket.setObject(id, obj);\n                })\n                .then(() => {\n                    // update obj\n                    this.informInstance(id);\n                })\n                .catch(err => this.props.onError(err));\n        });\n    }\n\n    renderEditDialog() {\n        if (this.state.editId) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"message-dialog-title\"\n                aria-describedby=\"message-dialog-description\"\n            >\n                <DialogTitle id=\"message-dialog-title\">{this.props.title || I18n.t('Smart name for %s', this.state.editObjectName)}</DialogTitle>\n                <DialogContent>\n                    <p><span>ID:</span> <span className={this.props.classes.editedId}>{this.state.editId}</span></p>\n                    <TextField\n                        style={{width: '100%'}}\n                        label={I18n.t('Smart name')}\n                        onKeyDown={e =>\n                            e.keyCode === 13 && this.changeSmartName(e)}\n                        onChange={e => this.editedSmartName = e.target.value}\n                        defaultValue={this.state.editedSmartName}\n                        helperText={I18n.t('You can enter several names divided by comma')}\n                        margin=\"normal\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.changeSmartName()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => {\n                        this.editedSmartName = null;\n                        this.setState({editId: '', editedSmartName: ''});\n                    }}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    renderConfirmDialog() {\n        if (this.state.showConfirmation) {\n            return (<Dialog\n                open={true}\n                maxWidth=\"sm\"\n                fullWidth={true}\n                onClose={() => this.handleOk()}\n                aria-labelledby=\"confirmation-dialog-title\"\n                aria-describedby=\"confirmation-dialog-description\"\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">{this.props.title || I18n.t('Device will be disabled.')}</DialogTitle>\n                <DialogContent>\n                    <p>{I18n.t('Are you sure?')}</p>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.onDelete()} color=\"primary\" autoFocus>{I18n.t('Ok')}</Button>\n                    <Button onClick={() => this.setState({showConfirmation: ''})}>{I18n.t('Cancel')}</Button>\n                </DialogActions>\n            </Dialog>)\n        } else {\n            return null;\n        }\n    }\n\n    getSelectIdDialog() {\n        if (this.state.showSelectId) {\n            return (<DialogSelectID\n                key=\"dialogSelectID1\"\n                prefix={'../..'}\n                connection={this.props.socket}\n                selected={''}\n                statesOnly={true}\n                onClose={() => this.setState({showSelectId: false})}\n                onOk={(selected, name) => {\n                    this.setState({showSelectId: false});\n\n                    this.props.socket.getObject(selected)\n                        .then(obj => {\n                            if (obj) {\n                                const name = Utils.getObjectNameFromObj(obj, null, {language: I18n.getLanguage()});\n                                Utils.updateSmartName(obj, (name || I18n.t('Device name')).replace(/[-_.]+/g, ' '), undefined, undefined, this.props.adapterName + '.' + this.props.instance, this.props.native.noCommon);\n                                this.addChanged(obj._id);\n                                this.waitForUpdateID = obj._id;\n\n                                if (this.state.lastChanged !== obj._id) {\n                                    this.setState({lastChanged: obj._id});\n                                    this.timerChanged && clearTimeout(this.timerChanged);\n                                    this.timerChanged = setTimeout(() => {\n                                        this.setState({lastChanged: ''});\n                                        this.timerChanged = null;\n                                    }, 30000);\n                                }\n\n                                this.props.socket.setObject(obj._id, obj)\n                                    .then(() => this.informInstance(obj._id))\n                                    .catch(err => this.setState({message: err}));\n                            } else {\n                                this.setState({message: I18n.t('Invalid ID')});\n                            }\n                        });\n                }}\n            />);\n        } else {\n            return null;\n        }\n    }\n\n    renderDevices() {\n        const filter = this.state.filter.toLowerCase();\n        const result = [];\n        for (let i = 0; i < this.state.devices.length; i++) {\n            if (this.state.filter && this.state.devices[i].friendlyName.toLowerCase().indexOf(filter) === -1 ) continue;\n            result.push(this.renderDevice(this.state.devices[i], i));\n        }\n        return (<div key=\"listDevices\" className={this.props.classes.columnDiv}>{result}</div>);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<CircularProgress  key=\"alexaProgress\" />);\n        }\n\n        return (\n            <form key=\"alexa\" className={this.props.classes.tab}>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={this.props.classes.button} onClick={() => this.setState({showSelectId: true})}><IconAdd /></Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"Refresh\" className={this.props.classes.button}\n                      onClick={() => this.browse(true)} disabled={this.state.browse}>{this.state.browse ? (<CircularProgress size={20} />) : (<IconRefresh/>)}</Fab>\n\n                <Input\n                    placeholder={I18n.t('Filter')}\n                    className={this.state.filter}\n                    value={this.state.filter}\n                    onChange={e => this.setState({filter: e.target.value})}\n                />\n                <IconButton aria-label=\"Clear\" className={this.props.classes.button} onClick={() => this.setState({filter: ''})}><IconClear fontSize=\"large\" /></IconButton>\n                {this.renderDevices()}\n                {this.renderMessage()}\n                {this.renderEditDialog()}\n                {this.getSelectIdDialog()}\n                {this.renderConfirmDialog()}\n            </form>\n        );\n    }\n}\n\nGoogleSmartNames.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GoogleSmartNames);\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport TabOptions from './Tabs/Options';\nimport TabExtended from './Tabs/Extended';\nimport TabServices from './Tabs/Services';\nimport TabEnums from './Tabs/Enums';\nimport TabAlexaSmartNames from './Tabs/AlexaSmartNames';\nimport TabAlisaSmartNames from './Tabs/AlisaSmartNames';\nimport TabGoogleSmartNames from './Tabs/GoogleSmartNames';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = {...props};\n        extendedProps.encryptedFields = ['pass'];\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n        super(extendedProps);\n    }\n\n    getSelectedTab() {\n        const tab = this.state.selectedTab;\n        if (!tab || tab === 'options') {\n            return 0;\n        } else\n        if (tab === 'enums') {\n            return 1;\n        } else\n        if (tab === 'alexa') {\n            return 2;\n        } else\n        if (tab === 'google') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0);\n            return 2 + offset;\n        }\n        if (tab === 'alisa') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'extended') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 2 + offset;\n        } else\n        if (tab === 'services') {\n            const offset = (this.state.native.amazonAlexa ? 1 : 0) + (this.state.native.googleHome ? 1 : 0) + (this.state.native.yandexAlisa ? 1 : 0);\n            return 3 + offset;\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return (<Loader theme={this.state.themeType}/>);\n        }\n\n        return (\n            <div className=\"App\">\n                <AppBar position=\"static\">\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\n                        <Tab label={I18n.t('Smart enums')} data-name=\"enums\" />\n                        {this.state.native.amazonAlexa && <Tab selected={this.state.selectedTab === 'alexa'} label={I18n.t('Alexa devices')} data-name=\"alexa\" />}\n                        {this.state.native.googleHome && <Tab selected={this.state.selectedTab === 'google'} label={I18n.t('Google devices')} data-name=\"google\" />}\n                        {this.state.native.yandexAlisa && <Tab selected={this.state.selectedTab === 'alisa'} label={I18n.t('Alisa devices')} data-name=\"alisa\" />}\n                        <Tab label={I18n.t('Extended options')} data-name=\"extended\" />\n                        <Tab label={I18n.t('Services and IFTTT')} data-name=\"services\" />\n                    </Tabs>\n                </AppBar>\n\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\n                        key=\"options\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        onLoad={native => this.onLoadConfig(native)}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                    />)}\n                    {this.state.selectedTab === 'enums' && (<TabEnums\n                        key=\"enums\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                    />)}\n                    {this.state.selectedTab === 'alexa' && (<TabAlexaSmartNames\n                        key=\"alexa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                        {this.state.selectedTab === 'google' && (<TabGoogleSmartNames\n                        key=\"google\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'alisa' && (<TabAlisaSmartNames\n                        key=\"alisa\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        adapterName={this.adapterName}\n                        instance={this.instance}\n                    />)}\n                    {this.state.selectedTab === 'extended' && (<TabExtended\n                        key=\"extended\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                    {this.state.selectedTab === 'services' && (<TabServices\n                        key=\"services\"\n                        common={this.common}\n                        socket={this.socket}\n                        native={this.state.native}\n                        onError={text => this.setState({errorText: text})}\n                        instance={this.instance}\n                        adapterName={this.adapterName}\n                        onShowError={error => this.showError(error)}\n                        onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    />)}\n                </div>\n                {this.renderError()}\n                {this.renderSaveCloseButtons()}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createTheme from '@iobroker/adapter-react/createTheme';\n\nlet theme = 'light';\n\nfunction build() {\n    return ReactDOM.render(<MuiThemeProvider theme={createTheme(theme)}>\n        <App onThemeChange={_theme => {\n            theme = _theme;\n            build();\n        }}/>\n    </MuiThemeProvider>, document.getElementById('root'));\n}\n\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}